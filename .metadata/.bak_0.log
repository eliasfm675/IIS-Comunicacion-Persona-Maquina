!SESSION 2024-12-25 17:03:17.334 -----------------------------------------------
eclipse.buildId=4.23.0.I20220308-0310
java.version=17.0.2
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=es_ES
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

This is a continuation of log file C:\Users\El√≠as\OneDrive\Escritorio\Software\2do\CPM\.metadata\.bak_0.log
Created Time: 2024-12-25 19:20:29.070

!ENTRY org.eclipse.jdt.ui 4 0 2024-12-25 19:20:29.070
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2024-12-25 19:20:29.946
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package uo.cpm.modulo.ui;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import java.awt.CardLayout;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.BorderLayout;
import javax.swing.JLabel;
import javax.swing.JButton;
import javax.swing.BoxLayout;
import java.awt.GridLayout;
import java.awt.Image;

import javax.swing.ImageIcon;
import java.awt.Color;
import java.awt.Font;
import javax.swing.border.LineBorder;
import javax.swing.SwingConstants;
import java.awt.FlowLayout;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.Component;
import javax.swing.JTextField;
import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.KeyStroke;
import java.awt.event.KeyEvent;
import java.awt.event.InputEvent;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

public class VentanaPrincipal extends JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private JPanel contentPane;
	private JPanel panelInicio;
	private JPanel panelBienvenida;
	private JPanel panelIdiomas;
	private JButton btnSpanish;
	private JLabel lblIngredients;
	private JButton btnEnglish;
	private JButton btnFrench;
	private JButton btnItalian;
	private JPanel panelSaludo;
	private JLabel lblWelcome;
	private JButton btnSiguiente_Datos;
	private JLabel lblIngredients2;
	private JLabel lblIngredients2_1;
	private ProcessFrame pf = new  ProcessFrame();
	private JPanel panelRegistro;
	private JPanel panelDatos;
	private JTextField textFieldDNI;
	private JLabel lblDNI;
	private JTextField textFieldReserva;
	private JLabel lblReserva;
	private JMenuBar menuBarDatos;
	private JMenu mnOpciones;
	private JMenuItem mntmSalida;
	private JMenu mnAyuda;
	private JPanel panelBtn;
	private JLabel lblPlaceHolder;
	private JButton btnSiguiente_Menu;
	private JLabel lblPlaceHolder_1;
	private JPanel panelSpacing;
	private JLabel lblPlaceHolder_1_1;
	private JPanel panelMenu;
	private JPanel panelFiltros;
	private JButton btnTodos;
	private JButton btnPizzas;
	private JButton btnEntrantes;
	private JButton btnEnsaladas;
	private JButton btnPostres;
	private JButton btnBebidas;
	private JMenuBar menuBarMenu;
	private JMenu mnOpcionesMenu;
	private JMenuItem mntmSalidaMenu;
	private JMenu mnAyudaMenu;
	private JScrollPane scrollPaneProductos;
	private JPanel panelProductos;
	private JPanel panelFinalizarMenu;
	private JLabel lblPlaceHolderMenu;
	private JButton btnFinalizar;
	private JLabel lblPlaceHolderMenu_2;
	private JLabel lblPlaceHolderMenu_1;
	private JLabel lblPlaceHolderMenu_3;
	private JPanel panelCarrito;
	private JButton btnCarrito;
	private JScrollPane scrollPaneCarrito;
	private JTextArea txtAreaCarrito;
	private ProcessCart pCrt = new  
	class ProcessFrame implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			changeFrame(e);
			
		}

		
		
	}
	protected void changeFrame(ActionEvent e) {
		String frame = e.getActionCommand();
		((CardLayout)getContentPane().getLayout()).show(getContentPane(), frame);
	}
	class ProcessCart implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			showShoppingCart();
			
		}

		
		
	}
	protected void showShoppingCart() {
		if(getTxtAreaCarrito().isVisible()) {
			getTxtAreaCarrito().setVisible(false);
		}else {
			getTxtAreaCarrito().setVisible(true);
		}
	}

	/**
	 * Create the frame.
	 */
	public VentanaPrincipal() {
		setTitle("Uniovi's ");
		setIconImage(Toolkit.getDefaultToolkit().getImage(VentanaPrincipal.class.getResource("/img/logo.png")));
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 870, 530);
		contentPane = new JPanel();
		contentPane.setBackground(new Color(255, 0, 0));
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(new CardLayout(0, 0));
		contentPane.add(getPanelInicio(), "pnInicio");
		contentPane.add(getPanelRegistro(), "pnRegistro");
		contentPane.add(getPanelMenu(), "pnMenu");
	}

	private JPanel getPanelInicio() {
		if (panelInicio == null) {
			panelInicio = new JPanel();
			panelInicio.setBackground(new Color(255, 0, 0));
			panelInicio.setLayout(new BorderLayout(0, 0));
			panelInicio.add(getPanelBienvenida(), BorderLayout.CENTER);
			panelInicio.add(getPanelIdiomas(), BorderLayout.NORTH);
			panelInicio.add(getPanelSaludo(), BorderLayout.SOUTH);
		}
		return panelInicio;
	}
	private JPanel getPanelBienvenida() {
		if (panelBienvenida == null) {
			panelBienvenida = new JPanel();
			panelBienvenida.setBackground(new Color(0, 0, 139));
			panelBienvenida.setLayout(new BorderLayout(0, 0));
			panelBienvenida.add(getLblIngredients(), BorderLayout.CENTER);
			panelBienvenida.add(getLblIngredients2(), BorderLayout.WEST);
			panelBienvenida.add(getLblIngredients2_1(), BorderLayout.EAST);
		}
		return panelBienvenida;
	}
	private JPanel getPanelIdiomas() {
		if (panelIdiomas == null) {
			panelIdiomas = new JPanel();
			panelIdiomas.setBackground(new Color(255, 0, 0));
			panelIdiomas.setLayout(new GridLayout(0, 4, 0, 0));
			panelIdiomas.add(getBtnSpanish());
			panelIdiomas.add(getBtnEnglish());
			panelIdiomas.add(getBtnFrench());
			panelIdiomas.add(getBtnItalian());
		}
		return panelIdiomas;
	}
	private JButton getBtnSpanish() {
		if (btnSpanish == null) {
			btnSpanish = new JButton("");
			btnSpanish.setBackground(new Color(255, 255, 255));
			btnSpanish.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/es.png")));
		}
		return btnSpanish;
	}
	private JLabel getLblIngredients() {
		if (lblIngredients == null) {
			lblIngredients = new JLabel("");
			lblIngredients.setHorizontalAlignment(SwingConstants.CENTER);
			lblIngredients.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/bienvenida.png")));
		}
		return lblIngredients;
	}
	private JButton getBtnEnglish() {
		if (btnEnglish == null) {
			btnEnglish = new JButton("");
			btnEnglish.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/en.png")));
			btnEnglish.setBackground(Color.WHITE);
		}
		return btnEnglish;
	}
	private JButton getBtnFrench() {
		if (btnFrench == null) {
			btnFrench = new JButton("");
			btnFrench.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/fr.png")));
			btnFrench.setBackground(Color.WHITE);
		}
		return btnFrench;
	}
	private JButton getBtnItalian() {
		if (btnItalian == null) {
			btnItalian = new JButton("");
			btnItalian.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/it.png")));
			btnItalian.setBackground(Color.WHITE);
		}
		return btnItalian;
	}
	private JPanel getPanelSaludo() {
		if (panelSaludo == null) {
			panelSaludo = new JPanel();
			panelSaludo.setBackground(new Color(255, 0, 0));
			panelSaludo.setLayout(new GridLayout(0, 2, 0, 0));
			panelSaludo.add(getLblWelcome_1());
			panelSaludo.add(getBtnSiguiente_Datos());
		}
		return panelSaludo;
	}
	private JLabel getLblWelcome_1() {
		if (lblWelcome == null) {
			lblWelcome = new JLabel("\u00A1Bienvenido a Uniovi's!");
			lblWelcome.setHorizontalAlignment(SwingConstants.CENTER);
			lblWelcome.setForeground(Color.WHITE);
			lblWelcome.setFont(new Font("Dialog", Font.BOLD, 28));
			lblWelcome.setBorder(new LineBorder(new Color(0, 0, 0), 0));
			lblWelcome.setBackground(Color.WHITE);
		}
		return lblWelcome;
	}
	private JButton getBtnSiguiente_Datos() {
		if (btnSiguiente_Datos == null) {
			btnSiguiente_Datos = new JButton("Continuar");
			btnSiguiente_Datos.setAlignmentX(Component.RIGHT_ALIGNMENT);
			btnSiguiente_Datos.setBackground(new Color(50, 205, 50));
			btnSiguiente_Datos.setForeground(new Color(255, 255, 255));
			btnSiguiente_Datos.setFont(new Font("SansSerif", Font.PLAIN, 24));
			btnSiguiente_Datos.setMnemonic('C');
			btnSiguiente_Datos.setBorder(new LineBorder(new Color(0, 0, 0), 4, true));
			btnSiguiente_Datos.setActionCommand("pnRegistro");
			btnSiguiente_Datos.addActionListener(pf);
		}
		return btnSiguiente_Datos;
	}
	private JLabel getLblIngredients2() {
		if (lblIngredients2 == null) {
			lblIngredients2 = new JLabel("");
			lblIngredients2.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/PI03.png")));
		}
		return lblIngredients2;
	}
	private JLabel getLblIngredients2_1() {
		if (lblIngredients2_1 == null) {
			lblIngredients2_1 = new JLabel("");
			lblIngredients2_1.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/BE02.png")));
		}
		return lblIngredients2_1;
	}
	private JPanel getPanelRegistro() {
		if (panelRegistro == null) {
			panelRegistro = new JPanel();
			panelRegistro.setLayout(new BorderLayout(0, 0));
			panelRegistro.add(getPanelDatos(), BorderLayout.CENTER);
			panelRegistro.add(getMenuBar_1(), BorderLayout.NORTH);
			panelRegistro.add(getPanelBtn(), BorderLayout.SOUTH);
			panelRegistro.add(getPanelSpacing(), BorderLayout.EAST);
		}
		return panelRegistro;
	}
	private JPanel getPanelDatos() {
		if (panelDatos == null) {
			panelDatos = new JPanel();
			panelDatos.setBackground(new Color(0, 0, 128));
			panelDatos.setLayout(new GridLayout(6, 1, 0, 0));
			panelDatos.add(getLblDNI());
			panelDatos.add(getTextFieldDNI());
			panelDatos.add(getLblReserva());
			panelDatos.add(getTextFieldReserva());
		}
		return panelDatos;
	}
	private JTextField getTextFieldDNI() {
		if (textFieldDNI == null) {
			textFieldDNI = new JTextField();
			textFieldDNI.setFont(new Font("SansSerif", Font.PLAIN, 28));
			textFieldDNI.setColumns(10);
		}
		return textFieldDNI;
	}
	private JLabel getLblDNI() {
		if (lblDNI == null) {
			lblDNI = new JLabel("DNI / NIE:");
			lblDNI.setLabelFor(getTextFieldDNI());
			lblDNI.setDisplayedMnemonic('D');
			lblDNI.setForeground(new Color(255, 255, 255));
			lblDNI.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return lblDNI;
	}
	private JTextField getTextFieldReserva() {
		if (textFieldReserva == null) {
			textFieldReserva = new JTextField();
			textFieldReserva.setFont(new Font("SansSerif", Font.PLAIN, 28));
			textFieldReserva.setColumns(10);
		}
		return textFieldReserva;
	}
	private JLabel getLblReserva() {
		if (lblReserva == null) {
			lblReserva = new JLabel("N\u00BA / C\u00F3digo de reserva");
			lblReserva.setDisplayedMnemonic('N');
			lblReserva.setLabelFor(getTextFieldReserva());
			lblReserva.setForeground(new Color(255, 255, 255));
			lblReserva.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return lblReserva;
	}

	private JMenuBar getMenuBar_1() {
		if (menuBarDatos == null) {
			menuBarDatos = new JMenuBar();
			menuBarDatos.add(getMnOpciones());
			menuBarDatos.add(getMnAyuda());
		}
		return menuBarDatos;
	}
	private JMenu getMnOpciones() {
		if (mnOpciones == null) {
			mnOpciones = new JMenu("Opciones");
			mnOpciones.setMnemonic('O');
			mnOpciones.add(getMntmSalida());
		}
		return mnOpciones;
	}
	private JMenuItem getMntmSalida() {
		if (mntmSalida == null) {
			mntmSalida = new JMenuItem("Salida");
			mntmSalida.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, InputEvent.CTRL_DOWN_MASK));
		}
		return mntmSalida;
	}
	private JMenu getMnAyuda() {
		if (mnAyuda == null) {
			mnAyuda = new JMenu("Ayuda");
			mnAyuda.setMnemonic('A');
		}
		return mnAyuda;
	}
	private JPanel getPanelBtn() {
		if (panelBtn == null) {
			panelBtn = new JPanel();
			panelBtn.setBackground(new Color(0, 0, 128));
			panelBtn.setLayout(new GridLayout(1, 0, 0, 0));
			panelBtn.add(getLblPlaceHolder_1());
			panelBtn.add(getLblPlaceHolder());
			panelBtn.add(getBtnSiguiente_Menu());
		}
		return panelBtn;
	}
	private JLabel getLblPlaceHolder() {
		if (lblPlaceHolder == null) {
			lblPlaceHolder = new JLabel("");
			lblPlaceHolder.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder;
	}
	private JButton getBtnSiguiente_Menu() {
		if (btnSiguiente_Menu == null) {
			btnSiguiente_Menu = new JButton("Continuar");
			btnSiguiente_Menu.setForeground(new Color(255, 255, 255));
			btnSiguiente_Menu.setBackground(new Color(50, 205, 50));
			btnSiguiente_Menu.setFont(new Font("SansSerif", Font.PLAIN, 28));
			btnSiguiente_Menu.setMnemonic('C');
			btnSiguiente_Menu.setActionCommand("pnMenu");
			btnSiguiente_Menu.addActionListener(pf);
		}
		return btnSiguiente_Menu;
	}
	private JLabel getLblPlaceHolder_1() {
		if (lblPlaceHolder_1 == null) {
			lblPlaceHolder_1 = new JLabel("");
			lblPlaceHolder_1.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder_1;
	}
	private JPanel getPanelSpacing() {
		if (panelSpacing == null) {
			panelSpacing = new JPanel();
			panelSpacing.setBackground(new Color(0, 0, 128));
			panelSpacing.add(getLblPlaceHolder_1_1());
		}
		return panelSpacing;
	}
	private JLabel getLblPlaceHolder_1_1() {
		if (lblPlaceHolder_1_1 == null) {
			lblPlaceHolder_1_1 = new JLabel("                                                                                                            ");
			lblPlaceHolder_1_1.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder_1_1;
	}
	private JPanel getPanelMenu() {
		if (panelMenu == null) {
			panelMenu = new JPanel();
			panelMenu.setLayout(new BorderLayout(0, 0));
			panelMenu.add(getPanelFiltros(), BorderLayout.WEST);
			panelMenu.add(getMenuBar_2(), BorderLayout.NORTH);
			panelMenu.add(getScrollPaneProductos(), BorderLayout.CENTER);
			panelMenu.add(getPanelFinalizarMenu(), BorderLayout.SOUTH);
			panelMenu.add(getPanelCarrito(), BorderLayout.EAST);
		}
		return panelMenu;
	}
	private JPanel getPanelFiltros() {
		if (panelFiltros == null) {
			panelFiltros = new JPanel();
			panelFiltros.setLayout(new GridLayout(6, 0, 0, 0));
			panelFiltros.add(getBtnTodos());
			panelFiltros.add(getBtnPizzas());
			panelFiltros.add(getBtnEntrantes());
			panelFiltros.add(getBtnEnsaladas());
			panelFiltros.add(getBtnPostres());
			panelFiltros.add(getBtnBebidas());
		}
		return panelFiltros;
	}
	private JButton getBtnTodos() {
		if (btnTodos == null) {
			btnTodos = new JButton("");
			btnTodos.setBackground(new Color(255, 255, 255));
			btnTodos.setToolTipText("Filtrar - Todos");
			setImagenAdaptada(btnTodos, "/img/bienvenida.png");
		}
		return btnTodos;
	}
	private JButton getBtnPizzas() {
		if (btnPizzas == null) {
			btnPizzas = new JButton("");
			btnPizzas.setBackground(new Color(255, 255, 255));
			btnPizzas.setToolTipText("Filtrar - Pizzas");
			setImagenAdaptada(btnPizzas,"/img/PI01.png");
		}
		return btnPizzas;
	}
	private JButton getBtnEntrantes() {
		if (btnEntrantes == null) {
			btnEntrantes = new JButton("");
			btnEntrantes.setBackground(new Color(255, 255, 255));
			btnEntrantes.setToolTipText("Filtrar - Entrantes");
			setImagenAdaptada(btnEntrantes, "/img/ET02.png");
		}
		return btnEntrantes;
	}
	private JButton getBtnEnsaladas() {
		if (btnEnsaladas == null) {
			btnEnsaladas = new JButton("");
			btnEnsaladas.setBackground(new Color(255, 255, 255));
			btnEnsaladas.setToolTipText("Filtrar - Ensaladas");
			setImagenAdaptada(btnEnsaladas, "/img/EN02.png");
		}
		return btnEnsaladas;
	}
	private JButton getBtnPostres() {
		if (btnPostres == null) {
			btnPostres = new JButton("");
			btnPostres.setBackground(new Color(255, 255, 255));
			btnPostres.setToolTipText("Filtrar - Postres");
			setImagenAdaptada(btnPostres, "/img/PO01.png");
		}
		return btnPostres;
	}
	private JButton getBtnBebidas() {
		if (btnBebidas == null) {
			btnBebidas = new JButton("");
			btnBebidas.setBackground(new Color(255, 255, 255));
			btnBebidas.setToolTipText("Filtrar - Bebidas");
			setImagenAdaptada(btnBebidas, "/img/BE03.png");
		}
		return btnBebidas;
	}
	private void setImagenAdaptada(JButton boton, String rutaImagen){
		 Image imgOriginal = new ImageIcon(getClass().getResource(rutaImagen)).getImage(); 
		 Image imgEscalada = imgOriginal.getScaledInstance((int) (100), (int) (100),Image.SCALE_SMOOTH);
		 //si se quiere reescalar la ventana, este 100 tendria que cambiarse por el width y el height  respectivamente de la imagen para que as√≠ se reescale cada vez que cambias el tama√±o
		 //adem√°s este m√©todo deber√≠a llamarse en el constructor de la ventana mientras se usa un evento componentResized
		 boton.setIcon(new ImageIcon(imgEscalada));
	}
	private JMenuBar getMenuBar_2() {
		if (menuBarMenu == null) {
			menuBarMenu = new JMenuBar();
			menuBarMenu.add(getMnOpcionesMenu());
			menuBarMenu.add(getMnAyudaMenu());
		}
		return menuBarMenu;
	}
	private JMenu getMnOpcionesMenu() {
		if (mnOpcionesMenu == null) {
			mnOpcionesMenu = new JMenu("Opciones");
			mnOpcionesMenu.setMnemonic('O');
			mnOpcionesMenu.add(getMntmSalidaMenu());
		}
		return mnOpcionesMenu;
	}
	private JMenuItem getMntmSalidaMenu() {
		if (mntmSalidaMenu == null) {
			mntmSalidaMenu = new JMenuItem("Salida");
			mntmSalidaMenu.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, InputEvent.CTRL_DOWN_MASK));
		}
		return mntmSalidaMenu;
	}
	private JMenu getMnAyudaMenu() {
		if (mnAyudaMenu == null) {
			mnAyudaMenu = new JMenu("Ayuda");
			mnAyudaMenu.setMnemonic('A');
		}
		return mnAyudaMenu;
	}
	private JScrollPane getScrollPaneProductos() {
		if (scrollPaneProductos == null) {
			scrollPaneProductos = new JScrollPane();
			scrollPaneProductos.setViewportView(getPanelProductos());
		}
		return scrollPaneProductos;
	}
	private JPanel getPanelProductos() {
		if (panelProductos == null) {
			panelProductos = new JPanel();
			panelProductos.setBackground(new Color(0, 0, 128));
			panelProductos.setLayout(new GridLayout(0, 5, 40, 40));
			for(int i=0; i<60; i++) {
				JButton j = new JButton(String.valueOf(i));
				panelProductos.add(j);
			}
		}
		return panelProductos;
	}
	private JPanel getPanelFinalizarMenu() {
		if (panelFinalizarMenu == null) {
			panelFinalizarMenu = new JPanel();
			panelFinalizarMenu.setBackground(new Color(128, 0, 0));
			panelFinalizarMenu.setLayout(new GridLayout(0, 5, 0, 0));
			panelFinalizarMenu.add(getLblPlaceHolderMenu());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_3());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_1());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_2());
			panelFinalizarMenu.add(getBtnFinalizar());
		}
		return panelFinalizarMenu;
	}
	private JLabel getLblPlaceHolderMenu() {
		if (lblPlaceHolderMenu == null) {
			lblPlaceHolderMenu = new JLabel("");
		}
		return lblPlaceHolderMenu;
	}
	private JButton getBtnFinalizar() {
		if (btnFinalizar == null) {
			btnFinalizar = new JButton("Finalizar");
			btnFinalizar.setForeground(new Color(255, 255, 255));
			btnFinalizar.setBackground(new Color(50, 205, 50));
			btnFinalizar.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return btnFinalizar;
	}
	private JLabel getLblPlaceHolderMenu_2() {
		if (lblPlaceHolderMenu_2 == null) {
			lblPlaceHolderMenu_2 = new JLabel("");
		}
		return lblPlaceHolderMenu_2;
	}
	private JLabel getLblPlaceHolderMenu_1() {
		if (lblPlaceHolderMenu_1 == null) {
			lblPlaceHolderMenu_1 = new JLabel("");
		}
		return lblPlaceHolderMenu_1;
	}
	private JLabel getLblPlaceHolderMenu_3() {
		if (lblPlaceHolderMenu_3 == null) {
			lblPlaceHolderMenu_3 = new JLabel("");
		}
		return lblPlaceHolderMenu_3;
	}
	private JPanel getPanelCarrito() {
		if (panelCarrito == null) {
			panelCarrito = new JPanel();
			panelCarrito.setBackground(new Color(128, 0, 0));
			panelCarrito.setLayout(new BorderLayout(0, 0));
			panelCarrito.add(getBtnCarrito(), BorderLayout.NORTH);
			panelCarrito.add(getScrollPaneCarrito());
		}
		return panelCarrito;
	}
	private JButton getBtnCarrito() {
		if (btnCarrito == null) {
			btnCarrito = new JButton("");
			setImagenAdaptada(btnCarrito,"/img/carrito.png");
			btnCarrito.addActionListener(pCrt);
		}
		return btnCarrito;
	}
	private JScrollPane getScrollPaneCarrito() {
		if (scrollPaneCarrito == null) {
			scrollPaneCarrito = new JScrollPane();
			scrollPaneCarrito.setEnabled(false);
			scrollPaneCarrito.setViewportView(getTxtAreaCarrito());
		}
		return scrollPaneCarrito;
	}
	private JTextArea getTxtAreaCarrito() {
		if (txtAreaCarrito == null) {
			txtAreaCarrito = new JTextArea();
			txtAreaCarrito.setEditable(false);
			txtAreaCarrito.setVisible(false);
			txtAreaCarrito.setText("jijdijdwjdw\r\ndmqojqowjdoqwjdoqw\r\nfdoqkdoqk");
		}
		return txtAreaCarrito;
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2024-12-25 19:20:29.949
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2024-12-25 19:20:29.950
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2024-12-25 19:20:30.936
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package uo.cpm.modulo.ui;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import java.awt.CardLayout;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.BorderLayout;
import javax.swing.JLabel;
import javax.swing.JButton;
import javax.swing.BoxLayout;
import java.awt.GridLayout;
import java.awt.Image;

import javax.swing.ImageIcon;
import java.awt.Color;
import java.awt.Font;
import javax.swing.border.LineBorder;
import javax.swing.SwingConstants;
import java.awt.FlowLayout;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.Component;
import javax.swing.JTextField;
import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.KeyStroke;
import java.awt.event.KeyEvent;
import java.awt.event.InputEvent;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

public class VentanaPrincipal extends JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private JPanel contentPane;
	private JPanel panelInicio;
	private JPanel panelBienvenida;
	private JPanel panelIdiomas;
	private JButton btnSpanish;
	private JLabel lblIngredients;
	private JButton btnEnglish;
	private JButton btnFrench;
	private JButton btnItalian;
	private JPanel panelSaludo;
	private JLabel lblWelcome;
	private JButton btnSiguiente_Datos;
	private JLabel lblIngredients2;
	private JLabel lblIngredients2_1;
	private ProcessFrame pf = new  ProcessFrame();
	private JPanel panelRegistro;
	private JPanel panelDatos;
	private JTextField textFieldDNI;
	private JLabel lblDNI;
	private JTextField textFieldReserva;
	private JLabel lblReserva;
	private JMenuBar menuBarDatos;
	private JMenu mnOpciones;
	private JMenuItem mntmSalida;
	private JMenu mnAyuda;
	private JPanel panelBtn;
	private JLabel lblPlaceHolder;
	private JButton btnSiguiente_Menu;
	private JLabel lblPlaceHolder_1;
	private JPanel panelSpacing;
	private JLabel lblPlaceHolder_1_1;
	private JPanel panelMenu;
	private JPanel panelFiltros;
	private JButton btnTodos;
	private JButton btnPizzas;
	private JButton btnEntrantes;
	private JButton btnEnsaladas;
	private JButton btnPostres;
	private JButton btnBebidas;
	private JMenuBar menuBarMenu;
	private JMenu mnOpcionesMenu;
	private JMenuItem mntmSalidaMenu;
	private JMenu mnAyudaMenu;
	private JScrollPane scrollPaneProductos;
	private JPanel panelProductos;
	private JPanel panelFinalizarMenu;
	private JLabel lblPlaceHolderMenu;
	private JButton btnFinalizar;
	private JLabel lblPlaceHolderMenu_2;
	private JLabel lblPlaceHolderMenu_1;
	private JLabel lblPlaceHolderMenu_3;
	private JPanel panelCarrito;
	private JButton btnCarrito;
	private JScrollPane scrollPaneCarrito;
	private JTextArea txtAreaCarrito;
	private ProcessCart pCrt = new 
	class ProcessFrame implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			changeFrame(e);
			
		}

		
		
	}
	protected void changeFrame(ActionEvent e) {
		String frame = e.getActionCommand();
		((CardLayout)getContentPane().getLayout()).show(getContentPane(), frame);
	}
	class ProcessCart implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			showShoppingCart();
			
		}

		
		
	}
	protected void showShoppingCart() {
		if(getTxtAreaCarrito().isVisible()) {
			getTxtAreaCarrito().setVisible(false);
		}else {
			getTxtAreaCarrito().setVisible(true);
		}
	}

	/**
	 * Create the frame.
	 */
	public VentanaPrincipal() {
		setTitle("Uniovi's ");
		setIconImage(Toolkit.getDefaultToolkit().getImage(VentanaPrincipal.class.getResource("/img/logo.png")));
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 870, 530);
		contentPane = new JPanel();
		contentPane.setBackground(new Color(255, 0, 0));
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(new CardLayout(0, 0));
		contentPane.add(getPanelInicio(), "pnInicio");
		contentPane.add(getPanelRegistro(), "pnRegistro");
		contentPane.add(getPanelMenu(), "pnMenu");
	}

	private JPanel getPanelInicio() {
		if (panelInicio == null) {
			panelInicio = new JPanel();
			panelInicio.setBackground(new Color(255, 0, 0));
			panelInicio.setLayout(new BorderLayout(0, 0));
			panelInicio.add(getPanelBienvenida(), BorderLayout.CENTER);
			panelInicio.add(getPanelIdiomas(), BorderLayout.NORTH);
			panelInicio.add(getPanelSaludo(), BorderLayout.SOUTH);
		}
		return panelInicio;
	}
	private JPanel getPanelBienvenida() {
		if (panelBienvenida == null) {
			panelBienvenida = new JPanel();
			panelBienvenida.setBackground(new Color(0, 0, 139));
			panelBienvenida.setLayout(new BorderLayout(0, 0));
			panelBienvenida.add(getLblIngredients(), BorderLayout.CENTER);
			panelBienvenida.add(getLblIngredients2(), BorderLayout.WEST);
			panelBienvenida.add(getLblIngredients2_1(), BorderLayout.EAST);
		}
		return panelBienvenida;
	}
	private JPanel getPanelIdiomas() {
		if (panelIdiomas == null) {
			panelIdiomas = new JPanel();
			panelIdiomas.setBackground(new Color(255, 0, 0));
			panelIdiomas.setLayout(new GridLayout(0, 4, 0, 0));
			panelIdiomas.add(getBtnSpanish());
			panelIdiomas.add(getBtnEnglish());
			panelIdiomas.add(getBtnFrench());
			panelIdiomas.add(getBtnItalian());
		}
		return panelIdiomas;
	}
	private JButton getBtnSpanish() {
		if (btnSpanish == null) {
			btnSpanish = new JButton("");
			btnSpanish.setBackground(new Color(255, 255, 255));
			btnSpanish.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/es.png")));
		}
		return btnSpanish;
	}
	private JLabel getLblIngredients() {
		if (lblIngredients == null) {
			lblIngredients = new JLabel("");
			lblIngredients.setHorizontalAlignment(SwingConstants.CENTER);
			lblIngredients.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/bienvenida.png")));
		}
		return lblIngredients;
	}
	private JButton getBtnEnglish() {
		if (btnEnglish == null) {
			btnEnglish = new JButton("");
			btnEnglish.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/en.png")));
			btnEnglish.setBackground(Color.WHITE);
		}
		return btnEnglish;
	}
	private JButton getBtnFrench() {
		if (btnFrench == null) {
			btnFrench = new JButton("");
			btnFrench.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/fr.png")));
			btnFrench.setBackground(Color.WHITE);
		}
		return btnFrench;
	}
	private JButton getBtnItalian() {
		if (btnItalian == null) {
			btnItalian = new JButton("");
			btnItalian.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/it.png")));
			btnItalian.setBackground(Color.WHITE);
		}
		return btnItalian;
	}
	private JPanel getPanelSaludo() {
		if (panelSaludo == null) {
			panelSaludo = new JPanel();
			panelSaludo.setBackground(new Color(255, 0, 0));
			panelSaludo.setLayout(new GridLayout(0, 2, 0, 0));
			panelSaludo.add(getLblWelcome_1());
			panelSaludo.add(getBtnSiguiente_Datos());
		}
		return panelSaludo;
	}
	private JLabel getLblWelcome_1() {
		if (lblWelcome == null) {
			lblWelcome = new JLabel("\u00A1Bienvenido a Uniovi's!");
			lblWelcome.setHorizontalAlignment(SwingConstants.CENTER);
			lblWelcome.setForeground(Color.WHITE);
			lblWelcome.setFont(new Font("Dialog", Font.BOLD, 28));
			lblWelcome.setBorder(new LineBorder(new Color(0, 0, 0), 0));
			lblWelcome.setBackground(Color.WHITE);
		}
		return lblWelcome;
	}
	private JButton getBtnSiguiente_Datos() {
		if (btnSiguiente_Datos == null) {
			btnSiguiente_Datos = new JButton("Continuar");
			btnSiguiente_Datos.setAlignmentX(Component.RIGHT_ALIGNMENT);
			btnSiguiente_Datos.setBackground(new Color(50, 205, 50));
			btnSiguiente_Datos.setForeground(new Color(255, 255, 255));
			btnSiguiente_Datos.setFont(new Font("SansSerif", Font.PLAIN, 24));
			btnSiguiente_Datos.setMnemonic('C');
			btnSiguiente_Datos.setBorder(new LineBorder(new Color(0, 0, 0), 4, true));
			btnSiguiente_Datos.setActionCommand("pnRegistro");
			btnSiguiente_Datos.addActionListener(pf);
		}
		return btnSiguiente_Datos;
	}
	private JLabel getLblIngredients2() {
		if (lblIngredients2 == null) {
			lblIngredients2 = new JLabel("");
			lblIngredients2.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/PI03.png")));
		}
		return lblIngredients2;
	}
	private JLabel getLblIngredients2_1() {
		if (lblIngredients2_1 == null) {
			lblIngredients2_1 = new JLabel("");
			lblIngredients2_1.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/BE02.png")));
		}
		return lblIngredients2_1;
	}
	private JPanel getPanelRegistro() {
		if (panelRegistro == null) {
			panelRegistro = new JPanel();
			panelRegistro.setLayout(new BorderLayout(0, 0));
			panelRegistro.add(getPanelDatos(), BorderLayout.CENTER);
			panelRegistro.add(getMenuBar_1(), BorderLayout.NORTH);
			panelRegistro.add(getPanelBtn(), BorderLayout.SOUTH);
			panelRegistro.add(getPanelSpacing(), BorderLayout.EAST);
		}
		return panelRegistro;
	}
	private JPanel getPanelDatos() {
		if (panelDatos == null) {
			panelDatos = new JPanel();
			panelDatos.setBackground(new Color(0, 0, 128));
			panelDatos.setLayout(new GridLayout(6, 1, 0, 0));
			panelDatos.add(getLblDNI());
			panelDatos.add(getTextFieldDNI());
			panelDatos.add(getLblReserva());
			panelDatos.add(getTextFieldReserva());
		}
		return panelDatos;
	}
	private JTextField getTextFieldDNI() {
		if (textFieldDNI == null) {
			textFieldDNI = new JTextField();
			textFieldDNI.setFont(new Font("SansSerif", Font.PLAIN, 28));
			textFieldDNI.setColumns(10);
		}
		return textFieldDNI;
	}
	private JLabel getLblDNI() {
		if (lblDNI == null) {
			lblDNI = new JLabel("DNI / NIE:");
			lblDNI.setLabelFor(getTextFieldDNI());
			lblDNI.setDisplayedMnemonic('D');
			lblDNI.setForeground(new Color(255, 255, 255));
			lblDNI.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return lblDNI;
	}
	private JTextField getTextFieldReserva() {
		if (textFieldReserva == null) {
			textFieldReserva = new JTextField();
			textFieldReserva.setFont(new Font("SansSerif", Font.PLAIN, 28));
			textFieldReserva.setColumns(10);
		}
		return textFieldReserva;
	}
	private JLabel getLblReserva() {
		if (lblReserva == null) {
			lblReserva = new JLabel("N\u00BA / C\u00F3digo de reserva");
			lblReserva.setDisplayedMnemonic('N');
			lblReserva.setLabelFor(getTextFieldReserva());
			lblReserva.setForeground(new Color(255, 255, 255));
			lblReserva.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return lblReserva;
	}

	private JMenuBar getMenuBar_1() {
		if (menuBarDatos == null) {
			menuBarDatos = new JMenuBar();
			menuBarDatos.add(getMnOpciones());
			menuBarDatos.add(getMnAyuda());
		}
		return menuBarDatos;
	}
	private JMenu getMnOpciones() {
		if (mnOpciones == null) {
			mnOpciones = new JMenu("Opciones");
			mnOpciones.setMnemonic('O');
			mnOpciones.add(getMntmSalida());
		}
		return mnOpciones;
	}
	private JMenuItem getMntmSalida() {
		if (mntmSalida == null) {
			mntmSalida = new JMenuItem("Salida");
			mntmSalida.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, InputEvent.CTRL_DOWN_MASK));
		}
		return mntmSalida;
	}
	private JMenu getMnAyuda() {
		if (mnAyuda == null) {
			mnAyuda = new JMenu("Ayuda");
			mnAyuda.setMnemonic('A');
		}
		return mnAyuda;
	}
	private JPanel getPanelBtn() {
		if (panelBtn == null) {
			panelBtn = new JPanel();
			panelBtn.setBackground(new Color(0, 0, 128));
			panelBtn.setLayout(new GridLayout(1, 0, 0, 0));
			panelBtn.add(getLblPlaceHolder_1());
			panelBtn.add(getLblPlaceHolder());
			panelBtn.add(getBtnSiguiente_Menu());
		}
		return panelBtn;
	}
	private JLabel getLblPlaceHolder() {
		if (lblPlaceHolder == null) {
			lblPlaceHolder = new JLabel("");
			lblPlaceHolder.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder;
	}
	private JButton getBtnSiguiente_Menu() {
		if (btnSiguiente_Menu == null) {
			btnSiguiente_Menu = new JButton("Continuar");
			btnSiguiente_Menu.setForeground(new Color(255, 255, 255));
			btnSiguiente_Menu.setBackground(new Color(50, 205, 50));
			btnSiguiente_Menu.setFont(new Font("SansSerif", Font.PLAIN, 28));
			btnSiguiente_Menu.setMnemonic('C');
			btnSiguiente_Menu.setActionCommand("pnMenu");
			btnSiguiente_Menu.addActionListener(pf);
		}
		return btnSiguiente_Menu;
	}
	private JLabel getLblPlaceHolder_1() {
		if (lblPlaceHolder_1 == null) {
			lblPlaceHolder_1 = new JLabel("");
			lblPlaceHolder_1.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder_1;
	}
	private JPanel getPanelSpacing() {
		if (panelSpacing == null) {
			panelSpacing = new JPanel();
			panelSpacing.setBackground(new Color(0, 0, 128));
			panelSpacing.add(getLblPlaceHolder_1_1());
		}
		return panelSpacing;
	}
	private JLabel getLblPlaceHolder_1_1() {
		if (lblPlaceHolder_1_1 == null) {
			lblPlaceHolder_1_1 = new JLabel("                                                                                                            ");
			lblPlaceHolder_1_1.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder_1_1;
	}
	private JPanel getPanelMenu() {
		if (panelMenu == null) {
			panelMenu = new JPanel();
			panelMenu.setLayout(new BorderLayout(0, 0));
			panelMenu.add(getPanelFiltros(), BorderLayout.WEST);
			panelMenu.add(getMenuBar_2(), BorderLayout.NORTH);
			panelMenu.add(getScrollPaneProductos(), BorderLayout.CENTER);
			panelMenu.add(getPanelFinalizarMenu(), BorderLayout.SOUTH);
			panelMenu.add(getPanelCarrito(), BorderLayout.EAST);
		}
		return panelMenu;
	}
	private JPanel getPanelFiltros() {
		if (panelFiltros == null) {
			panelFiltros = new JPanel();
			panelFiltros.setLayout(new GridLayout(6, 0, 0, 0));
			panelFiltros.add(getBtnTodos());
			panelFiltros.add(getBtnPizzas());
			panelFiltros.add(getBtnEntrantes());
			panelFiltros.add(getBtnEnsaladas());
			panelFiltros.add(getBtnPostres());
			panelFiltros.add(getBtnBebidas());
		}
		return panelFiltros;
	}
	private JButton getBtnTodos() {
		if (btnTodos == null) {
			btnTodos = new JButton("");
			btnTodos.setBackground(new Color(255, 255, 255));
			btnTodos.setToolTipText("Filtrar - Todos");
			setImagenAdaptada(btnTodos, "/img/bienvenida.png");
		}
		return btnTodos;
	}
	private JButton getBtnPizzas() {
		if (btnPizzas == null) {
			btnPizzas = new JButton("");
			btnPizzas.setBackground(new Color(255, 255, 255));
			btnPizzas.setToolTipText("Filtrar - Pizzas");
			setImagenAdaptada(btnPizzas,"/img/PI01.png");
		}
		return btnPizzas;
	}
	private JButton getBtnEntrantes() {
		if (btnEntrantes == null) {
			btnEntrantes = new JButton("");
			btnEntrantes.setBackground(new Color(255, 255, 255));
			btnEntrantes.setToolTipText("Filtrar - Entrantes");
			setImagenAdaptada(btnEntrantes, "/img/ET02.png");
		}
		return btnEntrantes;
	}
	private JButton getBtnEnsaladas() {
		if (btnEnsaladas == null) {
			btnEnsaladas = new JButton("");
			btnEnsaladas.setBackground(new Color(255, 255, 255));
			btnEnsaladas.setToolTipText("Filtrar - Ensaladas");
			setImagenAdaptada(btnEnsaladas, "/img/EN02.png");
		}
		return btnEnsaladas;
	}
	private JButton getBtnPostres() {
		if (btnPostres == null) {
			btnPostres = new JButton("");
			btnPostres.setBackground(new Color(255, 255, 255));
			btnPostres.setToolTipText("Filtrar - Postres");
			setImagenAdaptada(btnPostres, "/img/PO01.png");
		}
		return btnPostres;
	}
	private JButton getBtnBebidas() {
		if (btnBebidas == null) {
			btnBebidas = new JButton("");
			btnBebidas.setBackground(new Color(255, 255, 255));
			btnBebidas.setToolTipText("Filtrar - Bebidas");
			setImagenAdaptada(btnBebidas, "/img/BE03.png");
		}
		return btnBebidas;
	}
	private void setImagenAdaptada(JButton boton, String rutaImagen){
		 Image imgOriginal = new ImageIcon(getClass().getResource(rutaImagen)).getImage(); 
		 Image imgEscalada = imgOriginal.getScaledInstance((int) (100), (int) (100),Image.SCALE_SMOOTH);
		 //si se quiere reescalar la ventana, este 100 tendria que cambiarse por el width y el height  respectivamente de la imagen para que as√≠ se reescale cada vez que cambias el tama√±o
		 //adem√°s este m√©todo deber√≠a llamarse en el constructor de la ventana mientras se usa un evento componentResized
		 boton.setIcon(new ImageIcon(imgEscalada));
	}
	private JMenuBar getMenuBar_2() {
		if (menuBarMenu == null) {
			menuBarMenu = new JMenuBar();
			menuBarMenu.add(getMnOpcionesMenu());
			menuBarMenu.add(getMnAyudaMenu());
		}
		return menuBarMenu;
	}
	private JMenu getMnOpcionesMenu() {
		if (mnOpcionesMenu == null) {
			mnOpcionesMenu = new JMenu("Opciones");
			mnOpcionesMenu.setMnemonic('O');
			mnOpcionesMenu.add(getMntmSalidaMenu());
		}
		return mnOpcionesMenu;
	}
	private JMenuItem getMntmSalidaMenu() {
		if (mntmSalidaMenu == null) {
			mntmSalidaMenu = new JMenuItem("Salida");
			mntmSalidaMenu.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, InputEvent.CTRL_DOWN_MASK));
		}
		return mntmSalidaMenu;
	}
	private JMenu getMnAyudaMenu() {
		if (mnAyudaMenu == null) {
			mnAyudaMenu = new JMenu("Ayuda");
			mnAyudaMenu.setMnemonic('A');
		}
		return mnAyudaMenu;
	}
	private JScrollPane getScrollPaneProductos() {
		if (scrollPaneProductos == null) {
			scrollPaneProductos = new JScrollPane();
			scrollPaneProductos.setViewportView(getPanelProductos());
		}
		return scrollPaneProductos;
	}
	private JPanel getPanelProductos() {
		if (panelProductos == null) {
			panelProductos = new JPanel();
			panelProductos.setBackground(new Color(0, 0, 128));
			panelProductos.setLayout(new GridLayout(0, 5, 40, 40));
			for(int i=0; i<60; i++) {
				JButton j = new JButton(String.valueOf(i));
				panelProductos.add(j);
			}
		}
		return panelProductos;
	}
	private JPanel getPanelFinalizarMenu() {
		if (panelFinalizarMenu == null) {
			panelFinalizarMenu = new JPanel();
			panelFinalizarMenu.setBackground(new Color(128, 0, 0));
			panelFinalizarMenu.setLayout(new GridLayout(0, 5, 0, 0));
			panelFinalizarMenu.add(getLblPlaceHolderMenu());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_3());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_1());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_2());
			panelFinalizarMenu.add(getBtnFinalizar());
		}
		return panelFinalizarMenu;
	}
	private JLabel getLblPlaceHolderMenu() {
		if (lblPlaceHolderMenu == null) {
			lblPlaceHolderMenu = new JLabel("");
		}
		return lblPlaceHolderMenu;
	}
	private JButton getBtnFinalizar() {
		if (btnFinalizar == null) {
			btnFinalizar = new JButton("Finalizar");
			btnFinalizar.setForeground(new Color(255, 255, 255));
			btnFinalizar.setBackground(new Color(50, 205, 50));
			btnFinalizar.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return btnFinalizar;
	}
	private JLabel getLblPlaceHolderMenu_2() {
		if (lblPlaceHolderMenu_2 == null) {
			lblPlaceHolderMenu_2 = new JLabel("");
		}
		return lblPlaceHolderMenu_2;
	}
	private JLabel getLblPlaceHolderMenu_1() {
		if (lblPlaceHolderMenu_1 == null) {
			lblPlaceHolderMenu_1 = new JLabel("");
		}
		return lblPlaceHolderMenu_1;
	}
	private JLabel getLblPlaceHolderMenu_3() {
		if (lblPlaceHolderMenu_3 == null) {
			lblPlaceHolderMenu_3 = new JLabel("");
		}
		return lblPlaceHolderMenu_3;
	}
	private JPanel getPanelCarrito() {
		if (panelCarrito == null) {
			panelCarrito = new JPanel();
			panelCarrito.setBackground(new Color(128, 0, 0));
			panelCarrito.setLayout(new BorderLayout(0, 0));
			panelCarrito.add(getBtnCarrito(), BorderLayout.NORTH);
			panelCarrito.add(getScrollPaneCarrito());
		}
		return panelCarrito;
	}
	private JButton getBtnCarrito() {
		if (btnCarrito == null) {
			btnCarrito = new JButton("");
			setImagenAdaptada(btnCarrito,"/img/carrito.png");
			btnCarrito.addActionListener(pCrt);
		}
		return btnCarrito;
	}
	private JScrollPane getScrollPaneCarrito() {
		if (scrollPaneCarrito == null) {
			scrollPaneCarrito = new JScrollPane();
			scrollPaneCarrito.setEnabled(false);
			scrollPaneCarrito.setViewportView(getTxtAreaCarrito());
		}
		return scrollPaneCarrito;
	}
	private JTextArea getTxtAreaCarrito() {
		if (txtAreaCarrito == null) {
			txtAreaCarrito = new JTextArea();
			txtAreaCarrito.setEditable(false);
			txtAreaCarrito.setVisible(false);
			txtAreaCarrito.setText("jijdijdwjdw\r\ndmqojqowjdoqwjdoqw\r\nfdoqkdoqk");
		}
		return txtAreaCarrito;
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2024-12-25 19:20:30.937
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2024-12-25 19:20:30.937
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2024-12-25 19:20:35.140
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package uo.cpm.modulo.ui;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import java.awt.CardLayout;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.BorderLayout;
import javax.swing.JLabel;
import javax.swing.JButton;
import javax.swing.BoxLayout;
import java.awt.GridLayout;
import java.awt.Image;

import javax.swing.ImageIcon;
import java.awt.Color;
import java.awt.Font;
import javax.swing.border.LineBorder;
import javax.swing.SwingConstants;
import java.awt.FlowLayout;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.Component;
import javax.swing.JTextField;
import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.KeyStroke;
import java.awt.event.KeyEvent;
import java.awt.event.InputEvent;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

public class VentanaPrincipal extends JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private JPanel contentPane;
	private JPanel panelInicio;
	private JPanel panelBienvenida;
	private JPanel panelIdiomas;
	private JButton btnSpanish;
	private JLabel lblIngredients;
	private JButton btnEnglish;
	private JButton btnFrench;
	private JButton btnItalian;
	private JPanel panelSaludo;
	private JLabel lblWelcome;
	private JButton btnSiguiente_Datos;
	private JLabel lblIngredients2;
	private JLabel lblIngredients2_1;
	private ProcessFrame pf = new  ProcessFrame();
	private JPanel panelRegistro;
	private JPanel panelDatos;
	private JTextField textFieldDNI;
	private JLabel lblDNI;
	private JTextField textFieldReserva;
	private JLabel lblReserva;
	private JMenuBar menuBarDatos;
	private JMenu mnOpciones;
	private JMenuItem mntmSalida;
	private JMenu mnAyuda;
	private JPanel panelBtn;
	private JLabel lblPlaceHolder;
	private JButton btnSiguiente_Menu;
	private JLabel lblPlaceHolder_1;
	private JPanel panelSpacing;
	private JLabel lblPlaceHolder_1_1;
	private JPanel panelMenu;
	private JPanel panelFiltros;
	private JButton btnTodos;
	private JButton btnPizzas;
	private JButton btnEntrantes;
	private JButton btnEnsaladas;
	private JButton btnPostres;
	private JButton btnBebidas;
	private JMenuBar menuBarMenu;
	private JMenu mnOpcionesMenu;
	private JMenuItem mntmSalidaMenu;
	private JMenu mnAyudaMenu;
	private JScrollPane scrollPaneProductos;
	private JPanel panelProductos;
	private JPanel panelFinalizarMenu;
	private JLabel lblPlaceHolderMenu;
	private JButton btnFinalizar;
	private JLabel lblPlaceHolderMenu_2;
	private JLabel lblPlaceHolderMenu_1;
	private JLabel lblPlaceHolderMenu_3;
	private JPanel panelCarrito;
	private JButton btnCarrito;
	private JScrollPane scrollPaneCarrito;
	private JTextArea txtAreaCarrito;
	private ProcessCart pCrt = new Process
	class ProcessFrame implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			changeFrame(e);
			
		}

		
		
	}
	protected void changeFrame(ActionEvent e) {
		String frame = e.getActionCommand();
		((CardLayout)getContentPane().getLayout()).show(getContentPane(), frame);
	}
	class ProcessCart implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			showShoppingCart();
			
		}

		
		
	}
	protected void showShoppingCart() {
		if(getTxtAreaCarrito().isVisible()) {
			getTxtAreaCarrito().setVisible(false);
		}else {
			getTxtAreaCarrito().setVisible(true);
		}
	}

	/**
	 * Create the frame.
	 */
	public VentanaPrincipal() {
		setTitle("Uniovi's ");
		setIconImage(Toolkit.getDefaultToolkit().getImage(VentanaPrincipal.class.getResource("/img/logo.png")));
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 870, 530);
		contentPane = new JPanel();
		contentPane.setBackground(new Color(255, 0, 0));
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(new CardLayout(0, 0));
		contentPane.add(getPanelInicio(), "pnInicio");
		contentPane.add(getPanelRegistro(), "pnRegistro");
		contentPane.add(getPanelMenu(), "pnMenu");
	}

	private JPanel getPanelInicio() {
		if (panelInicio == null) {
			panelInicio = new JPanel();
			panelInicio.setBackground(new Color(255, 0, 0));
			panelInicio.setLayout(new BorderLayout(0, 0));
			panelInicio.add(getPanelBienvenida(), BorderLayout.CENTER);
			panelInicio.add(getPanelIdiomas(), BorderLayout.NORTH);
			panelInicio.add(getPanelSaludo(), BorderLayout.SOUTH);
		}
		return panelInicio;
	}
	private JPanel getPanelBienvenida() {
		if (panelBienvenida == null) {
			panelBienvenida = new JPanel();
			panelBienvenida.setBackground(new Color(0, 0, 139));
			panelBienvenida.setLayout(new BorderLayout(0, 0));
			panelBienvenida.add(getLblIngredients(), BorderLayout.CENTER);
			panelBienvenida.add(getLblIngredients2(), BorderLayout.WEST);
			panelBienvenida.add(getLblIngredients2_1(), BorderLayout.EAST);
		}
		return panelBienvenida;
	}
	private JPanel getPanelIdiomas() {
		if (panelIdiomas == null) {
			panelIdiomas = new JPanel();
			panelIdiomas.setBackground(new Color(255, 0, 0));
			panelIdiomas.setLayout(new GridLayout(0, 4, 0, 0));
			panelIdiomas.add(getBtnSpanish());
			panelIdiomas.add(getBtnEnglish());
			panelIdiomas.add(getBtnFrench());
			panelIdiomas.add(getBtnItalian());
		}
		return panelIdiomas;
	}
	private JButton getBtnSpanish() {
		if (btnSpanish == null) {
			btnSpanish = new JButton("");
			btnSpanish.setBackground(new Color(255, 255, 255));
			btnSpanish.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/es.png")));
		}
		return btnSpanish;
	}
	private JLabel getLblIngredients() {
		if (lblIngredients == null) {
			lblIngredients = new JLabel("");
			lblIngredients.setHorizontalAlignment(SwingConstants.CENTER);
			lblIngredients.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/bienvenida.png")));
		}
		return lblIngredients;
	}
	private JButton getBtnEnglish() {
		if (btnEnglish == null) {
			btnEnglish = new JButton("");
			btnEnglish.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/en.png")));
			btnEnglish.setBackground(Color.WHITE);
		}
		return btnEnglish;
	}
	private JButton getBtnFrench() {
		if (btnFrench == null) {
			btnFrench = new JButton("");
			btnFrench.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/fr.png")));
			btnFrench.setBackground(Color.WHITE);
		}
		return btnFrench;
	}
	private JButton getBtnItalian() {
		if (btnItalian == null) {
			btnItalian = new JButton("");
			btnItalian.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/it.png")));
			btnItalian.setBackground(Color.WHITE);
		}
		return btnItalian;
	}
	private JPanel getPanelSaludo() {
		if (panelSaludo == null) {
			panelSaludo = new JPanel();
			panelSaludo.setBackground(new Color(255, 0, 0));
			panelSaludo.setLayout(new GridLayout(0, 2, 0, 0));
			panelSaludo.add(getLblWelcome_1());
			panelSaludo.add(getBtnSiguiente_Datos());
		}
		return panelSaludo;
	}
	private JLabel getLblWelcome_1() {
		if (lblWelcome == null) {
			lblWelcome = new JLabel("\u00A1Bienvenido a Uniovi's!");
			lblWelcome.setHorizontalAlignment(SwingConstants.CENTER);
			lblWelcome.setForeground(Color.WHITE);
			lblWelcome.setFont(new Font("Dialog", Font.BOLD, 28));
			lblWelcome.setBorder(new LineBorder(new Color(0, 0, 0), 0));
			lblWelcome.setBackground(Color.WHITE);
		}
		return lblWelcome;
	}
	private JButton getBtnSiguiente_Datos() {
		if (btnSiguiente_Datos == null) {
			btnSiguiente_Datos = new JButton("Continuar");
			btnSiguiente_Datos.setAlignmentX(Component.RIGHT_ALIGNMENT);
			btnSiguiente_Datos.setBackground(new Color(50, 205, 50));
			btnSiguiente_Datos.setForeground(new Color(255, 255, 255));
			btnSiguiente_Datos.setFont(new Font("SansSerif", Font.PLAIN, 24));
			btnSiguiente_Datos.setMnemonic('C');
			btnSiguiente_Datos.setBorder(new LineBorder(new Color(0, 0, 0), 4, true));
			btnSiguiente_Datos.setActionCommand("pnRegistro");
			btnSiguiente_Datos.addActionListener(pf);
		}
		return btnSiguiente_Datos;
	}
	private JLabel getLblIngredients2() {
		if (lblIngredients2 == null) {
			lblIngredients2 = new JLabel("");
			lblIngredients2.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/PI03.png")));
		}
		return lblIngredients2;
	}
	private JLabel getLblIngredients2_1() {
		if (lblIngredients2_1 == null) {
			lblIngredients2_1 = new JLabel("");
			lblIngredients2_1.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/BE02.png")));
		}
		return lblIngredients2_1;
	}
	private JPanel getPanelRegistro() {
		if (panelRegistro == null) {
			panelRegistro = new JPanel();
			panelRegistro.setLayout(new BorderLayout(0, 0));
			panelRegistro.add(getPanelDatos(), BorderLayout.CENTER);
			panelRegistro.add(getMenuBar_1(), BorderLayout.NORTH);
			panelRegistro.add(getPanelBtn(), BorderLayout.SOUTH);
			panelRegistro.add(getPanelSpacing(), BorderLayout.EAST);
		}
		return panelRegistro;
	}
	private JPanel getPanelDatos() {
		if (panelDatos == null) {
			panelDatos = new JPanel();
			panelDatos.setBackground(new Color(0, 0, 128));
			panelDatos.setLayout(new GridLayout(6, 1, 0, 0));
			panelDatos.add(getLblDNI());
			panelDatos.add(getTextFieldDNI());
			panelDatos.add(getLblReserva());
			panelDatos.add(getTextFieldReserva());
		}
		return panelDatos;
	}
	private JTextField getTextFieldDNI() {
		if (textFieldDNI == null) {
			textFieldDNI = new JTextField();
			textFieldDNI.setFont(new Font("SansSerif", Font.PLAIN, 28));
			textFieldDNI.setColumns(10);
		}
		return textFieldDNI;
	}
	private JLabel getLblDNI() {
		if (lblDNI == null) {
			lblDNI = new JLabel("DNI / NIE:");
			lblDNI.setLabelFor(getTextFieldDNI());
			lblDNI.setDisplayedMnemonic('D');
			lblDNI.setForeground(new Color(255, 255, 255));
			lblDNI.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return lblDNI;
	}
	private JTextField getTextFieldReserva() {
		if (textFieldReserva == null) {
			textFieldReserva = new JTextField();
			textFieldReserva.setFont(new Font("SansSerif", Font.PLAIN, 28));
			textFieldReserva.setColumns(10);
		}
		return textFieldReserva;
	}
	private JLabel getLblReserva() {
		if (lblReserva == null) {
			lblReserva = new JLabel("N\u00BA / C\u00F3digo de reserva");
			lblReserva.setDisplayedMnemonic('N');
			lblReserva.setLabelFor(getTextFieldReserva());
			lblReserva.setForeground(new Color(255, 255, 255));
			lblReserva.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return lblReserva;
	}

	private JMenuBar getMenuBar_1() {
		if (menuBarDatos == null) {
			menuBarDatos = new JMenuBar();
			menuBarDatos.add(getMnOpciones());
			menuBarDatos.add(getMnAyuda());
		}
		return menuBarDatos;
	}
	private JMenu getMnOpciones() {
		if (mnOpciones == null) {
			mnOpciones = new JMenu("Opciones");
			mnOpciones.setMnemonic('O');
			mnOpciones.add(getMntmSalida());
		}
		return mnOpciones;
	}
	private JMenuItem getMntmSalida() {
		if (mntmSalida == null) {
			mntmSalida = new JMenuItem("Salida");
			mntmSalida.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, InputEvent.CTRL_DOWN_MASK));
		}
		return mntmSalida;
	}
	private JMenu getMnAyuda() {
		if (mnAyuda == null) {
			mnAyuda = new JMenu("Ayuda");
			mnAyuda.setMnemonic('A');
		}
		return mnAyuda;
	}
	private JPanel getPanelBtn() {
		if (panelBtn == null) {
			panelBtn = new JPanel();
			panelBtn.setBackground(new Color(0, 0, 128));
			panelBtn.setLayout(new GridLayout(1, 0, 0, 0));
			panelBtn.add(getLblPlaceHolder_1());
			panelBtn.add(getLblPlaceHolder());
			panelBtn.add(getBtnSiguiente_Menu());
		}
		return panelBtn;
	}
	private JLabel getLblPlaceHolder() {
		if (lblPlaceHolder == null) {
			lblPlaceHolder = new JLabel("");
			lblPlaceHolder.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder;
	}
	private JButton getBtnSiguiente_Menu() {
		if (btnSiguiente_Menu == null) {
			btnSiguiente_Menu = new JButton("Continuar");
			btnSiguiente_Menu.setForeground(new Color(255, 255, 255));
			btnSiguiente_Menu.setBackground(new Color(50, 205, 50));
			btnSiguiente_Menu.setFont(new Font("SansSerif", Font.PLAIN, 28));
			btnSiguiente_Menu.setMnemonic('C');
			btnSiguiente_Menu.setActionCommand("pnMenu");
			btnSiguiente_Menu.addActionListener(pf);
		}
		return btnSiguiente_Menu;
	}
	private JLabel getLblPlaceHolder_1() {
		if (lblPlaceHolder_1 == null) {
			lblPlaceHolder_1 = new JLabel("");
			lblPlaceHolder_1.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder_1;
	}
	private JPanel getPanelSpacing() {
		if (panelSpacing == null) {
			panelSpacing = new JPanel();
			panelSpacing.setBackground(new Color(0, 0, 128));
			panelSpacing.add(getLblPlaceHolder_1_1());
		}
		return panelSpacing;
	}
	private JLabel getLblPlaceHolder_1_1() {
		if (lblPlaceHolder_1_1 == null) {
			lblPlaceHolder_1_1 = new JLabel("                                                                                                            ");
			lblPlaceHolder_1_1.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder_1_1;
	}
	private JPanel getPanelMenu() {
		if (panelMenu == null) {
			panelMenu = new JPanel();
			panelMenu.setLayout(new BorderLayout(0, 0));
			panelMenu.add(getPanelFiltros(), BorderLayout.WEST);
			panelMenu.add(getMenuBar_2(), BorderLayout.NORTH);
			panelMenu.add(getScrollPaneProductos(), BorderLayout.CENTER);
			panelMenu.add(getPanelFinalizarMenu(), BorderLayout.SOUTH);
			panelMenu.add(getPanelCarrito(), BorderLayout.EAST);
		}
		return panelMenu;
	}
	private JPanel getPanelFiltros() {
		if (panelFiltros == null) {
			panelFiltros = new JPanel();
			panelFiltros.setLayout(new GridLayout(6, 0, 0, 0));
			panelFiltros.add(getBtnTodos());
			panelFiltros.add(getBtnPizzas());
			panelFiltros.add(getBtnEntrantes());
			panelFiltros.add(getBtnEnsaladas());
			panelFiltros.add(getBtnPostres());
			panelFiltros.add(getBtnBebidas());
		}
		return panelFiltros;
	}
	private JButton getBtnTodos() {
		if (btnTodos == null) {
			btnTodos = new JButton("");
			btnTodos.setBackground(new Color(255, 255, 255));
			btnTodos.setToolTipText("Filtrar - Todos");
			setImagenAdaptada(btnTodos, "/img/bienvenida.png");
		}
		return btnTodos;
	}
	private JButton getBtnPizzas() {
		if (btnPizzas == null) {
			btnPizzas = new JButton("");
			btnPizzas.setBackground(new Color(255, 255, 255));
			btnPizzas.setToolTipText("Filtrar - Pizzas");
			setImagenAdaptada(btnPizzas,"/img/PI01.png");
		}
		return btnPizzas;
	}
	private JButton getBtnEntrantes() {
		if (btnEntrantes == null) {
			btnEntrantes = new JButton("");
			btnEntrantes.setBackground(new Color(255, 255, 255));
			btnEntrantes.setToolTipText("Filtrar - Entrantes");
			setImagenAdaptada(btnEntrantes, "/img/ET02.png");
		}
		return btnEntrantes;
	}
	private JButton getBtnEnsaladas() {
		if (btnEnsaladas == null) {
			btnEnsaladas = new JButton("");
			btnEnsaladas.setBackground(new Color(255, 255, 255));
			btnEnsaladas.setToolTipText("Filtrar - Ensaladas");
			setImagenAdaptada(btnEnsaladas, "/img/EN02.png");
		}
		return btnEnsaladas;
	}
	private JButton getBtnPostres() {
		if (btnPostres == null) {
			btnPostres = new JButton("");
			btnPostres.setBackground(new Color(255, 255, 255));
			btnPostres.setToolTipText("Filtrar - Postres");
			setImagenAdaptada(btnPostres, "/img/PO01.png");
		}
		return btnPostres;
	}
	private JButton getBtnBebidas() {
		if (btnBebidas == null) {
			btnBebidas = new JButton("");
			btnBebidas.setBackground(new Color(255, 255, 255));
			btnBebidas.setToolTipText("Filtrar - Bebidas");
			setImagenAdaptada(btnBebidas, "/img/BE03.png");
		}
		return btnBebidas;
	}
	private void setImagenAdaptada(JButton boton, String rutaImagen){
		 Image imgOriginal = new ImageIcon(getClass().getResource(rutaImagen)).getImage(); 
		 Image imgEscalada = imgOriginal.getScaledInstance((int) (100), (int) (100),Image.SCALE_SMOOTH);
		 //si se quiere reescalar la ventana, este 100 tendria que cambiarse por el width y el height  respectivamente de la imagen para que as√≠ se reescale cada vez que cambias el tama√±o
		 //adem√°s este m√©todo deber√≠a llamarse en el constructor de la ventana mientras se usa un evento componentResized
		 boton.setIcon(new ImageIcon(imgEscalada));
	}
	private JMenuBar getMenuBar_2() {
		if (menuBarMenu == null) {
			menuBarMenu = new JMenuBar();
			menuBarMenu.add(getMnOpcionesMenu());
			menuBarMenu.add(getMnAyudaMenu());
		}
		return menuBarMenu;
	}
	private JMenu getMnOpcionesMenu() {
		if (mnOpcionesMenu == null) {
			mnOpcionesMenu = new JMenu("Opciones");
			mnOpcionesMenu.setMnemonic('O');
			mnOpcionesMenu.add(getMntmSalidaMenu());
		}
		return mnOpcionesMenu;
	}
	private JMenuItem getMntmSalidaMenu() {
		if (mntmSalidaMenu == null) {
			mntmSalidaMenu = new JMenuItem("Salida");
			mntmSalidaMenu.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, InputEvent.CTRL_DOWN_MASK));
		}
		return mntmSalidaMenu;
	}
	private JMenu getMnAyudaMenu() {
		if (mnAyudaMenu == null) {
			mnAyudaMenu = new JMenu("Ayuda");
			mnAyudaMenu.setMnemonic('A');
		}
		return mnAyudaMenu;
	}
	private JScrollPane getScrollPaneProductos() {
		if (scrollPaneProductos == null) {
			scrollPaneProductos = new JScrollPane();
			scrollPaneProductos.setViewportView(getPanelProductos());
		}
		return scrollPaneProductos;
	}
	private JPanel getPanelProductos() {
		if (panelProductos == null) {
			panelProductos = new JPanel();
			panelProductos.setBackground(new Color(0, 0, 128));
			panelProductos.setLayout(new GridLayout(0, 5, 40, 40));
			for(int i=0; i<60; i++) {
				JButton j = new JButton(String.valueOf(i));
				panelProductos.add(j);
			}
		}
		return panelProductos;
	}
	private JPanel getPanelFinalizarMenu() {
		if (panelFinalizarMenu == null) {
			panelFinalizarMenu = new JPanel();
			panelFinalizarMenu.setBackground(new Color(128, 0, 0));
			panelFinalizarMenu.setLayout(new GridLayout(0, 5, 0, 0));
			panelFinalizarMenu.add(getLblPlaceHolderMenu());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_3());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_1());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_2());
			panelFinalizarMenu.add(getBtnFinalizar());
		}
		return panelFinalizarMenu;
	}
	private JLabel getLblPlaceHolderMenu() {
		if (lblPlaceHolderMenu == null) {
			lblPlaceHolderMenu = new JLabel("");
		}
		return lblPlaceHolderMenu;
	}
	private JButton getBtnFinalizar() {
		if (btnFinalizar == null) {
			btnFinalizar = new JButton("Finalizar");
			btnFinalizar.setForeground(new Color(255, 255, 255));
			btnFinalizar.setBackground(new Color(50, 205, 50));
			btnFinalizar.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return btnFinalizar;
	}
	private JLabel getLblPlaceHolderMenu_2() {
		if (lblPlaceHolderMenu_2 == null) {
			lblPlaceHolderMenu_2 = new JLabel("");
		}
		return lblPlaceHolderMenu_2;
	}
	private JLabel getLblPlaceHolderMenu_1() {
		if (lblPlaceHolderMenu_1 == null) {
			lblPlaceHolderMenu_1 = new JLabel("");
		}
		return lblPlaceHolderMenu_1;
	}
	private JLabel getLblPlaceHolderMenu_3() {
		if (lblPlaceHolderMenu_3 == null) {
			lblPlaceHolderMenu_3 = new JLabel("");
		}
		return lblPlaceHolderMenu_3;
	}
	private JPanel getPanelCarrito() {
		if (panelCarrito == null) {
			panelCarrito = new JPanel();
			panelCarrito.setBackground(new Color(128, 0, 0));
			panelCarrito.setLayout(new BorderLayout(0, 0));
			panelCarrito.add(getBtnCarrito(), BorderLayout.NORTH);
			panelCarrito.add(getScrollPaneCarrito());
		}
		return panelCarrito;
	}
	private JButton getBtnCarrito() {
		if (btnCarrito == null) {
			btnCarrito = new JButton("");
			setImagenAdaptada(btnCarrito,"/img/carrito.png");
			btnCarrito.addActionListener(pCrt);
		}
		return btnCarrito;
	}
	private JScrollPane getScrollPaneCarrito() {
		if (scrollPaneCarrito == null) {
			scrollPaneCarrito = new JScrollPane();
			scrollPaneCarrito.setEnabled(false);
			scrollPaneCarrito.setViewportView(getTxtAreaCarrito());
		}
		return scrollPaneCarrito;
	}
	private JTextArea getTxtAreaCarrito() {
		if (txtAreaCarrito == null) {
			txtAreaCarrito = new JTextArea();
			txtAreaCarrito.setEditable(false);
			txtAreaCarrito.setVisible(false);
			txtAreaCarrito.setText("jijdijdwjdw\r\ndmqojqowjdoqwjdoqw\r\nfdoqkdoqk");
		}
		return txtAreaCarrito;
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2024-12-25 19:20:35.141
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2024-12-25 19:20:35.142
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2024-12-25 19:20:36.959
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package uo.cpm.modulo.ui;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import java.awt.CardLayout;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.BorderLayout;
import javax.swing.JLabel;
import javax.swing.JButton;
import javax.swing.BoxLayout;
import java.awt.GridLayout;
import java.awt.Image;

import javax.swing.ImageIcon;
import java.awt.Color;
import java.awt.Font;
import javax.swing.border.LineBorder;
import javax.swing.SwingConstants;
import java.awt.FlowLayout;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.Component;
import javax.swing.JTextField;
import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.KeyStroke;
import java.awt.event.KeyEvent;
import java.awt.event.InputEvent;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

public class VentanaPrincipal extends JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private JPanel contentPane;
	private JPanel panelInicio;
	private JPanel panelBienvenida;
	private JPanel panelIdiomas;
	private JButton btnSpanish;
	private JLabel lblIngredients;
	private JButton btnEnglish;
	private JButton btnFrench;
	private JButton btnItalian;
	private JPanel panelSaludo;
	private JLabel lblWelcome;
	private JButton btnSiguiente_Datos;
	private JLabel lblIngredients2;
	private JLabel lblIngredients2_1;
	private ProcessFrame pf = new  ProcessFrame();
	private JPanel panelRegistro;
	private JPanel panelDatos;
	private JTextField textFieldDNI;
	private JLabel lblDNI;
	private JTextField textFieldReserva;
	private JLabel lblReserva;
	private JMenuBar menuBarDatos;
	private JMenu mnOpciones;
	private JMenuItem mntmSalida;
	private JMenu mnAyuda;
	private JPanel panelBtn;
	private JLabel lblPlaceHolder;
	private JButton btnSiguiente_Menu;
	private JLabel lblPlaceHolder_1;
	private JPanel panelSpacing;
	private JLabel lblPlaceHolder_1_1;
	private JPanel panelMenu;
	private JPanel panelFiltros;
	private JButton btnTodos;
	private JButton btnPizzas;
	private JButton btnEntrantes;
	private JButton btnEnsaladas;
	private JButton btnPostres;
	private JButton btnBebidas;
	private JMenuBar menuBarMenu;
	private JMenu mnOpcionesMenu;
	private JMenuItem mntmSalidaMenu;
	private JMenu mnAyudaMenu;
	private JScrollPane scrollPaneProductos;
	private JPanel panelProductos;
	private JPanel panelFinalizarMenu;
	private JLabel lblPlaceHolderMenu;
	private JButton btnFinalizar;
	private JLabel lblPlaceHolderMenu_2;
	private JLabel lblPlaceHolderMenu_1;
	private JLabel lblPlaceHolderMenu_3;
	private JPanel panelCarrito;
	private JButton btnCarrito;
	private JScrollPane scrollPaneCarrito;
	private JTextArea txtAreaCarrito;
	private ProcessCart pCrt = new ProcessCart
	class ProcessFrame implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			changeFrame(e);
			
		}

		
		
	}
	protected void changeFrame(ActionEvent e) {
		String frame = e.getActionCommand();
		((CardLayout)getContentPane().getLayout()).show(getContentPane(), frame);
	}
	class ProcessCart implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			showShoppingCart();
			
		}

		
		
	}
	protected void showShoppingCart() {
		if(getTxtAreaCarrito().isVisible()) {
			getTxtAreaCarrito().setVisible(false);
		}else {
			getTxtAreaCarrito().setVisible(true);
		}
	}

	/**
	 * Create the frame.
	 */
	public VentanaPrincipal() {
		setTitle("Uniovi's ");
		setIconImage(Toolkit.getDefaultToolkit().getImage(VentanaPrincipal.class.getResource("/img/logo.png")));
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 870, 530);
		contentPane = new JPanel();
		contentPane.setBackground(new Color(255, 0, 0));
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(new CardLayout(0, 0));
		contentPane.add(getPanelInicio(), "pnInicio");
		contentPane.add(getPanelRegistro(), "pnRegistro");
		contentPane.add(getPanelMenu(), "pnMenu");
	}

	private JPanel getPanelInicio() {
		if (panelInicio == null) {
			panelInicio = new JPanel();
			panelInicio.setBackground(new Color(255, 0, 0));
			panelInicio.setLayout(new BorderLayout(0, 0));
			panelInicio.add(getPanelBienvenida(), BorderLayout.CENTER);
			panelInicio.add(getPanelIdiomas(), BorderLayout.NORTH);
			panelInicio.add(getPanelSaludo(), BorderLayout.SOUTH);
		}
		return panelInicio;
	}
	private JPanel getPanelBienvenida() {
		if (panelBienvenida == null) {
			panelBienvenida = new JPanel();
			panelBienvenida.setBackground(new Color(0, 0, 139));
			panelBienvenida.setLayout(new BorderLayout(0, 0));
			panelBienvenida.add(getLblIngredients(), BorderLayout.CENTER);
			panelBienvenida.add(getLblIngredients2(), BorderLayout.WEST);
			panelBienvenida.add(getLblIngredients2_1(), BorderLayout.EAST);
		}
		return panelBienvenida;
	}
	private JPanel getPanelIdiomas() {
		if (panelIdiomas == null) {
			panelIdiomas = new JPanel();
			panelIdiomas.setBackground(new Color(255, 0, 0));
			panelIdiomas.setLayout(new GridLayout(0, 4, 0, 0));
			panelIdiomas.add(getBtnSpanish());
			panelIdiomas.add(getBtnEnglish());
			panelIdiomas.add(getBtnFrench());
			panelIdiomas.add(getBtnItalian());
		}
		return panelIdiomas;
	}
	private JButton getBtnSpanish() {
		if (btnSpanish == null) {
			btnSpanish = new JButton("");
			btnSpanish.setBackground(new Color(255, 255, 255));
			btnSpanish.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/es.png")));
		}
		return btnSpanish;
	}
	private JLabel getLblIngredients() {
		if (lblIngredients == null) {
			lblIngredients = new JLabel("");
			lblIngredients.setHorizontalAlignment(SwingConstants.CENTER);
			lblIngredients.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/bienvenida.png")));
		}
		return lblIngredients;
	}
	private JButton getBtnEnglish() {
		if (btnEnglish == null) {
			btnEnglish = new JButton("");
			btnEnglish.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/en.png")));
			btnEnglish.setBackground(Color.WHITE);
		}
		return btnEnglish;
	}
	private JButton getBtnFrench() {
		if (btnFrench == null) {
			btnFrench = new JButton("");
			btnFrench.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/fr.png")));
			btnFrench.setBackground(Color.WHITE);
		}
		return btnFrench;
	}
	private JButton getBtnItalian() {
		if (btnItalian == null) {
			btnItalian = new JButton("");
			btnItalian.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/it.png")));
			btnItalian.setBackground(Color.WHITE);
		}
		return btnItalian;
	}
	private JPanel getPanelSaludo() {
		if (panelSaludo == null) {
			panelSaludo = new JPanel();
			panelSaludo.setBackground(new Color(255, 0, 0));
			panelSaludo.setLayout(new GridLayout(0, 2, 0, 0));
			panelSaludo.add(getLblWelcome_1());
			panelSaludo.add(getBtnSiguiente_Datos());
		}
		return panelSaludo;
	}
	private JLabel getLblWelcome_1() {
		if (lblWelcome == null) {
			lblWelcome = new JLabel("\u00A1Bienvenido a Uniovi's!");
			lblWelcome.setHorizontalAlignment(SwingConstants.CENTER);
			lblWelcome.setForeground(Color.WHITE);
			lblWelcome.setFont(new Font("Dialog", Font.BOLD, 28));
			lblWelcome.setBorder(new LineBorder(new Color(0, 0, 0), 0));
			lblWelcome.setBackground(Color.WHITE);
		}
		return lblWelcome;
	}
	private JButton getBtnSiguiente_Datos() {
		if (btnSiguiente_Datos == null) {
			btnSiguiente_Datos = new JButton("Continuar");
			btnSiguiente_Datos.setAlignmentX(Component.RIGHT_ALIGNMENT);
			btnSiguiente_Datos.setBackground(new Color(50, 205, 50));
			btnSiguiente_Datos.setForeground(new Color(255, 255, 255));
			btnSiguiente_Datos.setFont(new Font("SansSerif", Font.PLAIN, 24));
			btnSiguiente_Datos.setMnemonic('C');
			btnSiguiente_Datos.setBorder(new LineBorder(new Color(0, 0, 0), 4, true));
			btnSiguiente_Datos.setActionCommand("pnRegistro");
			btnSiguiente_Datos.addActionListener(pf);
		}
		return btnSiguiente_Datos;
	}
	private JLabel getLblIngredients2() {
		if (lblIngredients2 == null) {
			lblIngredients2 = new JLabel("");
			lblIngredients2.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/PI03.png")));
		}
		return lblIngredients2;
	}
	private JLabel getLblIngredients2_1() {
		if (lblIngredients2_1 == null) {
			lblIngredients2_1 = new JLabel("");
			lblIngredients2_1.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/BE02.png")));
		}
		return lblIngredients2_1;
	}
	private JPanel getPanelRegistro() {
		if (panelRegistro == null) {
			panelRegistro = new JPanel();
			panelRegistro.setLayout(new BorderLayout(0, 0));
			panelRegistro.add(getPanelDatos(), BorderLayout.CENTER);
			panelRegistro.add(getMenuBar_1(), BorderLayout.NORTH);
			panelRegistro.add(getPanelBtn(), BorderLayout.SOUTH);
			panelRegistro.add(getPanelSpacing(), BorderLayout.EAST);
		}
		return panelRegistro;
	}
	private JPanel getPanelDatos() {
		if (panelDatos == null) {
			panelDatos = new JPanel();
			panelDatos.setBackground(new Color(0, 0, 128));
			panelDatos.setLayout(new GridLayout(6, 1, 0, 0));
			panelDatos.add(getLblDNI());
			panelDatos.add(getTextFieldDNI());
			panelDatos.add(getLblReserva());
			panelDatos.add(getTextFieldReserva());
		}
		return panelDatos;
	}
	private JTextField getTextFieldDNI() {
		if (textFieldDNI == null) {
			textFieldDNI = new JTextField();
			textFieldDNI.setFont(new Font("SansSerif", Font.PLAIN, 28));
			textFieldDNI.setColumns(10);
		}
		return textFieldDNI;
	}
	private JLabel getLblDNI() {
		if (lblDNI == null) {
			lblDNI = new JLabel("DNI / NIE:");
			lblDNI.setLabelFor(getTextFieldDNI());
			lblDNI.setDisplayedMnemonic('D');
			lblDNI.setForeground(new Color(255, 255, 255));
			lblDNI.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return lblDNI;
	}
	private JTextField getTextFieldReserva() {
		if (textFieldReserva == null) {
			textFieldReserva = new JTextField();
			textFieldReserva.setFont(new Font("SansSerif", Font.PLAIN, 28));
			textFieldReserva.setColumns(10);
		}
		return textFieldReserva;
	}
	private JLabel getLblReserva() {
		if (lblReserva == null) {
			lblReserva = new JLabel("N\u00BA / C\u00F3digo de reserva");
			lblReserva.setDisplayedMnemonic('N');
			lblReserva.setLabelFor(getTextFieldReserva());
			lblReserva.setForeground(new Color(255, 255, 255));
			lblReserva.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return lblReserva;
	}

	private JMenuBar getMenuBar_1() {
		if (menuBarDatos == null) {
			menuBarDatos = new JMenuBar();
			menuBarDatos.add(getMnOpciones());
			menuBarDatos.add(getMnAyuda());
		}
		return menuBarDatos;
	}
	private JMenu getMnOpciones() {
		if (mnOpciones == null) {
			mnOpciones = new JMenu("Opciones");
			mnOpciones.setMnemonic('O');
			mnOpciones.add(getMntmSalida());
		}
		return mnOpciones;
	}
	private JMenuItem getMntmSalida() {
		if (mntmSalida == null) {
			mntmSalida = new JMenuItem("Salida");
			mntmSalida.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, InputEvent.CTRL_DOWN_MASK));
		}
		return mntmSalida;
	}
	private JMenu getMnAyuda() {
		if (mnAyuda == null) {
			mnAyuda = new JMenu("Ayuda");
			mnAyuda.setMnemonic('A');
		}
		return mnAyuda;
	}
	private JPanel getPanelBtn() {
		if (panelBtn == null) {
			panelBtn = new JPanel();
			panelBtn.setBackground(new Color(0, 0, 128));
			panelBtn.setLayout(new GridLayout(1, 0, 0, 0));
			panelBtn.add(getLblPlaceHolder_1());
			panelBtn.add(getLblPlaceHolder());
			panelBtn.add(getBtnSiguiente_Menu());
		}
		return panelBtn;
	}
	private JLabel getLblPlaceHolder() {
		if (lblPlaceHolder == null) {
			lblPlaceHolder = new JLabel("");
			lblPlaceHolder.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder;
	}
	private JButton getBtnSiguiente_Menu() {
		if (btnSiguiente_Menu == null) {
			btnSiguiente_Menu = new JButton("Continuar");
			btnSiguiente_Menu.setForeground(new Color(255, 255, 255));
			btnSiguiente_Menu.setBackground(new Color(50, 205, 50));
			btnSiguiente_Menu.setFont(new Font("SansSerif", Font.PLAIN, 28));
			btnSiguiente_Menu.setMnemonic('C');
			btnSiguiente_Menu.setActionCommand("pnMenu");
			btnSiguiente_Menu.addActionListener(pf);
		}
		return btnSiguiente_Menu;
	}
	private JLabel getLblPlaceHolder_1() {
		if (lblPlaceHolder_1 == null) {
			lblPlaceHolder_1 = new JLabel("");
			lblPlaceHolder_1.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder_1;
	}
	private JPanel getPanelSpacing() {
		if (panelSpacing == null) {
			panelSpacing = new JPanel();
			panelSpacing.setBackground(new Color(0, 0, 128));
			panelSpacing.add(getLblPlaceHolder_1_1());
		}
		return panelSpacing;
	}
	private JLabel getLblPlaceHolder_1_1() {
		if (lblPlaceHolder_1_1 == null) {
			lblPlaceHolder_1_1 = new JLabel("                                                                                                            ");
			lblPlaceHolder_1_1.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder_1_1;
	}
	private JPanel getPanelMenu() {
		if (panelMenu == null) {
			panelMenu = new JPanel();
			panelMenu.setLayout(new BorderLayout(0, 0));
			panelMenu.add(getPanelFiltros(), BorderLayout.WEST);
			panelMenu.add(getMenuBar_2(), BorderLayout.NORTH);
			panelMenu.add(getScrollPaneProductos(), BorderLayout.CENTER);
			panelMenu.add(getPanelFinalizarMenu(), BorderLayout.SOUTH);
			panelMenu.add(getPanelCarrito(), BorderLayout.EAST);
		}
		return panelMenu;
	}
	private JPanel getPanelFiltros() {
		if (panelFiltros == null) {
			panelFiltros = new JPanel();
			panelFiltros.setLayout(new GridLayout(6, 0, 0, 0));
			panelFiltros.add(getBtnTodos());
			panelFiltros.add(getBtnPizzas());
			panelFiltros.add(getBtnEntrantes());
			panelFiltros.add(getBtnEnsaladas());
			panelFiltros.add(getBtnPostres());
			panelFiltros.add(getBtnBebidas());
		}
		return panelFiltros;
	}
	private JButton getBtnTodos() {
		if (btnTodos == null) {
			btnTodos = new JButton("");
			btnTodos.setBackground(new Color(255, 255, 255));
			btnTodos.setToolTipText("Filtrar - Todos");
			setImagenAdaptada(btnTodos, "/img/bienvenida.png");
		}
		return btnTodos;
	}
	private JButton getBtnPizzas() {
		if (btnPizzas == null) {
			btnPizzas = new JButton("");
			btnPizzas.setBackground(new Color(255, 255, 255));
			btnPizzas.setToolTipText("Filtrar - Pizzas");
			setImagenAdaptada(btnPizzas,"/img/PI01.png");
		}
		return btnPizzas;
	}
	private JButton getBtnEntrantes() {
		if (btnEntrantes == null) {
			btnEntrantes = new JButton("");
			btnEntrantes.setBackground(new Color(255, 255, 255));
			btnEntrantes.setToolTipText("Filtrar - Entrantes");
			setImagenAdaptada(btnEntrantes, "/img/ET02.png");
		}
		return btnEntrantes;
	}
	private JButton getBtnEnsaladas() {
		if (btnEnsaladas == null) {
			btnEnsaladas = new JButton("");
			btnEnsaladas.setBackground(new Color(255, 255, 255));
			btnEnsaladas.setToolTipText("Filtrar - Ensaladas");
			setImagenAdaptada(btnEnsaladas, "/img/EN02.png");
		}
		return btnEnsaladas;
	}
	private JButton getBtnPostres() {
		if (btnPostres == null) {
			btnPostres = new JButton("");
			btnPostres.setBackground(new Color(255, 255, 255));
			btnPostres.setToolTipText("Filtrar - Postres");
			setImagenAdaptada(btnPostres, "/img/PO01.png");
		}
		return btnPostres;
	}
	private JButton getBtnBebidas() {
		if (btnBebidas == null) {
			btnBebidas = new JButton("");
			btnBebidas.setBackground(new Color(255, 255, 255));
			btnBebidas.setToolTipText("Filtrar - Bebidas");
			setImagenAdaptada(btnBebidas, "/img/BE03.png");
		}
		return btnBebidas;
	}
	private void setImagenAdaptada(JButton boton, String rutaImagen){
		 Image imgOriginal = new ImageIcon(getClass().getResource(rutaImagen)).getImage(); 
		 Image imgEscalada = imgOriginal.getScaledInstance((int) (100), (int) (100),Image.SCALE_SMOOTH);
		 //si se quiere reescalar la ventana, este 100 tendria que cambiarse por el width y el height  respectivamente de la imagen para que as√≠ se reescale cada vez que cambias el tama√±o
		 //adem√°s este m√©todo deber√≠a llamarse en el constructor de la ventana mientras se usa un evento componentResized
		 boton.setIcon(new ImageIcon(imgEscalada));
	}
	private JMenuBar getMenuBar_2() {
		if (menuBarMenu == null) {
			menuBarMenu = new JMenuBar();
			menuBarMenu.add(getMnOpcionesMenu());
			menuBarMenu.add(getMnAyudaMenu());
		}
		return menuBarMenu;
	}
	private JMenu getMnOpcionesMenu() {
		if (mnOpcionesMenu == null) {
			mnOpcionesMenu = new JMenu("Opciones");
			mnOpcionesMenu.setMnemonic('O');
			mnOpcionesMenu.add(getMntmSalidaMenu());
		}
		return mnOpcionesMenu;
	}
	private JMenuItem getMntmSalidaMenu() {
		if (mntmSalidaMenu == null) {
			mntmSalidaMenu = new JMenuItem("Salida");
			mntmSalidaMenu.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, InputEvent.CTRL_DOWN_MASK));
		}
		return mntmSalidaMenu;
	}
	private JMenu getMnAyudaMenu() {
		if (mnAyudaMenu == null) {
			mnAyudaMenu = new JMenu("Ayuda");
			mnAyudaMenu.setMnemonic('A');
		}
		return mnAyudaMenu;
	}
	private JScrollPane getScrollPaneProductos() {
		if (scrollPaneProductos == null) {
			scrollPaneProductos = new JScrollPane();
			scrollPaneProductos.setViewportView(getPanelProductos());
		}
		return scrollPaneProductos;
	}
	private JPanel getPanelProductos() {
		if (panelProductos == null) {
			panelProductos = new JPanel();
			panelProductos.setBackground(new Color(0, 0, 128));
			panelProductos.setLayout(new GridLayout(0, 5, 40, 40));
			for(int i=0; i<60; i++) {
				JButton j = new JButton(String.valueOf(i));
				panelProductos.add(j);
			}
		}
		return panelProductos;
	}
	private JPanel getPanelFinalizarMenu() {
		if (panelFinalizarMenu == null) {
			panelFinalizarMenu = new JPanel();
			panelFinalizarMenu.setBackground(new Color(128, 0, 0));
			panelFinalizarMenu.setLayout(new GridLayout(0, 5, 0, 0));
			panelFinalizarMenu.add(getLblPlaceHolderMenu());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_3());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_1());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_2());
			panelFinalizarMenu.add(getBtnFinalizar());
		}
		return panelFinalizarMenu;
	}
	private JLabel getLblPlaceHolderMenu() {
		if (lblPlaceHolderMenu == null) {
			lblPlaceHolderMenu = new JLabel("");
		}
		return lblPlaceHolderMenu;
	}
	private JButton getBtnFinalizar() {
		if (btnFinalizar == null) {
			btnFinalizar = new JButton("Finalizar");
			btnFinalizar.setForeground(new Color(255, 255, 255));
			btnFinalizar.setBackground(new Color(50, 205, 50));
			btnFinalizar.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return btnFinalizar;
	}
	private JLabel getLblPlaceHolderMenu_2() {
		if (lblPlaceHolderMenu_2 == null) {
			lblPlaceHolderMenu_2 = new JLabel("");
		}
		return lblPlaceHolderMenu_2;
	}
	private JLabel getLblPlaceHolderMenu_1() {
		if (lblPlaceHolderMenu_1 == null) {
			lblPlaceHolderMenu_1 = new JLabel("");
		}
		return lblPlaceHolderMenu_1;
	}
	private JLabel getLblPlaceHolderMenu_3() {
		if (lblPlaceHolderMenu_3 == null) {
			lblPlaceHolderMenu_3 = new JLabel("");
		}
		return lblPlaceHolderMenu_3;
	}
	private JPanel getPanelCarrito() {
		if (panelCarrito == null) {
			panelCarrito = new JPanel();
			panelCarrito.setBackground(new Color(128, 0, 0));
			panelCarrito.setLayout(new BorderLayout(0, 0));
			panelCarrito.add(getBtnCarrito(), BorderLayout.NORTH);
			panelCarrito.add(getScrollPaneCarrito());
		}
		return panelCarrito;
	}
	private JButton getBtnCarrito() {
		if (btnCarrito == null) {
			btnCarrito = new JButton("");
			setImagenAdaptada(btnCarrito,"/img/carrito.png");
			btnCarrito.addActionListener(pCrt);
		}
		return btnCarrito;
	}
	private JScrollPane getScrollPaneCarrito() {
		if (scrollPaneCarrito == null) {
			scrollPaneCarrito = new JScrollPane();
			scrollPaneCarrito.setEnabled(false);
			scrollPaneCarrito.setViewportView(getTxtAreaCarrito());
		}
		return scrollPaneCarrito;
	}
	private JTextArea getTxtAreaCarrito() {
		if (txtAreaCarrito == null) {
			txtAreaCarrito = new JTextArea();
			txtAreaCarrito.setEditable(false);
			txtAreaCarrito.setVisible(false);
			txtAreaCarrito.setText("jijdijdwjdw\r\ndmqojqowjdoqwjdoqw\r\nfdoqkdoqk");
		}
		return txtAreaCarrito;
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2024-12-25 19:20:36.960
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2024-12-25 19:20:36.961
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-25 19:24:50.534
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui 4 0 2024-12-25 19:32:23.090
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.NullPointerException: Cannot invoke "org.eclipse.wb.gef.core.EditPart.getViewer()" because the return value of "org.eclipse.wb.gef.core.EditPart.getParent()" is null
	at org.eclipse.wb.gef.core.EditPart.getViewer(EditPart.java:539)
	at org.eclipse.wb.gef.core.EditPart.getViewer(EditPart.java:539)
	at org.eclipse.wb.internal.core.gef.part.menu.MenuObjectEditPart.removeListeners(MenuObjectEditPart.java:108)
	at org.eclipse.wb.internal.core.gef.part.menu.MenuObjectEditPart.refresh(MenuObjectEditPart.java:221)
	at org.eclipse.wb.internal.core.gef.part.menu.MenuObjectEditPart$1.selectionChanged(MenuObjectEditPart.java:129)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.fireSelectionChanged(AbstractEditPartViewer.java:215)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:278)
	at org.eclipse.wb.internal.core.editor.structure.components.ComponentsTreePage.setSelection(ComponentsTreePage.java:216)
	at org.eclipse.wb.internal.core.editor.structure.components.ComponentsTreePage.selectGraphicalViewer(ComponentsTreePage.java:182)
	at org.eclipse.wb.internal.core.editor.structure.components.ComponentsTreePage$1.selectionChanged(ComponentsTreePage.java:125)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.fireSelectionChanged(AbstractEditPartViewer.java:215)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:278)
	at org.eclipse.wb.internal.gef.core.AbstractEditPartViewer.setSelection(AbstractEditPartViewer.java:206)
	at org.eclipse.wb.internal.gef.tree.TreeViewer$1.widgetSelected(TreeViewer.java:188)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-25 19:33:49.640
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-25 19:37:42.560
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-25 19:52:07.521
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager$6.run(UndoManager.java:338)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-25 19:56:47.509
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager$6.run(UndoManager.java:338)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-25 19:58:15.878
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager$6.run(UndoManager.java:338)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-25 19:58:15.879
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager$6.run(UndoManager.java:338)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-25 19:59:18.051
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager$6.run(UndoManager.java:338)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-25 19:59:18.052
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager$6.run(UndoManager.java:338)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-25 20:06:40.610
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager$6.run(UndoManager.java:338)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-25 20:07:46.105
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-25 20:14:39.423
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-25 20:16:34.906
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager$6.run(UndoManager.java:338)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-25 20:19:32.608
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager$6.run(UndoManager.java:338)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-25 20:21:06.077
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager$6.run(UndoManager.java:338)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core 4 4 2024-12-25 20:40:20.990
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package uo.cpm.modulo.ui;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import java.awt.CardLayout;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.BorderLayout;
import javax.swing.JLabel;
import javax.swing.JButton;
import javax.swing.BoxLayout;
import java.awt.GridLayout;
import java.awt.Image;

import javax.swing.ImageIcon;
import java.awt.Color;
import java.awt.Font;
import javax.swing.border.LineBorder;
import javax.swing.SwingConstants;
import java.awt.FlowLayout;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.Component;
import javax.swing.JTextField;
import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import java.awt.event.KeyEvent;
import java.awt.event.InputEvent;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JPasswordField;
import javax.swing.JSplitPane;
import javax.swing.JRadioButton;
import javax.swing.ButtonGroup;
import javax.swing.JSeparator;

public class VentanaPrincipal extends JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private JPanel contentPane;
	private JPanel panelInicio;
	private JPanel panelBienvenida;
	private JPanel panelIdiomas;
	private JButton btnSpanish;
	private JLabel lblIngredients;
	private JButton btnEnglish;
	private JButton btnFrench;
	private JButton btnItalian;
	private JPanel panelSaludo;
	private JLabel lblWelcome;
	private JButton btnSiguiente_Datos;
	private JLabel lblIngredients2;
	private JLabel lblIngredients2_1;
	private ProcessFrame pf = new  ProcessFrame();
	private JPanel panelRegistro;
	private JPanel panelDatos;
	private JTextField textFieldDNI;
	private JLabel lblDNI;
	private JLabel lblReserva;
	private JPanel panelBtn;
	private JLabel lblPlaceHolder;
	private JButton btnSiguiente_Menu;
	private JLabel lblPlaceHolder_1;
	private JPanel panelSpacing;
	private JLabel lblPlaceHolder_1_1;
	private JPanel panelMenu;
	private JPanel panelFiltros;
	private JButton btnTodos;
	private JButton btnPizzas;
	private JButton btnEntrantes;
	private JButton btnEnsaladas;
	private JButton btnPostres;
	private JButton btnBebidas;
	private JScrollPane scrollPaneProductos;
	private JPanel panelProductos;
	private JPanel panelFinalizarMenu;
	private JLabel lblPlaceHolderMenu;
	private JButton btnFinalizar;
	private JLabel lblPlaceHolderMenu_2;
	private JLabel lblPlaceHolderMenu_1;
	private JLabel lblPlaceHolderMenu_3;
	private JPanel panelCarrito;
	private JButton btnCarrito;
	private JScrollPane scrollPaneCarrito;
	private JTextArea txtAreaCarrito;
	private ProcessCart pCrt = new ProcessCart();
	private JPasswordField passwordFieldReserva;
	private JPanel panelPago;
	private JScrollPane scrollPaneListaPedidos;
	private JPanel panelOpcionesFinales;
	private JTextArea textAreaPedidos;
	private JPanel panelMetodoPago;
	private JPanel panelEleccionJugar;
	private JLabel lblOpcionesJugar;
	private JRadioButton rdbtnJugar;
	private JRadioButton rdbtnNoJugar;
	private final ButtonGroup buttonGroupJugar = new ButtonGroup();
	private JLabel lblOpcionesPago;
	private JRadioButton rdbtnTarjeta;
	private JRadioButton rdbtnEfectivo;
	private JPanel panelBtnFinales;
	private JButton btnCancelar;
	private JButton btnFinalizaryPagar;
	private final ButtonGroup buttonGroupPago = new ButtonGroup();
	private JMenuBar menuBar;
	private JMenu mnOptions;
	private JMenuItem mntmSalida;
	private JMenuItem mntmNuevaSesion;
	private JSeparator separator;
	private JMenu mnAyuda;
	private JMenuItem mntmNewMenuItem;
	private ProcessExit pE = new 
	class ProcessExit implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			if(JOptionPane.showConfirmDialog(null, "¬øEst√°s seguro/a de que quieres salir de la aplicaci√≥n?")==JOptionPane.YES_OPTION) {
				System.exit(0);
			}
			
		}
		
	}
	class ProcessFrame implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			changeFrame(e);
			
		}

		
		
	}
	protected void changeFrame(ActionEvent e) {
		String frame = e.getActionCommand();
		((CardLayout)getContentPane().getLayout()).show(getContentPane(), frame);
	}
	class ProcessCart implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			showShoppingCart();
			
		}

		
		
	}
	protected void showShoppingCart() {
		if(getTxtAreaCarrito().isVisible()) {
			getTxtAreaCarrito().setVisible(false);
		}else {
			getTxtAreaCarrito().setVisible(true);
		}
	}

	/**
	 * Create the frame.
	 */
	public VentanaPrincipal() {
		setTitle("Uniovi's ");
		setIconImage(Toolkit.getDefaultToolkit().getImage(VentanaPrincipal.class.getResource("/img/logo.png")));
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 870, 530);
		setJMenuBar(getMenuBar_4());
		contentPane = new JPanel();
		contentPane.setBackground(new Color(255, 0, 0));
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(new CardLayout(0, 0));
		contentPane.add(getPanelInicio(), "pnInicio");
		contentPane.add(getPanelRegistro(), "pnRegistro");
		contentPane.add(getPanelMenu(), "pnMenu");
		contentPane.add(getPanelPago(), "pnPagar");
	}

	private JPanel getPanelInicio() {
		if (panelInicio == null) {
			panelInicio = new JPanel();
			panelInicio.setBackground(new Color(255, 0, 0));
			panelInicio.setLayout(new BorderLayout(0, 0));
			panelInicio.add(getPanelBienvenida(), BorderLayout.CENTER);
			panelInicio.add(getPanelIdiomas(), BorderLayout.NORTH);
			panelInicio.add(getPanelSaludo(), BorderLayout.SOUTH);
		}
		return panelInicio;
	}
	private JPanel getPanelBienvenida() {
		if (panelBienvenida == null) {
			panelBienvenida = new JPanel();
			panelBienvenida.setBackground(new Color(0, 0, 139));
			panelBienvenida.setLayout(new BorderLayout(0, 0));
			panelBienvenida.add(getLblIngredients(), BorderLayout.CENTER);
			panelBienvenida.add(getLblIngredients2(), BorderLayout.WEST);
			panelBienvenida.add(getLblIngredients2_1(), BorderLayout.EAST);
		}
		return panelBienvenida;
	}
	private JPanel getPanelIdiomas() {
		if (panelIdiomas == null) {
			panelIdiomas = new JPanel();
			panelIdiomas.setBackground(new Color(255, 0, 0));
			panelIdiomas.setLayout(new GridLayout(0, 4, 0, 0));
			panelIdiomas.add(getBtnSpanish());
			panelIdiomas.add(getBtnEnglish());
			panelIdiomas.add(getBtnFrench());
			panelIdiomas.add(getBtnItalian());
		}
		return panelIdiomas;
	}
	private JButton getBtnSpanish() {
		if (btnSpanish == null) {
			btnSpanish = new JButton("");
			btnSpanish.setBackground(new Color(255, 255, 255));
			btnSpanish.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/es.png")));
		}
		return btnSpanish;
	}
	private JLabel getLblIngredients() {
		if (lblIngredients == null) {
			lblIngredients = new JLabel("");
			lblIngredients.setHorizontalAlignment(SwingConstants.CENTER);
			lblIngredients.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/bienvenida.png")));
		}
		return lblIngredients;
	}
	private JButton getBtnEnglish() {
		if (btnEnglish == null) {
			btnEnglish = new JButton("");
			btnEnglish.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/en.png")));
			btnEnglish.setBackground(Color.WHITE);
		}
		return btnEnglish;
	}
	private JButton getBtnFrench() {
		if (btnFrench == null) {
			btnFrench = new JButton("");
			btnFrench.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/fr.png")));
			btnFrench.setBackground(Color.WHITE);
		}
		return btnFrench;
	}
	private JButton getBtnItalian() {
		if (btnItalian == null) {
			btnItalian = new JButton("");
			btnItalian.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/it.png")));
			btnItalian.setBackground(Color.WHITE);
		}
		return btnItalian;
	}
	private JPanel getPanelSaludo() {
		if (panelSaludo == null) {
			panelSaludo = new JPanel();
			panelSaludo.setBackground(new Color(255, 0, 0));
			panelSaludo.setLayout(new GridLayout(0, 2, 0, 0));
			panelSaludo.add(getLblWelcome_1());
			panelSaludo.add(getBtnSiguiente_Datos());
		}
		return panelSaludo;
	}
	private JLabel getLblWelcome_1() {
		if (lblWelcome == null) {
			lblWelcome = new JLabel("\u00A1Bienvenido a Uniovi's!");
			lblWelcome.setHorizontalAlignment(SwingConstants.CENTER);
			lblWelcome.setForeground(Color.WHITE);
			lblWelcome.setFont(new Font("Dialog", Font.BOLD, 28));
			lblWelcome.setBorder(new LineBorder(new Color(0, 0, 0), 0));
			lblWelcome.setBackground(Color.WHITE);
		}
		return lblWelcome;
	}
	private JButton getBtnSiguiente_Datos() {
		if (btnSiguiente_Datos == null) {
			btnSiguiente_Datos = new JButton("Continuar");
			btnSiguiente_Datos.setAlignmentX(Component.RIGHT_ALIGNMENT);
			btnSiguiente_Datos.setBackground(new Color(50, 205, 50));
			btnSiguiente_Datos.setForeground(new Color(255, 255, 255));
			btnSiguiente_Datos.setFont(new Font("SansSerif", Font.PLAIN, 24));
			btnSiguiente_Datos.setMnemonic('C');
			btnSiguiente_Datos.setBorder(new LineBorder(new Color(0, 0, 0), 4, true));
			btnSiguiente_Datos.setActionCommand("pnRegistro");
			btnSiguiente_Datos.addActionListener(pf);
		}
		return btnSiguiente_Datos;
	}
	private JLabel getLblIngredients2() {
		if (lblIngredients2 == null) {
			lblIngredients2 = new JLabel("");
			lblIngredients2.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/PI03.png")));
		}
		return lblIngredients2;
	}
	private JLabel getLblIngredients2_1() {
		if (lblIngredients2_1 == null) {
			lblIngredients2_1 = new JLabel("");
			lblIngredients2_1.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/BE02.png")));
		}
		return lblIngredients2_1;
	}
	private JPanel getPanelRegistro() {
		if (panelRegistro == null) {
			panelRegistro = new JPanel();
			panelRegistro.setLayout(new BorderLayout(0, 0));
			panelRegistro.add(getPanelDatos(), BorderLayout.CENTER);
			panelRegistro.add(getPanelBtn(), BorderLayout.SOUTH);
			panelRegistro.add(getPanelSpacing(), BorderLayout.EAST);
		}
		return panelRegistro;
	}
	private JPanel getPanelDatos() {
		if (panelDatos == null) {
			panelDatos = new JPanel();
			panelDatos.setBackground(new Color(0, 0, 128));
			panelDatos.setLayout(new GridLayout(6, 1, 0, 0));
			panelDatos.add(getLblDNI());
			panelDatos.add(getTextFieldDNI());
			panelDatos.add(getLblReserva());
			panelDatos.add(getPasswordFieldReserva());
		}
		return panelDatos;
	}
	private JTextField getTextFieldDNI() {
		if (textFieldDNI == null) {
			textFieldDNI = new JTextField();
			textFieldDNI.setFont(new Font("SansSerif", Font.PLAIN, 28));
			textFieldDNI.setColumns(10);
		}
		return textFieldDNI;
	}
	private JLabel getLblDNI() {
		if (lblDNI == null) {
			lblDNI = new JLabel("DNI / NIE:");
			lblDNI.setLabelFor(getTextFieldDNI());
			lblDNI.setDisplayedMnemonic('D');
			lblDNI.setForeground(new Color(255, 255, 255));
			lblDNI.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return lblDNI;
	}
	private JLabel getLblReserva() {
		if (lblReserva == null) {
			lblReserva = new JLabel("N\u00BA / C\u00F3digo de reserva");
			lblReserva.setLabelFor(getPasswordFieldReserva());
			lblReserva.setDisplayedMnemonic('N');
			lblReserva.setForeground(new Color(255, 255, 255));
			lblReserva.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return lblReserva;
	}
	private JPanel getPanelBtn() {
		if (panelBtn == null) {
			panelBtn = new JPanel();
			panelBtn.setBackground(new Color(0, 0, 128));
			panelBtn.setLayout(new GridLayout(1, 0, 0, 0));
			panelBtn.add(getLblPlaceHolder_1());
			panelBtn.add(getLblPlaceHolder());
			panelBtn.add(getBtnSiguiente_Menu());
		}
		return panelBtn;
	}
	private JLabel getLblPlaceHolder() {
		if (lblPlaceHolder == null) {
			lblPlaceHolder = new JLabel("");
			lblPlaceHolder.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder;
	}
	private JButton getBtnSiguiente_Menu() {
		if (btnSiguiente_Menu == null) {
			btnSiguiente_Menu = new JButton("Continuar");
			btnSiguiente_Menu.setForeground(new Color(255, 255, 255));
			btnSiguiente_Menu.setBackground(new Color(50, 205, 50));
			btnSiguiente_Menu.setFont(new Font("SansSerif", Font.PLAIN, 28));
			btnSiguiente_Menu.setMnemonic('C');
			btnSiguiente_Menu.setActionCommand("pnMenu");
			btnSiguiente_Menu.addActionListener(pf);
		}
		return btnSiguiente_Menu;
	}
	private JLabel getLblPlaceHolder_1() {
		if (lblPlaceHolder_1 == null) {
			lblPlaceHolder_1 = new JLabel("");
			lblPlaceHolder_1.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder_1;
	}
	private JPanel getPanelSpacing() {
		if (panelSpacing == null) {
			panelSpacing = new JPanel();
			panelSpacing.setBackground(new Color(0, 0, 128));
			panelSpacing.add(getLblPlaceHolder_1_1());
		}
		return panelSpacing;
	}
	private JLabel getLblPlaceHolder_1_1() {
		if (lblPlaceHolder_1_1 == null) {
			lblPlaceHolder_1_1 = new JLabel("                                                                                                            ");
			lblPlaceHolder_1_1.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder_1_1;
	}
	private JPanel getPanelMenu() {
		if (panelMenu == null) {
			panelMenu = new JPanel();
			panelMenu.setLayout(new BorderLayout(0, 0));
			panelMenu.add(getPanelFiltros(), BorderLayout.WEST);
			panelMenu.add(getScrollPaneProductos(), BorderLayout.CENTER);
			panelMenu.add(getPanelFinalizarMenu(), BorderLayout.SOUTH);
			panelMenu.add(getPanelCarrito(), BorderLayout.EAST);
		}
		return panelMenu;
	}
	private JPanel getPanelFiltros() {
		if (panelFiltros == null) {
			panelFiltros = new JPanel();
			panelFiltros.setLayout(new GridLayout(6, 0, 0, 0));
			panelFiltros.add(getBtnTodos());
			panelFiltros.add(getBtnPizzas());
			panelFiltros.add(getBtnEntrantes());
			panelFiltros.add(getBtnEnsaladas());
			panelFiltros.add(getBtnPostres());
			panelFiltros.add(getBtnBebidas());
		}
		return panelFiltros;
	}
	private JButton getBtnTodos() {
		if (btnTodos == null) {
			btnTodos = new JButton("");
			btnTodos.setBackground(new Color(255, 255, 255));
			btnTodos.setToolTipText("Filtrar - Todos");
			setImagenAdaptada(btnTodos, "/img/bienvenida.png");
		}
		return btnTodos;
	}
	private JButton getBtnPizzas() {
		if (btnPizzas == null) {
			btnPizzas = new JButton("");
			btnPizzas.setBackground(new Color(255, 255, 255));
			btnPizzas.setToolTipText("Filtrar - Pizzas");
			setImagenAdaptada(btnPizzas,"/img/PI01.png");
		}
		return btnPizzas;
	}
	private JButton getBtnEntrantes() {
		if (btnEntrantes == null) {
			btnEntrantes = new JButton("");
			btnEntrantes.setBackground(new Color(255, 255, 255));
			btnEntrantes.setToolTipText("Filtrar - Entrantes");
			setImagenAdaptada(btnEntrantes, "/img/ET02.png");
		}
		return btnEntrantes;
	}
	private JButton getBtnEnsaladas() {
		if (btnEnsaladas == null) {
			btnEnsaladas = new JButton("");
			btnEnsaladas.setBackground(new Color(255, 255, 255));
			btnEnsaladas.setToolTipText("Filtrar - Ensaladas");
			setImagenAdaptada(btnEnsaladas, "/img/EN02.png");
		}
		return btnEnsaladas;
	}
	private JButton getBtnPostres() {
		if (btnPostres == null) {
			btnPostres = new JButton("");
			btnPostres.setBackground(new Color(255, 255, 255));
			btnPostres.setToolTipText("Filtrar - Postres");
			setImagenAdaptada(btnPostres, "/img/PO01.png");
		}
		return btnPostres;
	}
	private JButton getBtnBebidas() {
		if (btnBebidas == null) {
			btnBebidas = new JButton("");
			btnBebidas.setBackground(new Color(255, 255, 255));
			btnBebidas.setToolTipText("Filtrar - Bebidas");
			setImagenAdaptada(btnBebidas, "/img/BE03.png");
		}
		return btnBebidas;
	}
	private void setImagenAdaptada(JButton boton, String rutaImagen){
		 Image imgOriginal = new ImageIcon(getClass().getResource(rutaImagen)).getImage(); 
		 Image imgEscalada = imgOriginal.getScaledInstance((int) (100), (int) (100),Image.SCALE_SMOOTH);
		 //si se quiere reescalar la ventana, este 100 tendria que cambiarse por el width y el height  respectivamente de la imagen para que as√≠ se reescale cada vez que cambias el tama√±o
		 //adem√°s este m√©todo deber√≠a llamarse en el constructor de la ventana mientras se usa un evento componentResized
		 boton.setIcon(new ImageIcon(imgEscalada));
	}
	private JScrollPane getScrollPaneProductos() {
		if (scrollPaneProductos == null) {
			scrollPaneProductos = new JScrollPane();
			scrollPaneProductos.setViewportView(getPanelProductos());
		}
		return scrollPaneProductos;
	}
	private JPanel getPanelProductos() {
		if (panelProductos == null) {
			panelProductos = new JPanel();
			panelProductos.setBackground(new Color(0, 0, 128));
			panelProductos.setLayout(new GridLayout(0, 5, 40, 40));
			generarBotones();
		}
		return panelProductos;
	}

	protected void generarBotones() {
		for(int i=0; i<60; i++) {
			JButton j = new JButton("");
			j.setText("jihdihdiqgduqgudgquy");
			j.setVerticalTextPosition(SwingConstants.BOTTOM); 
			j.setHorizontalTextPosition(SwingConstants.CENTER);
			setImagenAdaptada(j, "/img/logo.png");
			panelProductos.add(j);
		}
	}
	private JPanel getPanelFinalizarMenu() {
		if (panelFinalizarMenu == null) {
			panelFinalizarMenu = new JPanel();
			panelFinalizarMenu.setBackground(new Color(128, 0, 0));
			panelFinalizarMenu.setLayout(new GridLayout(0, 5, 0, 0));
			panelFinalizarMenu.add(getLblPlaceHolderMenu());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_3());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_1());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_2());
			panelFinalizarMenu.add(getBtnFinalizar());
		}
		return panelFinalizarMenu;
	}
	private JLabel getLblPlaceHolderMenu() {
		if (lblPlaceHolderMenu == null) {
			lblPlaceHolderMenu = new JLabel("");
		}
		return lblPlaceHolderMenu;
	}
	private JButton getBtnFinalizar() {
		if (btnFinalizar == null) {
			btnFinalizar = new JButton("Finalizar");
			btnFinalizar.setMnemonic('F');
			btnFinalizar.setForeground(new Color(255, 255, 255));
			btnFinalizar.setBackground(new Color(50, 205, 50));
			btnFinalizar.setFont(new Font("SansSerif", Font.PLAIN, 28));
			btnFinalizar.setActionCommand("pnPagar");
			btnFinalizar.addActionListener(pf);
		}
		return btnFinalizar;
	}
	private JLabel getLblPlaceHolderMenu_2() {
		if (lblPlaceHolderMenu_2 == null) {
			lblPlaceHolderMenu_2 = new JLabel("");
		}
		return lblPlaceHolderMenu_2;
	}
	private JLabel getLblPlaceHolderMenu_1() {
		if (lblPlaceHolderMenu_1 == null) {
			lblPlaceHolderMenu_1 = new JLabel("");
		}
		return lblPlaceHolderMenu_1;
	}
	private JLabel getLblPlaceHolderMenu_3() {
		if (lblPlaceHolderMenu_3 == null) {
			lblPlaceHolderMenu_3 = new JLabel("");
		}
		return lblPlaceHolderMenu_3;
	}
	private JPanel getPanelCarrito() {
		if (panelCarrito == null) {
			panelCarrito = new JPanel();
			panelCarrito.setBackground(new Color(128, 0, 0));
			panelCarrito.setLayout(new BorderLayout(0, 0));
			panelCarrito.add(getBtnCarrito(), BorderLayout.NORTH);
			panelCarrito.add(getScrollPaneCarrito());
		}
		return panelCarrito;
	}
	private JButton getBtnCarrito() {
		if (btnCarrito == null) {
			btnCarrito = new JButton("");
			btnCarrito.setToolTipText("Mostrar/Ocultar Carrito");
			btnCarrito.setBackground(new Color(255, 255, 255));
			setImagenAdaptada(btnCarrito,"/img/carrito.png");
			btnCarrito.addActionListener(pCrt);
		}
		return btnCarrito;
	}
	private JScrollPane getScrollPaneCarrito() {
		if (scrollPaneCarrito == null) {
			scrollPaneCarrito = new JScrollPane();
			scrollPaneCarrito.setEnabled(false);
			scrollPaneCarrito.setViewportView(getTxtAreaCarrito());
		}
		return scrollPaneCarrito;
	}
	private JTextArea getTxtAreaCarrito() {
		if (txtAreaCarrito == null) {
			txtAreaCarrito = new JTextArea();
			txtAreaCarrito.setBackground(new Color(255, 255, 255));
			txtAreaCarrito.setEditable(false);
			txtAreaCarrito.setVisible(false);
			txtAreaCarrito.setText("jijdijdwjdw\r\ndmqojqowjdoqwjdoqw\r\nfdoqkdoqk");
		}
		return txtAreaCarrito;
	}
	private JPasswordField getPasswordFieldReserva() {
		if (passwordFieldReserva == null) {
			passwordFieldReserva = new JPasswordField();
			passwordFieldReserva.setBackground(new Color(255, 255, 255));
			passwordFieldReserva.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return passwordFieldReserva;
	}
	private JPanel getPanelPago() {
		if (panelPago == null) {
			panelPago = new JPanel();
			panelPago.setLayout(new GridLayout(0, 2, 0, 0));
			panelPago.add(getScrollPaneListaPedidos());
			panelPago.add(getPanelOpcionesFinales());
		}
		return panelPago;
	}
	private JScrollPane getScrollPaneListaPedidos() {
		if (scrollPaneListaPedidos == null) {
			scrollPaneListaPedidos = new JScrollPane();
			scrollPaneListaPedidos.setViewportView(getTextAreaPedidos());
		}
		return scrollPaneListaPedidos;
	}
	private JPanel getPanelOpcionesFinales() {
		if (panelOpcionesFinales == null) {
			panelOpcionesFinales = new JPanel();
			panelOpcionesFinales.setBackground(new Color(0, 0, 128));
			panelOpcionesFinales.setLayout(new BorderLayout(0, 0));
			panelOpcionesFinales.add(getPanelMetodoPago(), BorderLayout.CENTER);
			panelOpcionesFinales.add(getPanelEleccionJugar(), BorderLayout.NORTH);
			panelOpcionesFinales.add(getPanelBtnFinales(), BorderLayout.SOUTH);
		}
		return panelOpcionesFinales;
	}
	private JTextArea getTextAreaPedidos() {
		if (textAreaPedidos == null) {
			textAreaPedidos = new JTextArea();
			textAreaPedidos.setText("ojdowjdowjdowdowjdo\r\ndojdodjwojdowjdm\r\ndmwdjowjdo");
			textAreaPedidos.setFont(new Font("SansSerif", Font.PLAIN, 21));
		}
		return textAreaPedidos;
	}
	private JPanel getPanelMetodoPago() {
		if (panelMetodoPago == null) {
			panelMetodoPago = new JPanel();
			panelMetodoPago.setBackground(new Color(0, 0, 128));
			panelMetodoPago.setLayout(new GridLayout(4, 1, 0, 0));
			panelMetodoPago.add(getLblOpcionesPago());
			panelMetodoPago.add(getRdbtnTarjeta());
			panelMetodoPago.add(getRdbtnEfectivo());
		}
		return panelMetodoPago;
	}
	private JPanel getPanelEleccionJugar() {
		if (panelEleccionJugar == null) {
			panelEleccionJugar = new JPanel();
			panelEleccionJugar.setBackground(new Color(0, 0, 128));
			panelEleccionJugar.setLayout(new GridLayout(3, 1, 0, 0));
			panelEleccionJugar.add(getLblOpcionesJugar());
			panelEleccionJugar.add(getRdbtnJugar());
			panelEleccionJugar.add(getRdbtnNoJugar());
		}
		return panelEleccionJugar;
	}
	private JLabel getLblOpcionesJugar() {
		if (lblOpcionesJugar == null) {
			lblOpcionesJugar = new JLabel("\u00BFQuiere jugar para descuentos?");
			lblOpcionesJugar.setForeground(new Color(255, 255, 255));
			lblOpcionesJugar.setFont(new Font("SansSerif", Font.BOLD, 27));
		}
		return lblOpcionesJugar;
	}
	private JRadioButton getRdbtnJugar() {
		if (rdbtnJugar == null) {
			rdbtnJugar = new JRadioButton("Jugar");
			rdbtnJugar.setBackground(new Color(0, 0, 128));
			rdbtnJugar.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnJugar.setSelected(true);
			rdbtnJugar.setMnemonic('J');
			buttonGroupJugar.add(rdbtnJugar);
			rdbtnJugar.setForeground(new Color(255, 255, 255));
		}
		return rdbtnJugar;
	}
	private JRadioButton getRdbtnNoJugar() {
		if (rdbtnNoJugar == null) {
			rdbtnNoJugar = new JRadioButton("No jugar");
			rdbtnNoJugar.setBackground(new Color(0, 0, 128));
			rdbtnNoJugar.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnNoJugar.setMnemonic('N');
			buttonGroupJugar.add(rdbtnNoJugar);
			rdbtnNoJugar.setForeground(new Color(255, 255, 255));
		}
		return rdbtnNoJugar;
	}
	private JLabel getLblOpcionesPago() {
		if (lblOpcionesPago == null) {
			lblOpcionesPago = new JLabel("\u00BFC\u00F3mo desea pagar?");
			lblOpcionesPago.setHorizontalAlignment(SwingConstants.LEFT);
			lblOpcionesPago.setFont(new Font("SansSerif", Font.BOLD, 27));
			lblOpcionesPago.setForeground(new Color(255, 255, 255));
		}
		return lblOpcionesPago;
	}
	private JRadioButton getRdbtnTarjeta() {
		if (rdbtnTarjeta == null) {
			rdbtnTarjeta = new JRadioButton("Tarjeta");
			rdbtnTarjeta.setBackground(new Color(0, 0, 128));
			rdbtnTarjeta.setMnemonic('T');
			rdbtnTarjeta.setSelected(true);
			buttonGroupPago.add(rdbtnTarjeta);
			rdbtnTarjeta.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnTarjeta.setForeground(new Color(255, 255, 255));
			rdbtnTarjeta.setHorizontalAlignment(SwingConstants.LEFT);
		}
		return rdbtnTarjeta;
	}
	private JRadioButton getRdbtnEfectivo() {
		if (rdbtnEfectivo == null) {
			rdbtnEfectivo = new JRadioButton("Efectivo");
			rdbtnEfectivo.setBackground(new Color(0, 0, 128));
			rdbtnEfectivo.setMnemonic('E');
			buttonGroupPago.add(rdbtnEfectivo);
			rdbtnEfectivo.setForeground(new Color(255, 255, 255));
			rdbtnEfectivo.setFont(new Font("SansSerif", Font.PLAIN, 19));
		}
		return rdbtnEfectivo;
	}
	private JPanel getPanelBtnFinales() {
		if (panelBtnFinales == null) {
			panelBtnFinales = new JPanel();
			panelBtnFinales.setLayout(new GridLayout(0, 2, 0, 0));
			panelBtnFinales.add(getBtnCancelar());
			panelBtnFinales.add(getBtnFinalizaryPagar());
		}
		return panelBtnFinales;
	}
	private JButton getBtnCancelar() {
		if (btnCancelar == null) {
			btnCancelar = new JButton("Cancelar");
			btnCancelar.setForeground(new Color(255, 255, 255));
			btnCancelar.setBackground(new Color(255, 0, 0));
			btnCancelar.setFont(new Font("SansSerif", Font.PLAIN, 27));
			btnCancelar.setMnemonic('C');
			btnCancelar.setActionCommand("pnMenu");
			btnCancelar.addActionListener(pf);
		}
		return btnCancelar;
	}
	private JButton getBtnFinalizaryPagar() {
		if (btnFinalizaryPagar == null) {
			btnFinalizaryPagar = new JButton("Finalizar y pagar");
			btnFinalizaryPagar.setMnemonic('F');
			btnFinalizaryPagar.setBackground(new Color(50, 205, 50));
			btnFinalizaryPagar.setForeground(new Color(255, 255, 255));
			btnFinalizaryPagar.setFont(new Font("SansSerif", Font.PLAIN, 23));
		}
		return btnFinalizaryPagar;
	}
	private JMenuBar getMenuBar_4() {
		if (menuBar == null) {
			menuBar = new JMenuBar();
			menuBar.add(getMenu_1());
			menuBar.add(getMenu_2());
		}
		return menuBar;
	}
	private JMenu getMenu_1() {
		if (mnOptions == null) {
			mnOptions = new JMenu("Opciones");
			mnOptions.setMnemonic('O');
			mnOptions.add(getMntmNuevaSesion());
			mnOptions.add(getSeparator());
			mnOptions.add(getMntmSalida());
		}
		return mnOptions;
	}
	private JMenuItem getMntmSalida() {
		if (mntmSalida == null) {
			mntmSalida = new JMenuItem("Salida");
			mntmSalida.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_X, InputEvent.CTRL_DOWN_MASK));
		}
		return mntmSalida;
	}
	private JMenuItem getMntmNuevaSesion() {
		if (mntmNuevaSesion == null) {
			mntmNuevaSesion = new JMenuItem("Nueva Sesion");
			mntmNuevaSesion.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, InputEvent.CTRL_DOWN_MASK));
		}
		return mntmNuevaSesion;
	}
	private JSeparator getSeparator() {
		if (separator == null) {
			separator = new JSeparator();
		}
		return separator;
	}
	private JMenu getMenu_2() {
		if (mnAyuda == null) {
			mnAyuda = new JMenu("Ayuda");
			mnAyuda.setMnemonic('A');
			mnAyuda.add(getMntmNewMenuItem());
		}
		return mnAyuda;
	}
	private JMenuItem getMntmNewMenuItem() {
		if (mntmNewMenuItem == null) {
			mntmNewMenuItem = new JMenuItem("Abrir men\u00FA de ayuda");
			mntmNewMenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F1, InputEvent.CTRL_DOWN_MASK));
		}
		return mntmNewMenuItem;
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2024-12-25 20:40:20.991
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2024-12-25 20:40:20.992
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-25 20:56:09.788
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager$6.run(UndoManager.java:338)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core 4 4 2024-12-25 21:00:49.817
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package uo.cpm.modulo.ui;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import java.awt.CardLayout;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.BorderLayout;
import javax.swing.JLabel;
import javax.swing.JButton;
import javax.swing.BoxLayout;
import java.awt.GridLayout;
import java.awt.Image;

import javax.swing.ImageIcon;
import java.awt.Color;
import java.awt.Font;
import javax.swing.border.LineBorder;
import javax.swing.SwingConstants;
import java.awt.FlowLayout;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.Component;
import javax.swing.JTextField;
import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.InputEvent;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JPasswordField;
import javax.swing.JSplitPane;
import javax.swing.JRadioButton;
import javax.swing.ButtonGroup;
import javax.swing.JSeparator;

public class VentanaPrincipal extends JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private JPanel contentPane;
	private JPanel panelInicio;
	private JPanel panelBienvenida;
	private JPanel panelIdiomas;
	private JButton btnSpanish;
	private JLabel lblIngredients;
	private JButton btnEnglish;
	private JButton btnFrench;
	private JButton btnItalian;
	private JPanel panelSaludo;
	private JLabel lblWelcome;
	private JButton btnSiguiente_Datos;
	private JLabel lblIngredients2;
	private JLabel lblIngredients2_1;
	private ProcessFrame pf = new  ProcessFrame();
	private JPanel panelRegistro;
	private JPanel panelDatos;
	private JTextField textFieldDNI;
	private JLabel lblDNI;
	private JLabel lblReserva;
	private JPanel panelBtn;
	private JLabel lblPlaceHolder;
	private JButton btnSiguiente_Menu;
	private JLabel lblPlaceHolder_1;
	private JPanel panelSpacing;
	private JLabel lblPlaceHolder_1_1;
	private JPanel panelMenu;
	private JPanel panelFiltros;
	private JButton btnTodos;
	private JButton btnPizzas;
	private JButton btnEntrantes;
	private JButton btnEnsaladas;
	private JButton btnPostres;
	private JButton btnBebidas;
	private JScrollPane scrollPaneProductos;
	private JPanel panelProductos;
	private JPanel panelFinalizarMenu;
	private JLabel lblPlaceHolderMenu;
	private JButton btnFinalizar;
	private JLabel lblPlaceHolderMenu_2;
	private JLabel lblPlaceHolderMenu_1;
	private JLabel lblPlaceHolderMenu_3;
	private JPanel panelCarrito;
	private JButton btnCarrito;
	private JScrollPane scrollPaneCarrito;
	private JTextArea txtAreaCarrito;
	private ProcessCart pCrt = new ProcessCart();
	private JPasswordField passwordFieldReserva;
	private JPanel panelPago;
	private JScrollPane scrollPaneListaPedidos;
	private JPanel panelOpcionesFinales;
	private JTextArea textAreaPedidos;
	private JPanel panelMetodoPago;
	private JPanel panelEleccionJugar;
	private JLabel lblOpcionesJugar;
	private JRadioButton rdbtnJugar;
	private JRadioButton rdbtnNoJugar;
	private final ButtonGroup buttonGroupJugar = new ButtonGroup();
	private JLabel lblOpcionesPago;
	private JRadioButton rdbtnTarjeta;
	private JRadioButton rdbtnEfectivo;
	private JPanel panelBtnFinales;
	private JButton btnCancelar;
	private JButton btnFinalizaryPagar;
	private final ButtonGroup buttonGroupPago = new ButtonGroup();
	private JMenuBar menuBar;
	private JMenu mnOptions;
	private JMenuItem mntmSalida;
	private JMenuItem mntmNuevaSesion;
	private JSeparator separator;
	private JMenu mnAyuda;
	private JMenuItem mntmAyuda;
	private ProcessExit pE = new ProcessExit();
	private ProcessWindowHelpFocus p = new 
	class ProcessWindowHelpFocus extends WindowAdapter{
		@Override
		public void windowOpened(WindowEvent e) {
			getBtnSiguiente_Datos().requestFocus();
		}
	}
	class ProcessExit implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			confirmChoice();
			
		}

		
		
	}
	protected void confirmChoice() {
		if(JOptionPane.showConfirmDialog(null, "¬øEst√°s seguro/a de que quieres salir de la aplicaci√≥n?")==JOptionPane.YES_OPTION) {
			System.exit(0);
		}
	}
	class ProcessFrame implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			changeFrame(e);
			
		}

		
		
	}
	protected void changeFrame(ActionEvent e) {
		String frame = e.getActionCommand();
		((CardLayout)getContentPane().getLayout()).show(getContentPane(), frame);
	}
	class ProcessCart implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			showShoppingCart();
			
		}

		
		
	}
	protected void showShoppingCart() {
		if(getTxtAreaCarrito().isVisible()) {
			getTxtAreaCarrito().setVisible(false);
		}else {
			getTxtAreaCarrito().setVisible(true);
		}
	}

	/**
	 * Create the frame.
	 */
	public VentanaPrincipal() {
		addWindowListener(p);
		setTitle("Uniovi's ");
		setIconImage(Toolkit.getDefaultToolkit().getImage(VentanaPrincipal.class.getResource("/img/logo.png")));
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 870, 530);
		setJMenuBar(getMenuBar_4());
		contentPane = new JPanel();
		contentPane.setBackground(new Color(255, 0, 0));
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(new CardLayout(0, 0));
		contentPane.add(getPanelInicio(), "pnInicio");
		contentPane.add(getPanelRegistro(), "pnRegistro");
		contentPane.add(getPanelMenu(), "pnMenu");
		contentPane.add(getPanelPago(), "pnPagar");
	}

	private JPanel getPanelInicio() {
		if (panelInicio == null) {
			panelInicio = new JPanel();
			panelInicio.setBackground(new Color(255, 0, 0));
			panelInicio.setLayout(new BorderLayout(0, 0));
			panelInicio.add(getPanelBienvenida(), BorderLayout.CENTER);
			panelInicio.add(getPanelIdiomas(), BorderLayout.NORTH);
			panelInicio.add(getPanelSaludo(), BorderLayout.SOUTH);
		}
		return panelInicio;
	}
	private JPanel getPanelBienvenida() {
		if (panelBienvenida == null) {
			panelBienvenida = new JPanel();
			panelBienvenida.setBackground(new Color(0, 0, 139));
			panelBienvenida.setLayout(new BorderLayout(0, 0));
			panelBienvenida.add(getLblIngredients(), BorderLayout.CENTER);
			panelBienvenida.add(getLblIngredients2(), BorderLayout.WEST);
			panelBienvenida.add(getLblIngredients2_1(), BorderLayout.EAST);
		}
		return panelBienvenida;
	}
	private JPanel getPanelIdiomas() {
		if (panelIdiomas == null) {
			panelIdiomas = new JPanel();
			panelIdiomas.setBackground(new Color(255, 0, 0));
			panelIdiomas.setLayout(new GridLayout(0, 4, 0, 0));
			panelIdiomas.add(getBtnSpanish());
			panelIdiomas.add(getBtnEnglish());
			panelIdiomas.add(getBtnFrench());
			panelIdiomas.add(getBtnItalian());
		}
		return panelIdiomas;
	}
	private JButton getBtnSpanish() {
		if (btnSpanish == null) {
			btnSpanish = new JButton("");
			btnSpanish.setBackground(new Color(255, 255, 255));
			btnSpanish.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/es.png")));
		}
		return btnSpanish;
	}
	private JLabel getLblIngredients() {
		if (lblIngredients == null) {
			lblIngredients = new JLabel("");
			lblIngredients.setHorizontalAlignment(SwingConstants.CENTER);
			lblIngredients.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/bienvenida.png")));
		}
		return lblIngredients;
	}
	private JButton getBtnEnglish() {
		if (btnEnglish == null) {
			btnEnglish = new JButton("");
			btnEnglish.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/en.png")));
			btnEnglish.setBackground(Color.WHITE);
		}
		return btnEnglish;
	}
	private JButton getBtnFrench() {
		if (btnFrench == null) {
			btnFrench = new JButton("");
			btnFrench.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/fr.png")));
			btnFrench.setBackground(Color.WHITE);
		}
		return btnFrench;
	}
	private JButton getBtnItalian() {
		if (btnItalian == null) {
			btnItalian = new JButton("");
			btnItalian.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/it.png")));
			btnItalian.setBackground(Color.WHITE);
		}
		return btnItalian;
	}
	private JPanel getPanelSaludo() {
		if (panelSaludo == null) {
			panelSaludo = new JPanel();
			panelSaludo.setBackground(new Color(255, 0, 0));
			panelSaludo.setLayout(new GridLayout(0, 2, 0, 0));
			panelSaludo.add(getLblWelcome_1());
			panelSaludo.add(getBtnSiguiente_Datos());
		}
		return panelSaludo;
	}
	private JLabel getLblWelcome_1() {
		if (lblWelcome == null) {
			lblWelcome = new JLabel("\u00A1Bienvenido a Uniovi's!");
			lblWelcome.setHorizontalAlignment(SwingConstants.CENTER);
			lblWelcome.setForeground(Color.WHITE);
			lblWelcome.setFont(new Font("Dialog", Font.BOLD, 28));
			lblWelcome.setBorder(new LineBorder(new Color(0, 0, 0), 0));
			lblWelcome.setBackground(Color.WHITE);
		}
		return lblWelcome;
	}
	private JButton getBtnSiguiente_Datos() {
		if (btnSiguiente_Datos == null) {
			btnSiguiente_Datos = new JButton("Continuar");
			btnSiguiente_Datos.setAlignmentX(Component.RIGHT_ALIGNMENT);
			btnSiguiente_Datos.setBackground(new Color(50, 205, 50));
			btnSiguiente_Datos.setForeground(new Color(255, 255, 255));
			btnSiguiente_Datos.setFont(new Font("SansSerif", Font.PLAIN, 24));
			btnSiguiente_Datos.setMnemonic('C');
			btnSiguiente_Datos.setBorder(new LineBorder(new Color(0, 0, 0), 4, true));
			btnSiguiente_Datos.setActionCommand("pnRegistro");
			btnSiguiente_Datos.addActionListener(pf);
		}
		return btnSiguiente_Datos;
	}
	private JLabel getLblIngredients2() {
		if (lblIngredients2 == null) {
			lblIngredients2 = new JLabel("");
			lblIngredients2.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/PI03.png")));
		}
		return lblIngredients2;
	}
	private JLabel getLblIngredients2_1() {
		if (lblIngredients2_1 == null) {
			lblIngredients2_1 = new JLabel("");
			lblIngredients2_1.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/BE02.png")));
		}
		return lblIngredients2_1;
	}
	private JPanel getPanelRegistro() {
		if (panelRegistro == null) {
			panelRegistro = new JPanel();
			panelRegistro.setLayout(new BorderLayout(0, 0));
			panelRegistro.add(getPanelDatos(), BorderLayout.CENTER);
			panelRegistro.add(getPanelBtn(), BorderLayout.SOUTH);
			panelRegistro.add(getPanelSpacing(), BorderLayout.EAST);
		}
		return panelRegistro;
	}
	private JPanel getPanelDatos() {
		if (panelDatos == null) {
			panelDatos = new JPanel();
			panelDatos.setBackground(new Color(0, 0, 128));
			panelDatos.setLayout(new GridLayout(6, 1, 0, 0));
			panelDatos.add(getLblDNI());
			panelDatos.add(getTextFieldDNI());
			panelDatos.add(getLblReserva());
			panelDatos.add(getPasswordFieldReserva());
		}
		return panelDatos;
	}
	private JTextField getTextFieldDNI() {
		if (textFieldDNI == null) {
			textFieldDNI = new JTextField();
			textFieldDNI.setFont(new Font("SansSerif", Font.PLAIN, 28));
			textFieldDNI.setColumns(10);
		}
		return textFieldDNI;
	}
	private JLabel getLblDNI() {
		if (lblDNI == null) {
			lblDNI = new JLabel("DNI / NIE:");
			lblDNI.setLabelFor(getTextFieldDNI());
			lblDNI.setDisplayedMnemonic('D');
			lblDNI.setForeground(new Color(255, 255, 255));
			lblDNI.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return lblDNI;
	}
	private JLabel getLblReserva() {
		if (lblReserva == null) {
			lblReserva = new JLabel("N\u00BA / C\u00F3digo de reserva");
			lblReserva.setLabelFor(getPasswordFieldReserva());
			lblReserva.setDisplayedMnemonic('N');
			lblReserva.setForeground(new Color(255, 255, 255));
			lblReserva.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return lblReserva;
	}
	private JPanel getPanelBtn() {
		if (panelBtn == null) {
			panelBtn = new JPanel();
			panelBtn.setBackground(new Color(0, 0, 128));
			panelBtn.setLayout(new GridLayout(1, 0, 0, 0));
			panelBtn.add(getLblPlaceHolder_1());
			panelBtn.add(getLblPlaceHolder());
			panelBtn.add(getBtnSiguiente_Menu());
		}
		return panelBtn;
	}
	private JLabel getLblPlaceHolder() {
		if (lblPlaceHolder == null) {
			lblPlaceHolder = new JLabel("");
			lblPlaceHolder.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder;
	}
	private JButton getBtnSiguiente_Menu() {
		if (btnSiguiente_Menu == null) {
			btnSiguiente_Menu = new JButton("Continuar");
			btnSiguiente_Menu.setForeground(new Color(255, 255, 255));
			btnSiguiente_Menu.setBackground(new Color(50, 205, 50));
			btnSiguiente_Menu.setFont(new Font("SansSerif", Font.PLAIN, 28));
			btnSiguiente_Menu.setMnemonic('C');
			btnSiguiente_Menu.setActionCommand("pnMenu");
			btnSiguiente_Menu.addActionListener(pf);
		}
		return btnSiguiente_Menu;
	}
	private JLabel getLblPlaceHolder_1() {
		if (lblPlaceHolder_1 == null) {
			lblPlaceHolder_1 = new JLabel("");
			lblPlaceHolder_1.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder_1;
	}
	private JPanel getPanelSpacing() {
		if (panelSpacing == null) {
			panelSpacing = new JPanel();
			panelSpacing.setBackground(new Color(0, 0, 128));
			panelSpacing.add(getLblPlaceHolder_1_1());
		}
		return panelSpacing;
	}
	private JLabel getLblPlaceHolder_1_1() {
		if (lblPlaceHolder_1_1 == null) {
			lblPlaceHolder_1_1 = new JLabel("                                                                                                            ");
			lblPlaceHolder_1_1.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder_1_1;
	}
	private JPanel getPanelMenu() {
		if (panelMenu == null) {
			panelMenu = new JPanel();
			panelMenu.setLayout(new BorderLayout(0, 0));
			panelMenu.add(getPanelFiltros(), BorderLayout.WEST);
			panelMenu.add(getScrollPaneProductos(), BorderLayout.CENTER);
			panelMenu.add(getPanelFinalizarMenu(), BorderLayout.SOUTH);
			panelMenu.add(getPanelCarrito(), BorderLayout.EAST);
		}
		return panelMenu;
	}
	private JPanel getPanelFiltros() {
		if (panelFiltros == null) {
			panelFiltros = new JPanel();
			panelFiltros.setLayout(new GridLayout(6, 0, 0, 0));
			panelFiltros.add(getBtnTodos());
			panelFiltros.add(getBtnPizzas());
			panelFiltros.add(getBtnEntrantes());
			panelFiltros.add(getBtnEnsaladas());
			panelFiltros.add(getBtnPostres());
			panelFiltros.add(getBtnBebidas());
		}
		return panelFiltros;
	}
	private JButton getBtnTodos() {
		if (btnTodos == null) {
			btnTodos = new JButton("");
			btnTodos.setBackground(new Color(255, 255, 255));
			btnTodos.setToolTipText("Filtrar - Todos");
			setImagenAdaptada(btnTodos, "/img/bienvenida.png");
		}
		return btnTodos;
	}
	private JButton getBtnPizzas() {
		if (btnPizzas == null) {
			btnPizzas = new JButton("");
			btnPizzas.setBackground(new Color(255, 255, 255));
			btnPizzas.setToolTipText("Filtrar - Pizzas");
			setImagenAdaptada(btnPizzas,"/img/PI01.png");
		}
		return btnPizzas;
	}
	private JButton getBtnEntrantes() {
		if (btnEntrantes == null) {
			btnEntrantes = new JButton("");
			btnEntrantes.setBackground(new Color(255, 255, 255));
			btnEntrantes.setToolTipText("Filtrar - Entrantes");
			setImagenAdaptada(btnEntrantes, "/img/ET02.png");
		}
		return btnEntrantes;
	}
	private JButton getBtnEnsaladas() {
		if (btnEnsaladas == null) {
			btnEnsaladas = new JButton("");
			btnEnsaladas.setBackground(new Color(255, 255, 255));
			btnEnsaladas.setToolTipText("Filtrar - Ensaladas");
			setImagenAdaptada(btnEnsaladas, "/img/EN02.png");
		}
		return btnEnsaladas;
	}
	private JButton getBtnPostres() {
		if (btnPostres == null) {
			btnPostres = new JButton("");
			btnPostres.setBackground(new Color(255, 255, 255));
			btnPostres.setToolTipText("Filtrar - Postres");
			setImagenAdaptada(btnPostres, "/img/PO01.png");
		}
		return btnPostres;
	}
	private JButton getBtnBebidas() {
		if (btnBebidas == null) {
			btnBebidas = new JButton("");
			btnBebidas.setBackground(new Color(255, 255, 255));
			btnBebidas.setToolTipText("Filtrar - Bebidas");
			setImagenAdaptada(btnBebidas, "/img/BE03.png");
		}
		return btnBebidas;
	}
	private void setImagenAdaptada(JButton boton, String rutaImagen){
		 Image imgOriginal = new ImageIcon(getClass().getResource(rutaImagen)).getImage(); 
		 Image imgEscalada = imgOriginal.getScaledInstance((int) (100), (int) (100),Image.SCALE_SMOOTH);
		 //si se quiere reescalar la ventana, este 100 tendria que cambiarse por el width y el height  respectivamente de la imagen para que as√≠ se reescale cada vez que cambias el tama√±o
		 //adem√°s este m√©todo deber√≠a llamarse en el constructor de la ventana mientras se usa un evento componentResized
		 boton.setIcon(new ImageIcon(imgEscalada));
	}
	private JScrollPane getScrollPaneProductos() {
		if (scrollPaneProductos == null) {
			scrollPaneProductos = new JScrollPane();
			scrollPaneProductos.setViewportView(getPanelProductos());
		}
		return scrollPaneProductos;
	}
	private JPanel getPanelProductos() {
		if (panelProductos == null) {
			panelProductos = new JPanel();
			panelProductos.setBackground(new Color(0, 0, 128));
			panelProductos.setLayout(new GridLayout(0, 5, 40, 40));
			generarBotones();
		}
		return panelProductos;
	}

	protected void generarBotones() {
		for(int i=0; i<60; i++) {
			JButton j = new JButton("");
			j.setText("jihdihdiqgduqgudgquy");
			j.setVerticalTextPosition(SwingConstants.BOTTOM); 
			j.setHorizontalTextPosition(SwingConstants.CENTER);
			setImagenAdaptada(j, "/img/logo.png");
			panelProductos.add(j);
		}
	}
	private JPanel getPanelFinalizarMenu() {
		if (panelFinalizarMenu == null) {
			panelFinalizarMenu = new JPanel();
			panelFinalizarMenu.setBackground(new Color(128, 0, 0));
			panelFinalizarMenu.setLayout(new GridLayout(0, 5, 0, 0));
			panelFinalizarMenu.add(getLblPlaceHolderMenu());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_3());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_1());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_2());
			panelFinalizarMenu.add(getBtnFinalizar());
		}
		return panelFinalizarMenu;
	}
	private JLabel getLblPlaceHolderMenu() {
		if (lblPlaceHolderMenu == null) {
			lblPlaceHolderMenu = new JLabel("");
		}
		return lblPlaceHolderMenu;
	}
	private JButton getBtnFinalizar() {
		if (btnFinalizar == null) {
			btnFinalizar = new JButton("Finalizar");
			btnFinalizar.setMnemonic('F');
			btnFinalizar.setForeground(new Color(255, 255, 255));
			btnFinalizar.setBackground(new Color(50, 205, 50));
			btnFinalizar.setFont(new Font("SansSerif", Font.PLAIN, 28));
			btnFinalizar.setActionCommand("pnPagar");
			btnFinalizar.addActionListener(pf);
		}
		return btnFinalizar;
	}
	private JLabel getLblPlaceHolderMenu_2() {
		if (lblPlaceHolderMenu_2 == null) {
			lblPlaceHolderMenu_2 = new JLabel("");
		}
		return lblPlaceHolderMenu_2;
	}
	private JLabel getLblPlaceHolderMenu_1() {
		if (lblPlaceHolderMenu_1 == null) {
			lblPlaceHolderMenu_1 = new JLabel("");
		}
		return lblPlaceHolderMenu_1;
	}
	private JLabel getLblPlaceHolderMenu_3() {
		if (lblPlaceHolderMenu_3 == null) {
			lblPlaceHolderMenu_3 = new JLabel("");
		}
		return lblPlaceHolderMenu_3;
	}
	private JPanel getPanelCarrito() {
		if (panelCarrito == null) {
			panelCarrito = new JPanel();
			panelCarrito.setBackground(new Color(128, 0, 0));
			panelCarrito.setLayout(new BorderLayout(0, 0));
			panelCarrito.add(getBtnCarrito(), BorderLayout.NORTH);
			panelCarrito.add(getScrollPaneCarrito());
		}
		return panelCarrito;
	}
	private JButton getBtnCarrito() {
		if (btnCarrito == null) {
			btnCarrito = new JButton("");
			btnCarrito.setToolTipText("Mostrar/Ocultar Carrito");
			btnCarrito.setBackground(new Color(255, 255, 255));
			setImagenAdaptada(btnCarrito,"/img/carrito.png");
			btnCarrito.addActionListener(pCrt);
		}
		return btnCarrito;
	}
	private JScrollPane getScrollPaneCarrito() {
		if (scrollPaneCarrito == null) {
			scrollPaneCarrito = new JScrollPane();
			scrollPaneCarrito.setEnabled(false);
			scrollPaneCarrito.setViewportView(getTxtAreaCarrito());
		}
		return scrollPaneCarrito;
	}
	private JTextArea getTxtAreaCarrito() {
		if (txtAreaCarrito == null) {
			txtAreaCarrito = new JTextArea();
			txtAreaCarrito.setBackground(new Color(255, 255, 255));
			txtAreaCarrito.setEditable(false);
			txtAreaCarrito.setVisible(false);
			txtAreaCarrito.setText("jijdijdwjdw\r\ndmqojqowjdoqwjdoqw\r\nfdoqkdoqk");
		}
		return txtAreaCarrito;
	}
	private JPasswordField getPasswordFieldReserva() {
		if (passwordFieldReserva == null) {
			passwordFieldReserva = new JPasswordField();
			passwordFieldReserva.setBackground(new Color(255, 255, 255));
			passwordFieldReserva.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return passwordFieldReserva;
	}
	private JPanel getPanelPago() {
		if (panelPago == null) {
			panelPago = new JPanel();
			panelPago.setLayout(new GridLayout(0, 2, 0, 0));
			panelPago.add(getScrollPaneListaPedidos());
			panelPago.add(getPanelOpcionesFinales());
		}
		return panelPago;
	}
	private JScrollPane getScrollPaneListaPedidos() {
		if (scrollPaneListaPedidos == null) {
			scrollPaneListaPedidos = new JScrollPane();
			scrollPaneListaPedidos.setViewportView(getTextAreaPedidos());
		}
		return scrollPaneListaPedidos;
	}
	private JPanel getPanelOpcionesFinales() {
		if (panelOpcionesFinales == null) {
			panelOpcionesFinales = new JPanel();
			panelOpcionesFinales.setBackground(new Color(0, 0, 128));
			panelOpcionesFinales.setLayout(new BorderLayout(0, 0));
			panelOpcionesFinales.add(getPanelMetodoPago(), BorderLayout.CENTER);
			panelOpcionesFinales.add(getPanelEleccionJugar(), BorderLayout.NORTH);
			panelOpcionesFinales.add(getPanelBtnFinales(), BorderLayout.SOUTH);
		}
		return panelOpcionesFinales;
	}
	private JTextArea getTextAreaPedidos() {
		if (textAreaPedidos == null) {
			textAreaPedidos = new JTextArea();
			textAreaPedidos.setText("ojdowjdowjdowdowjdo\r\ndojdodjwojdowjdm\r\ndmwdjowjdo");
			textAreaPedidos.setFont(new Font("SansSerif", Font.PLAIN, 21));
		}
		return textAreaPedidos;
	}
	private JPanel getPanelMetodoPago() {
		if (panelMetodoPago == null) {
			panelMetodoPago = new JPanel();
			panelMetodoPago.setBackground(new Color(0, 0, 128));
			panelMetodoPago.setLayout(new GridLayout(4, 1, 0, 0));
			panelMetodoPago.add(getLblOpcionesPago());
			panelMetodoPago.add(getRdbtnTarjeta());
			panelMetodoPago.add(getRdbtnEfectivo());
		}
		return panelMetodoPago;
	}
	private JPanel getPanelEleccionJugar() {
		if (panelEleccionJugar == null) {
			panelEleccionJugar = new JPanel();
			panelEleccionJugar.setBackground(new Color(0, 0, 128));
			panelEleccionJugar.setLayout(new GridLayout(3, 1, 0, 0));
			panelEleccionJugar.add(getLblOpcionesJugar());
			panelEleccionJugar.add(getRdbtnJugar());
			panelEleccionJugar.add(getRdbtnNoJugar());
		}
		return panelEleccionJugar;
	}
	private JLabel getLblOpcionesJugar() {
		if (lblOpcionesJugar == null) {
			lblOpcionesJugar = new JLabel("\u00BFQuiere jugar para descuentos?");
			lblOpcionesJugar.setForeground(new Color(255, 255, 255));
			lblOpcionesJugar.setFont(new Font("SansSerif", Font.BOLD, 27));
		}
		return lblOpcionesJugar;
	}
	private JRadioButton getRdbtnJugar() {
		if (rdbtnJugar == null) {
			rdbtnJugar = new JRadioButton("Jugar");
			rdbtnJugar.setBackground(new Color(0, 0, 128));
			rdbtnJugar.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnJugar.setSelected(true);
			rdbtnJugar.setMnemonic('J');
			buttonGroupJugar.add(rdbtnJugar);
			rdbtnJugar.setForeground(new Color(255, 255, 255));
		}
		return rdbtnJugar;
	}
	private JRadioButton getRdbtnNoJugar() {
		if (rdbtnNoJugar == null) {
			rdbtnNoJugar = new JRadioButton("No jugar");
			rdbtnNoJugar.setBackground(new Color(0, 0, 128));
			rdbtnNoJugar.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnNoJugar.setMnemonic('N');
			buttonGroupJugar.add(rdbtnNoJugar);
			rdbtnNoJugar.setForeground(new Color(255, 255, 255));
		}
		return rdbtnNoJugar;
	}
	private JLabel getLblOpcionesPago() {
		if (lblOpcionesPago == null) {
			lblOpcionesPago = new JLabel("\u00BFC\u00F3mo desea pagar?");
			lblOpcionesPago.setHorizontalAlignment(SwingConstants.LEFT);
			lblOpcionesPago.setFont(new Font("SansSerif", Font.BOLD, 27));
			lblOpcionesPago.setForeground(new Color(255, 255, 255));
		}
		return lblOpcionesPago;
	}
	private JRadioButton getRdbtnTarjeta() {
		if (rdbtnTarjeta == null) {
			rdbtnTarjeta = new JRadioButton("Tarjeta");
			rdbtnTarjeta.setBackground(new Color(0, 0, 128));
			rdbtnTarjeta.setMnemonic('T');
			rdbtnTarjeta.setSelected(true);
			buttonGroupPago.add(rdbtnTarjeta);
			rdbtnTarjeta.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnTarjeta.setForeground(new Color(255, 255, 255));
			rdbtnTarjeta.setHorizontalAlignment(SwingConstants.LEFT);
		}
		return rdbtnTarjeta;
	}
	private JRadioButton getRdbtnEfectivo() {
		if (rdbtnEfectivo == null) {
			rdbtnEfectivo = new JRadioButton("Efectivo");
			rdbtnEfectivo.setBackground(new Color(0, 0, 128));
			rdbtnEfectivo.setMnemonic('E');
			buttonGroupPago.add(rdbtnEfectivo);
			rdbtnEfectivo.setForeground(new Color(255, 255, 255));
			rdbtnEfectivo.setFont(new Font("SansSerif", Font.PLAIN, 19));
		}
		return rdbtnEfectivo;
	}
	private JPanel getPanelBtnFinales() {
		if (panelBtnFinales == null) {
			panelBtnFinales = new JPanel();
			panelBtnFinales.setLayout(new GridLayout(0, 2, 0, 0));
			panelBtnFinales.add(getBtnCancelar());
			panelBtnFinales.add(getBtnFinalizaryPagar());
		}
		return panelBtnFinales;
	}
	private JButton getBtnCancelar() {
		if (btnCancelar == null) {
			btnCancelar = new JButton("Cancelar");
			btnCancelar.setForeground(new Color(255, 255, 255));
			btnCancelar.setBackground(new Color(255, 0, 0));
			btnCancelar.setFont(new Font("SansSerif", Font.PLAIN, 27));
			btnCancelar.setMnemonic('C');
			btnCancelar.setActionCommand("pnMenu");
			btnCancelar.addActionListener(pf);
		}
		return btnCancelar;
	}
	private JButton getBtnFinalizaryPagar() {
		if (btnFinalizaryPagar == null) {
			btnFinalizaryPagar = new JButton("Finalizar y pagar");
			btnFinalizaryPagar.setMnemonic('F');
			btnFinalizaryPagar.setBackground(new Color(50, 205, 50));
			btnFinalizaryPagar.setForeground(new Color(255, 255, 255));
			btnFinalizaryPagar.setFont(new Font("SansSerif", Font.PLAIN, 23));
		}
		return btnFinalizaryPagar;
	}
	private JMenuBar getMenuBar_4() {
		if (menuBar == null) {
			menuBar = new JMenuBar();
			menuBar.add(getMenu_1());
			menuBar.add(getMenu_2());
		}
		return menuBar;
	}
	private JMenu getMenu_1() {
		if (mnOptions == null) {
			mnOptions = new JMenu("Opciones");
			mnOptions.setMnemonic('O');
			mnOptions.add(getMntmNuevaSesion());
			mnOptions.add(getSeparator());
			mnOptions.add(getMntmSalida());
		}
		return mnOptions;
	}
	private JMenuItem getMntmSalida() {
		if (mntmSalida == null) {
			mntmSalida = new JMenuItem("Salida");
			mntmSalida.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_X, InputEvent.CTRL_DOWN_MASK));
			mntmSalida.addActionListener(pE);
		}
		return mntmSalida;
	}
	private JMenuItem getMntmNuevaSesion() {
		if (mntmNuevaSesion == null) {
			mntmNuevaSesion = new JMenuItem("Nueva Sesion");
			mntmNuevaSesion.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, InputEvent.CTRL_DOWN_MASK));
		}
		return mntmNuevaSesion;
	}
	private JSeparator getSeparator() {
		if (separator == null) {
			separator = new JSeparator();
		}
		return separator;
	}
	private JMenu getMenu_2() {
		if (mnAyuda == null) {
			mnAyuda = new JMenu("Ayuda");
			mnAyuda.setMnemonic('A');
			mnAyuda.add(getMntmAyuda());
		}
		return mnAyuda;
	}
	private JMenuItem getMntmAyuda() {
		if (mntmAyuda == null) {
			mntmAyuda = new JMenuItem("Abrir men\u00FA de ayuda");
			mntmAyuda.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F1, InputEvent.CTRL_DOWN_MASK));
		}
		return mntmAyuda;
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2024-12-25 21:00:49.818
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2024-12-25 21:00:49.818
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2024-12-25 21:00:50.763
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package uo.cpm.modulo.ui;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import java.awt.CardLayout;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.BorderLayout;
import javax.swing.JLabel;
import javax.swing.JButton;
import javax.swing.BoxLayout;
import java.awt.GridLayout;
import java.awt.Image;

import javax.swing.ImageIcon;
import java.awt.Color;
import java.awt.Font;
import javax.swing.border.LineBorder;
import javax.swing.SwingConstants;
import java.awt.FlowLayout;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.Component;
import javax.swing.JTextField;
import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.InputEvent;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JPasswordField;
import javax.swing.JSplitPane;
import javax.swing.JRadioButton;
import javax.swing.ButtonGroup;
import javax.swing.JSeparator;

public class VentanaPrincipal extends JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private JPanel contentPane;
	private JPanel panelInicio;
	private JPanel panelBienvenida;
	private JPanel panelIdiomas;
	private JButton btnSpanish;
	private JLabel lblIngredients;
	private JButton btnEnglish;
	private JButton btnFrench;
	private JButton btnItalian;
	private JPanel panelSaludo;
	private JLabel lblWelcome;
	private JButton btnSiguiente_Datos;
	private JLabel lblIngredients2;
	private JLabel lblIngredients2_1;
	private ProcessFrame pf = new  ProcessFrame();
	private JPanel panelRegistro;
	private JPanel panelDatos;
	private JTextField textFieldDNI;
	private JLabel lblDNI;
	private JLabel lblReserva;
	private JPanel panelBtn;
	private JLabel lblPlaceHolder;
	private JButton btnSiguiente_Menu;
	private JLabel lblPlaceHolder_1;
	private JPanel panelSpacing;
	private JLabel lblPlaceHolder_1_1;
	private JPanel panelMenu;
	private JPanel panelFiltros;
	private JButton btnTodos;
	private JButton btnPizzas;
	private JButton btnEntrantes;
	private JButton btnEnsaladas;
	private JButton btnPostres;
	private JButton btnBebidas;
	private JScrollPane scrollPaneProductos;
	private JPanel panelProductos;
	private JPanel panelFinalizarMenu;
	private JLabel lblPlaceHolderMenu;
	private JButton btnFinalizar;
	private JLabel lblPlaceHolderMenu_2;
	private JLabel lblPlaceHolderMenu_1;
	private JLabel lblPlaceHolderMenu_3;
	private JPanel panelCarrito;
	private JButton btnCarrito;
	private JScrollPane scrollPaneCarrito;
	private JTextArea txtAreaCarrito;
	private ProcessCart pCrt = new ProcessCart();
	private JPasswordField passwordFieldReserva;
	private JPanel panelPago;
	private JScrollPane scrollPaneListaPedidos;
	private JPanel panelOpcionesFinales;
	private JTextArea textAreaPedidos;
	private JPanel panelMetodoPago;
	private JPanel panelEleccionJugar;
	private JLabel lblOpcionesJugar;
	private JRadioButton rdbtnJugar;
	private JRadioButton rdbtnNoJugar;
	private final ButtonGroup buttonGroupJugar = new ButtonGroup();
	private JLabel lblOpcionesPago;
	private JRadioButton rdbtnTarjeta;
	private JRadioButton rdbtnEfectivo;
	private JPanel panelBtnFinales;
	private JButton btnCancelar;
	private JButton btnFinalizaryPagar;
	private final ButtonGroup buttonGroupPago = new ButtonGroup();
	private JMenuBar menuBar;
	private JMenu mnOptions;
	private JMenuItem mntmSalida;
	private JMenuItem mntmNuevaSesion;
	private JSeparator separator;
	private JMenu mnAyuda;
	private JMenuItem mntmAyuda;
	private ProcessExit pE = new ProcessExit();
	private ProcessWindowHelpFocus pw = new 
	class ProcessWindowHelpFocus extends WindowAdapter{
		@Override
		public void windowOpened(WindowEvent e) {
			getBtnSiguiente_Datos().requestFocus();
		}
	}
	class ProcessExit implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			confirmChoice();
			
		}

		
		
	}
	protected void confirmChoice() {
		if(JOptionPane.showConfirmDialog(null, "¬øEst√°s seguro/a de que quieres salir de la aplicaci√≥n?")==JOptionPane.YES_OPTION) {
			System.exit(0);
		}
	}
	class ProcessFrame implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			changeFrame(e);
			
		}

		
		
	}
	protected void changeFrame(ActionEvent e) {
		String frame = e.getActionCommand();
		((CardLayout)getContentPane().getLayout()).show(getContentPane(), frame);
	}
	class ProcessCart implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			showShoppingCart();
			
		}

		
		
	}
	protected void showShoppingCart() {
		if(getTxtAreaCarrito().isVisible()) {
			getTxtAreaCarrito().setVisible(false);
		}else {
			getTxtAreaCarrito().setVisible(true);
		}
	}

	/**
	 * Create the frame.
	 */
	public VentanaPrincipal() {
		addWindowListener(p);
		setTitle("Uniovi's ");
		setIconImage(Toolkit.getDefaultToolkit().getImage(VentanaPrincipal.class.getResource("/img/logo.png")));
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 870, 530);
		setJMenuBar(getMenuBar_4());
		contentPane = new JPanel();
		contentPane.setBackground(new Color(255, 0, 0));
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(new CardLayout(0, 0));
		contentPane.add(getPanelInicio(), "pnInicio");
		contentPane.add(getPanelRegistro(), "pnRegistro");
		contentPane.add(getPanelMenu(), "pnMenu");
		contentPane.add(getPanelPago(), "pnPagar");
	}

	private JPanel getPanelInicio() {
		if (panelInicio == null) {
			panelInicio = new JPanel();
			panelInicio.setBackground(new Color(255, 0, 0));
			panelInicio.setLayout(new BorderLayout(0, 0));
			panelInicio.add(getPanelBienvenida(), BorderLayout.CENTER);
			panelInicio.add(getPanelIdiomas(), BorderLayout.NORTH);
			panelInicio.add(getPanelSaludo(), BorderLayout.SOUTH);
		}
		return panelInicio;
	}
	private JPanel getPanelBienvenida() {
		if (panelBienvenida == null) {
			panelBienvenida = new JPanel();
			panelBienvenida.setBackground(new Color(0, 0, 139));
			panelBienvenida.setLayout(new BorderLayout(0, 0));
			panelBienvenida.add(getLblIngredients(), BorderLayout.CENTER);
			panelBienvenida.add(getLblIngredients2(), BorderLayout.WEST);
			panelBienvenida.add(getLblIngredients2_1(), BorderLayout.EAST);
		}
		return panelBienvenida;
	}
	private JPanel getPanelIdiomas() {
		if (panelIdiomas == null) {
			panelIdiomas = new JPanel();
			panelIdiomas.setBackground(new Color(255, 0, 0));
			panelIdiomas.setLayout(new GridLayout(0, 4, 0, 0));
			panelIdiomas.add(getBtnSpanish());
			panelIdiomas.add(getBtnEnglish());
			panelIdiomas.add(getBtnFrench());
			panelIdiomas.add(getBtnItalian());
		}
		return panelIdiomas;
	}
	private JButton getBtnSpanish() {
		if (btnSpanish == null) {
			btnSpanish = new JButton("");
			btnSpanish.setBackground(new Color(255, 255, 255));
			btnSpanish.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/es.png")));
		}
		return btnSpanish;
	}
	private JLabel getLblIngredients() {
		if (lblIngredients == null) {
			lblIngredients = new JLabel("");
			lblIngredients.setHorizontalAlignment(SwingConstants.CENTER);
			lblIngredients.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/bienvenida.png")));
		}
		return lblIngredients;
	}
	private JButton getBtnEnglish() {
		if (btnEnglish == null) {
			btnEnglish = new JButton("");
			btnEnglish.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/en.png")));
			btnEnglish.setBackground(Color.WHITE);
		}
		return btnEnglish;
	}
	private JButton getBtnFrench() {
		if (btnFrench == null) {
			btnFrench = new JButton("");
			btnFrench.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/fr.png")));
			btnFrench.setBackground(Color.WHITE);
		}
		return btnFrench;
	}
	private JButton getBtnItalian() {
		if (btnItalian == null) {
			btnItalian = new JButton("");
			btnItalian.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/it.png")));
			btnItalian.setBackground(Color.WHITE);
		}
		return btnItalian;
	}
	private JPanel getPanelSaludo() {
		if (panelSaludo == null) {
			panelSaludo = new JPanel();
			panelSaludo.setBackground(new Color(255, 0, 0));
			panelSaludo.setLayout(new GridLayout(0, 2, 0, 0));
			panelSaludo.add(getLblWelcome_1());
			panelSaludo.add(getBtnSiguiente_Datos());
		}
		return panelSaludo;
	}
	private JLabel getLblWelcome_1() {
		if (lblWelcome == null) {
			lblWelcome = new JLabel("\u00A1Bienvenido a Uniovi's!");
			lblWelcome.setHorizontalAlignment(SwingConstants.CENTER);
			lblWelcome.setForeground(Color.WHITE);
			lblWelcome.setFont(new Font("Dialog", Font.BOLD, 28));
			lblWelcome.setBorder(new LineBorder(new Color(0, 0, 0), 0));
			lblWelcome.setBackground(Color.WHITE);
		}
		return lblWelcome;
	}
	private JButton getBtnSiguiente_Datos() {
		if (btnSiguiente_Datos == null) {
			btnSiguiente_Datos = new JButton("Continuar");
			btnSiguiente_Datos.setAlignmentX(Component.RIGHT_ALIGNMENT);
			btnSiguiente_Datos.setBackground(new Color(50, 205, 50));
			btnSiguiente_Datos.setForeground(new Color(255, 255, 255));
			btnSiguiente_Datos.setFont(new Font("SansSerif", Font.PLAIN, 24));
			btnSiguiente_Datos.setMnemonic('C');
			btnSiguiente_Datos.setBorder(new LineBorder(new Color(0, 0, 0), 4, true));
			btnSiguiente_Datos.setActionCommand("pnRegistro");
			btnSiguiente_Datos.addActionListener(pf);
		}
		return btnSiguiente_Datos;
	}
	private JLabel getLblIngredients2() {
		if (lblIngredients2 == null) {
			lblIngredients2 = new JLabel("");
			lblIngredients2.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/PI03.png")));
		}
		return lblIngredients2;
	}
	private JLabel getLblIngredients2_1() {
		if (lblIngredients2_1 == null) {
			lblIngredients2_1 = new JLabel("");
			lblIngredients2_1.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/BE02.png")));
		}
		return lblIngredients2_1;
	}
	private JPanel getPanelRegistro() {
		if (panelRegistro == null) {
			panelRegistro = new JPanel();
			panelRegistro.setLayout(new BorderLayout(0, 0));
			panelRegistro.add(getPanelDatos(), BorderLayout.CENTER);
			panelRegistro.add(getPanelBtn(), BorderLayout.SOUTH);
			panelRegistro.add(getPanelSpacing(), BorderLayout.EAST);
		}
		return panelRegistro;
	}
	private JPanel getPanelDatos() {
		if (panelDatos == null) {
			panelDatos = new JPanel();
			panelDatos.setBackground(new Color(0, 0, 128));
			panelDatos.setLayout(new GridLayout(6, 1, 0, 0));
			panelDatos.add(getLblDNI());
			panelDatos.add(getTextFieldDNI());
			panelDatos.add(getLblReserva());
			panelDatos.add(getPasswordFieldReserva());
		}
		return panelDatos;
	}
	private JTextField getTextFieldDNI() {
		if (textFieldDNI == null) {
			textFieldDNI = new JTextField();
			textFieldDNI.setFont(new Font("SansSerif", Font.PLAIN, 28));
			textFieldDNI.setColumns(10);
		}
		return textFieldDNI;
	}
	private JLabel getLblDNI() {
		if (lblDNI == null) {
			lblDNI = new JLabel("DNI / NIE:");
			lblDNI.setLabelFor(getTextFieldDNI());
			lblDNI.setDisplayedMnemonic('D');
			lblDNI.setForeground(new Color(255, 255, 255));
			lblDNI.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return lblDNI;
	}
	private JLabel getLblReserva() {
		if (lblReserva == null) {
			lblReserva = new JLabel("N\u00BA / C\u00F3digo de reserva");
			lblReserva.setLabelFor(getPasswordFieldReserva());
			lblReserva.setDisplayedMnemonic('N');
			lblReserva.setForeground(new Color(255, 255, 255));
			lblReserva.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return lblReserva;
	}
	private JPanel getPanelBtn() {
		if (panelBtn == null) {
			panelBtn = new JPanel();
			panelBtn.setBackground(new Color(0, 0, 128));
			panelBtn.setLayout(new GridLayout(1, 0, 0, 0));
			panelBtn.add(getLblPlaceHolder_1());
			panelBtn.add(getLblPlaceHolder());
			panelBtn.add(getBtnSiguiente_Menu());
		}
		return panelBtn;
	}
	private JLabel getLblPlaceHolder() {
		if (lblPlaceHolder == null) {
			lblPlaceHolder = new JLabel("");
			lblPlaceHolder.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder;
	}
	private JButton getBtnSiguiente_Menu() {
		if (btnSiguiente_Menu == null) {
			btnSiguiente_Menu = new JButton("Continuar");
			btnSiguiente_Menu.setForeground(new Color(255, 255, 255));
			btnSiguiente_Menu.setBackground(new Color(50, 205, 50));
			btnSiguiente_Menu.setFont(new Font("SansSerif", Font.PLAIN, 28));
			btnSiguiente_Menu.setMnemonic('C');
			btnSiguiente_Menu.setActionCommand("pnMenu");
			btnSiguiente_Menu.addActionListener(pf);
		}
		return btnSiguiente_Menu;
	}
	private JLabel getLblPlaceHolder_1() {
		if (lblPlaceHolder_1 == null) {
			lblPlaceHolder_1 = new JLabel("");
			lblPlaceHolder_1.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder_1;
	}
	private JPanel getPanelSpacing() {
		if (panelSpacing == null) {
			panelSpacing = new JPanel();
			panelSpacing.setBackground(new Color(0, 0, 128));
			panelSpacing.add(getLblPlaceHolder_1_1());
		}
		return panelSpacing;
	}
	private JLabel getLblPlaceHolder_1_1() {
		if (lblPlaceHolder_1_1 == null) {
			lblPlaceHolder_1_1 = new JLabel("                                                                                                            ");
			lblPlaceHolder_1_1.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder_1_1;
	}
	private JPanel getPanelMenu() {
		if (panelMenu == null) {
			panelMenu = new JPanel();
			panelMenu.setLayout(new BorderLayout(0, 0));
			panelMenu.add(getPanelFiltros(), BorderLayout.WEST);
			panelMenu.add(getScrollPaneProductos(), BorderLayout.CENTER);
			panelMenu.add(getPanelFinalizarMenu(), BorderLayout.SOUTH);
			panelMenu.add(getPanelCarrito(), BorderLayout.EAST);
		}
		return panelMenu;
	}
	private JPanel getPanelFiltros() {
		if (panelFiltros == null) {
			panelFiltros = new JPanel();
			panelFiltros.setLayout(new GridLayout(6, 0, 0, 0));
			panelFiltros.add(getBtnTodos());
			panelFiltros.add(getBtnPizzas());
			panelFiltros.add(getBtnEntrantes());
			panelFiltros.add(getBtnEnsaladas());
			panelFiltros.add(getBtnPostres());
			panelFiltros.add(getBtnBebidas());
		}
		return panelFiltros;
	}
	private JButton getBtnTodos() {
		if (btnTodos == null) {
			btnTodos = new JButton("");
			btnTodos.setBackground(new Color(255, 255, 255));
			btnTodos.setToolTipText("Filtrar - Todos");
			setImagenAdaptada(btnTodos, "/img/bienvenida.png");
		}
		return btnTodos;
	}
	private JButton getBtnPizzas() {
		if (btnPizzas == null) {
			btnPizzas = new JButton("");
			btnPizzas.setBackground(new Color(255, 255, 255));
			btnPizzas.setToolTipText("Filtrar - Pizzas");
			setImagenAdaptada(btnPizzas,"/img/PI01.png");
		}
		return btnPizzas;
	}
	private JButton getBtnEntrantes() {
		if (btnEntrantes == null) {
			btnEntrantes = new JButton("");
			btnEntrantes.setBackground(new Color(255, 255, 255));
			btnEntrantes.setToolTipText("Filtrar - Entrantes");
			setImagenAdaptada(btnEntrantes, "/img/ET02.png");
		}
		return btnEntrantes;
	}
	private JButton getBtnEnsaladas() {
		if (btnEnsaladas == null) {
			btnEnsaladas = new JButton("");
			btnEnsaladas.setBackground(new Color(255, 255, 255));
			btnEnsaladas.setToolTipText("Filtrar - Ensaladas");
			setImagenAdaptada(btnEnsaladas, "/img/EN02.png");
		}
		return btnEnsaladas;
	}
	private JButton getBtnPostres() {
		if (btnPostres == null) {
			btnPostres = new JButton("");
			btnPostres.setBackground(new Color(255, 255, 255));
			btnPostres.setToolTipText("Filtrar - Postres");
			setImagenAdaptada(btnPostres, "/img/PO01.png");
		}
		return btnPostres;
	}
	private JButton getBtnBebidas() {
		if (btnBebidas == null) {
			btnBebidas = new JButton("");
			btnBebidas.setBackground(new Color(255, 255, 255));
			btnBebidas.setToolTipText("Filtrar - Bebidas");
			setImagenAdaptada(btnBebidas, "/img/BE03.png");
		}
		return btnBebidas;
	}
	private void setImagenAdaptada(JButton boton, String rutaImagen){
		 Image imgOriginal = new ImageIcon(getClass().getResource(rutaImagen)).getImage(); 
		 Image imgEscalada = imgOriginal.getScaledInstance((int) (100), (int) (100),Image.SCALE_SMOOTH);
		 //si se quiere reescalar la ventana, este 100 tendria que cambiarse por el width y el height  respectivamente de la imagen para que as√≠ se reescale cada vez que cambias el tama√±o
		 //adem√°s este m√©todo deber√≠a llamarse en el constructor de la ventana mientras se usa un evento componentResized
		 boton.setIcon(new ImageIcon(imgEscalada));
	}
	private JScrollPane getScrollPaneProductos() {
		if (scrollPaneProductos == null) {
			scrollPaneProductos = new JScrollPane();
			scrollPaneProductos.setViewportView(getPanelProductos());
		}
		return scrollPaneProductos;
	}
	private JPanel getPanelProductos() {
		if (panelProductos == null) {
			panelProductos = new JPanel();
			panelProductos.setBackground(new Color(0, 0, 128));
			panelProductos.setLayout(new GridLayout(0, 5, 40, 40));
			generarBotones();
		}
		return panelProductos;
	}

	protected void generarBotones() {
		for(int i=0; i<60; i++) {
			JButton j = new JButton("");
			j.setText("jihdihdiqgduqgudgquy");
			j.setVerticalTextPosition(SwingConstants.BOTTOM); 
			j.setHorizontalTextPosition(SwingConstants.CENTER);
			setImagenAdaptada(j, "/img/logo.png");
			panelProductos.add(j);
		}
	}
	private JPanel getPanelFinalizarMenu() {
		if (panelFinalizarMenu == null) {
			panelFinalizarMenu = new JPanel();
			panelFinalizarMenu.setBackground(new Color(128, 0, 0));
			panelFinalizarMenu.setLayout(new GridLayout(0, 5, 0, 0));
			panelFinalizarMenu.add(getLblPlaceHolderMenu());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_3());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_1());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_2());
			panelFinalizarMenu.add(getBtnFinalizar());
		}
		return panelFinalizarMenu;
	}
	private JLabel getLblPlaceHolderMenu() {
		if (lblPlaceHolderMenu == null) {
			lblPlaceHolderMenu = new JLabel("");
		}
		return lblPlaceHolderMenu;
	}
	private JButton getBtnFinalizar() {
		if (btnFinalizar == null) {
			btnFinalizar = new JButton("Finalizar");
			btnFinalizar.setMnemonic('F');
			btnFinalizar.setForeground(new Color(255, 255, 255));
			btnFinalizar.setBackground(new Color(50, 205, 50));
			btnFinalizar.setFont(new Font("SansSerif", Font.PLAIN, 28));
			btnFinalizar.setActionCommand("pnPagar");
			btnFinalizar.addActionListener(pf);
		}
		return btnFinalizar;
	}
	private JLabel getLblPlaceHolderMenu_2() {
		if (lblPlaceHolderMenu_2 == null) {
			lblPlaceHolderMenu_2 = new JLabel("");
		}
		return lblPlaceHolderMenu_2;
	}
	private JLabel getLblPlaceHolderMenu_1() {
		if (lblPlaceHolderMenu_1 == null) {
			lblPlaceHolderMenu_1 = new JLabel("");
		}
		return lblPlaceHolderMenu_1;
	}
	private JLabel getLblPlaceHolderMenu_3() {
		if (lblPlaceHolderMenu_3 == null) {
			lblPlaceHolderMenu_3 = new JLabel("");
		}
		return lblPlaceHolderMenu_3;
	}
	private JPanel getPanelCarrito() {
		if (panelCarrito == null) {
			panelCarrito = new JPanel();
			panelCarrito.setBackground(new Color(128, 0, 0));
			panelCarrito.setLayout(new BorderLayout(0, 0));
			panelCarrito.add(getBtnCarrito(), BorderLayout.NORTH);
			panelCarrito.add(getScrollPaneCarrito());
		}
		return panelCarrito;
	}
	private JButton getBtnCarrito() {
		if (btnCarrito == null) {
			btnCarrito = new JButton("");
			btnCarrito.setToolTipText("Mostrar/Ocultar Carrito");
			btnCarrito.setBackground(new Color(255, 255, 255));
			setImagenAdaptada(btnCarrito,"/img/carrito.png");
			btnCarrito.addActionListener(pCrt);
		}
		return btnCarrito;
	}
	private JScrollPane getScrollPaneCarrito() {
		if (scrollPaneCarrito == null) {
			scrollPaneCarrito = new JScrollPane();
			scrollPaneCarrito.setEnabled(false);
			scrollPaneCarrito.setViewportView(getTxtAreaCarrito());
		}
		return scrollPaneCarrito;
	}
	private JTextArea getTxtAreaCarrito() {
		if (txtAreaCarrito == null) {
			txtAreaCarrito = new JTextArea();
			txtAreaCarrito.setBackground(new Color(255, 255, 255));
			txtAreaCarrito.setEditable(false);
			txtAreaCarrito.setVisible(false);
			txtAreaCarrito.setText("jijdijdwjdw\r\ndmqojqowjdoqwjdoqw\r\nfdoqkdoqk");
		}
		return txtAreaCarrito;
	}
	private JPasswordField getPasswordFieldReserva() {
		if (passwordFieldReserva == null) {
			passwordFieldReserva = new JPasswordField();
			passwordFieldReserva.setBackground(new Color(255, 255, 255));
			passwordFieldReserva.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return passwordFieldReserva;
	}
	private JPanel getPanelPago() {
		if (panelPago == null) {
			panelPago = new JPanel();
			panelPago.setLayout(new GridLayout(0, 2, 0, 0));
			panelPago.add(getScrollPaneListaPedidos());
			panelPago.add(getPanelOpcionesFinales());
		}
		return panelPago;
	}
	private JScrollPane getScrollPaneListaPedidos() {
		if (scrollPaneListaPedidos == null) {
			scrollPaneListaPedidos = new JScrollPane();
			scrollPaneListaPedidos.setViewportView(getTextAreaPedidos());
		}
		return scrollPaneListaPedidos;
	}
	private JPanel getPanelOpcionesFinales() {
		if (panelOpcionesFinales == null) {
			panelOpcionesFinales = new JPanel();
			panelOpcionesFinales.setBackground(new Color(0, 0, 128));
			panelOpcionesFinales.setLayout(new BorderLayout(0, 0));
			panelOpcionesFinales.add(getPanelMetodoPago(), BorderLayout.CENTER);
			panelOpcionesFinales.add(getPanelEleccionJugar(), BorderLayout.NORTH);
			panelOpcionesFinales.add(getPanelBtnFinales(), BorderLayout.SOUTH);
		}
		return panelOpcionesFinales;
	}
	private JTextArea getTextAreaPedidos() {
		if (textAreaPedidos == null) {
			textAreaPedidos = new JTextArea();
			textAreaPedidos.setText("ojdowjdowjdowdowjdo\r\ndojdodjwojdowjdm\r\ndmwdjowjdo");
			textAreaPedidos.setFont(new Font("SansSerif", Font.PLAIN, 21));
		}
		return textAreaPedidos;
	}
	private JPanel getPanelMetodoPago() {
		if (panelMetodoPago == null) {
			panelMetodoPago = new JPanel();
			panelMetodoPago.setBackground(new Color(0, 0, 128));
			panelMetodoPago.setLayout(new GridLayout(4, 1, 0, 0));
			panelMetodoPago.add(getLblOpcionesPago());
			panelMetodoPago.add(getRdbtnTarjeta());
			panelMetodoPago.add(getRdbtnEfectivo());
		}
		return panelMetodoPago;
	}
	private JPanel getPanelEleccionJugar() {
		if (panelEleccionJugar == null) {
			panelEleccionJugar = new JPanel();
			panelEleccionJugar.setBackground(new Color(0, 0, 128));
			panelEleccionJugar.setLayout(new GridLayout(3, 1, 0, 0));
			panelEleccionJugar.add(getLblOpcionesJugar());
			panelEleccionJugar.add(getRdbtnJugar());
			panelEleccionJugar.add(getRdbtnNoJugar());
		}
		return panelEleccionJugar;
	}
	private JLabel getLblOpcionesJugar() {
		if (lblOpcionesJugar == null) {
			lblOpcionesJugar = new JLabel("\u00BFQuiere jugar para descuentos?");
			lblOpcionesJugar.setForeground(new Color(255, 255, 255));
			lblOpcionesJugar.setFont(new Font("SansSerif", Font.BOLD, 27));
		}
		return lblOpcionesJugar;
	}
	private JRadioButton getRdbtnJugar() {
		if (rdbtnJugar == null) {
			rdbtnJugar = new JRadioButton("Jugar");
			rdbtnJugar.setBackground(new Color(0, 0, 128));
			rdbtnJugar.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnJugar.setSelected(true);
			rdbtnJugar.setMnemonic('J');
			buttonGroupJugar.add(rdbtnJugar);
			rdbtnJugar.setForeground(new Color(255, 255, 255));
		}
		return rdbtnJugar;
	}
	private JRadioButton getRdbtnNoJugar() {
		if (rdbtnNoJugar == null) {
			rdbtnNoJugar = new JRadioButton("No jugar");
			rdbtnNoJugar.setBackground(new Color(0, 0, 128));
			rdbtnNoJugar.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnNoJugar.setMnemonic('N');
			buttonGroupJugar.add(rdbtnNoJugar);
			rdbtnNoJugar.setForeground(new Color(255, 255, 255));
		}
		return rdbtnNoJugar;
	}
	private JLabel getLblOpcionesPago() {
		if (lblOpcionesPago == null) {
			lblOpcionesPago = new JLabel("\u00BFC\u00F3mo desea pagar?");
			lblOpcionesPago.setHorizontalAlignment(SwingConstants.LEFT);
			lblOpcionesPago.setFont(new Font("SansSerif", Font.BOLD, 27));
			lblOpcionesPago.setForeground(new Color(255, 255, 255));
		}
		return lblOpcionesPago;
	}
	private JRadioButton getRdbtnTarjeta() {
		if (rdbtnTarjeta == null) {
			rdbtnTarjeta = new JRadioButton("Tarjeta");
			rdbtnTarjeta.setBackground(new Color(0, 0, 128));
			rdbtnTarjeta.setMnemonic('T');
			rdbtnTarjeta.setSelected(true);
			buttonGroupPago.add(rdbtnTarjeta);
			rdbtnTarjeta.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnTarjeta.setForeground(new Color(255, 255, 255));
			rdbtnTarjeta.setHorizontalAlignment(SwingConstants.LEFT);
		}
		return rdbtnTarjeta;
	}
	private JRadioButton getRdbtnEfectivo() {
		if (rdbtnEfectivo == null) {
			rdbtnEfectivo = new JRadioButton("Efectivo");
			rdbtnEfectivo.setBackground(new Color(0, 0, 128));
			rdbtnEfectivo.setMnemonic('E');
			buttonGroupPago.add(rdbtnEfectivo);
			rdbtnEfectivo.setForeground(new Color(255, 255, 255));
			rdbtnEfectivo.setFont(new Font("SansSerif", Font.PLAIN, 19));
		}
		return rdbtnEfectivo;
	}
	private JPanel getPanelBtnFinales() {
		if (panelBtnFinales == null) {
			panelBtnFinales = new JPanel();
			panelBtnFinales.setLayout(new GridLayout(0, 2, 0, 0));
			panelBtnFinales.add(getBtnCancelar());
			panelBtnFinales.add(getBtnFinalizaryPagar());
		}
		return panelBtnFinales;
	}
	private JButton getBtnCancelar() {
		if (btnCancelar == null) {
			btnCancelar = new JButton("Cancelar");
			btnCancelar.setForeground(new Color(255, 255, 255));
			btnCancelar.setBackground(new Color(255, 0, 0));
			btnCancelar.setFont(new Font("SansSerif", Font.PLAIN, 27));
			btnCancelar.setMnemonic('C');
			btnCancelar.setActionCommand("pnMenu");
			btnCancelar.addActionListener(pf);
		}
		return btnCancelar;
	}
	private JButton getBtnFinalizaryPagar() {
		if (btnFinalizaryPagar == null) {
			btnFinalizaryPagar = new JButton("Finalizar y pagar");
			btnFinalizaryPagar.setMnemonic('F');
			btnFinalizaryPagar.setBackground(new Color(50, 205, 50));
			btnFinalizaryPagar.setForeground(new Color(255, 255, 255));
			btnFinalizaryPagar.setFont(new Font("SansSerif", Font.PLAIN, 23));
		}
		return btnFinalizaryPagar;
	}
	private JMenuBar getMenuBar_4() {
		if (menuBar == null) {
			menuBar = new JMenuBar();
			menuBar.add(getMenu_1());
			menuBar.add(getMenu_2());
		}
		return menuBar;
	}
	private JMenu getMenu_1() {
		if (mnOptions == null) {
			mnOptions = new JMenu("Opciones");
			mnOptions.setMnemonic('O');
			mnOptions.add(getMntmNuevaSesion());
			mnOptions.add(getSeparator());
			mnOptions.add(getMntmSalida());
		}
		return mnOptions;
	}
	private JMenuItem getMntmSalida() {
		if (mntmSalida == null) {
			mntmSalida = new JMenuItem("Salida");
			mntmSalida.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_X, InputEvent.CTRL_DOWN_MASK));
			mntmSalida.addActionListener(pE);
		}
		return mntmSalida;
	}
	private JMenuItem getMntmNuevaSesion() {
		if (mntmNuevaSesion == null) {
			mntmNuevaSesion = new JMenuItem("Nueva Sesion");
			mntmNuevaSesion.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, InputEvent.CTRL_DOWN_MASK));
		}
		return mntmNuevaSesion;
	}
	private JSeparator getSeparator() {
		if (separator == null) {
			separator = new JSeparator();
		}
		return separator;
	}
	private JMenu getMenu_2() {
		if (mnAyuda == null) {
			mnAyuda = new JMenu("Ayuda");
			mnAyuda.setMnemonic('A');
			mnAyuda.add(getMntmAyuda());
		}
		return mnAyuda;
	}
	private JMenuItem getMntmAyuda() {
		if (mntmAyuda == null) {
			mntmAyuda = new JMenuItem("Abrir men\u00FA de ayuda");
			mntmAyuda.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F1, InputEvent.CTRL_DOWN_MASK));
		}
		return mntmAyuda;
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2024-12-25 21:00:50.763
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2024-12-25 21:00:50.764
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2024-12-25 21:00:52.636
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package uo.cpm.modulo.ui;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import java.awt.CardLayout;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.BorderLayout;
import javax.swing.JLabel;
import javax.swing.JButton;
import javax.swing.BoxLayout;
import java.awt.GridLayout;
import java.awt.Image;

import javax.swing.ImageIcon;
import java.awt.Color;
import java.awt.Font;
import javax.swing.border.LineBorder;
import javax.swing.SwingConstants;
import java.awt.FlowLayout;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.Component;
import javax.swing.JTextField;
import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.InputEvent;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JPasswordField;
import javax.swing.JSplitPane;
import javax.swing.JRadioButton;
import javax.swing.ButtonGroup;
import javax.swing.JSeparator;

public class VentanaPrincipal extends JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private JPanel contentPane;
	private JPanel panelInicio;
	private JPanel panelBienvenida;
	private JPanel panelIdiomas;
	private JButton btnSpanish;
	private JLabel lblIngredients;
	private JButton btnEnglish;
	private JButton btnFrench;
	private JButton btnItalian;
	private JPanel panelSaludo;
	private JLabel lblWelcome;
	private JButton btnSiguiente_Datos;
	private JLabel lblIngredients2;
	private JLabel lblIngredients2_1;
	private ProcessFrame pf = new  ProcessFrame();
	private JPanel panelRegistro;
	private JPanel panelDatos;
	private JTextField textFieldDNI;
	private JLabel lblDNI;
	private JLabel lblReserva;
	private JPanel panelBtn;
	private JLabel lblPlaceHolder;
	private JButton btnSiguiente_Menu;
	private JLabel lblPlaceHolder_1;
	private JPanel panelSpacing;
	private JLabel lblPlaceHolder_1_1;
	private JPanel panelMenu;
	private JPanel panelFiltros;
	private JButton btnTodos;
	private JButton btnPizzas;
	private JButton btnEntrantes;
	private JButton btnEnsaladas;
	private JButton btnPostres;
	private JButton btnBebidas;
	private JScrollPane scrollPaneProductos;
	private JPanel panelProductos;
	private JPanel panelFinalizarMenu;
	private JLabel lblPlaceHolderMenu;
	private JButton btnFinalizar;
	private JLabel lblPlaceHolderMenu_2;
	private JLabel lblPlaceHolderMenu_1;
	private JLabel lblPlaceHolderMenu_3;
	private JPanel panelCarrito;
	private JButton btnCarrito;
	private JScrollPane scrollPaneCarrito;
	private JTextArea txtAreaCarrito;
	private ProcessCart pCrt = new ProcessCart();
	private JPasswordField passwordFieldReserva;
	private JPanel panelPago;
	private JScrollPane scrollPaneListaPedidos;
	private JPanel panelOpcionesFinales;
	private JTextArea textAreaPedidos;
	private JPanel panelMetodoPago;
	private JPanel panelEleccionJugar;
	private JLabel lblOpcionesJugar;
	private JRadioButton rdbtnJugar;
	private JRadioButton rdbtnNoJugar;
	private final ButtonGroup buttonGroupJugar = new ButtonGroup();
	private JLabel lblOpcionesPago;
	private JRadioButton rdbtnTarjeta;
	private JRadioButton rdbtnEfectivo;
	private JPanel panelBtnFinales;
	private JButton btnCancelar;
	private JButton btnFinalizaryPagar;
	private final ButtonGroup buttonGroupPago = new ButtonGroup();
	private JMenuBar menuBar;
	private JMenu mnOptions;
	private JMenuItem mntmSalida;
	private JMenuItem mntmNuevaSesion;
	private JSeparator separator;
	private JMenu mnAyuda;
	private JMenuItem mntmAyuda;
	private ProcessExit pE = new ProcessExit();
	private ProcessWindowHelpFocus pWH = new 
	class ProcessWindowHelpFocus extends WindowAdapter{
		@Override
		public void windowOpened(WindowEvent e) {
			getBtnSiguiente_Datos().requestFocus();
		}
	}
	class ProcessExit implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			confirmChoice();
			
		}

		
		
	}
	protected void confirmChoice() {
		if(JOptionPane.showConfirmDialog(null, "¬øEst√°s seguro/a de que quieres salir de la aplicaci√≥n?")==JOptionPane.YES_OPTION) {
			System.exit(0);
		}
	}
	class ProcessFrame implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			changeFrame(e);
			
		}

		
		
	}
	protected void changeFrame(ActionEvent e) {
		String frame = e.getActionCommand();
		((CardLayout)getContentPane().getLayout()).show(getContentPane(), frame);
	}
	class ProcessCart implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			showShoppingCart();
			
		}

		
		
	}
	protected void showShoppingCart() {
		if(getTxtAreaCarrito().isVisible()) {
			getTxtAreaCarrito().setVisible(false);
		}else {
			getTxtAreaCarrito().setVisible(true);
		}
	}

	/**
	 * Create the frame.
	 */
	public VentanaPrincipal() {
		addWindowListener(p);
		setTitle("Uniovi's ");
		setIconImage(Toolkit.getDefaultToolkit().getImage(VentanaPrincipal.class.getResource("/img/logo.png")));
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 870, 530);
		setJMenuBar(getMenuBar_4());
		contentPane = new JPanel();
		contentPane.setBackground(new Color(255, 0, 0));
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(new CardLayout(0, 0));
		contentPane.add(getPanelInicio(), "pnInicio");
		contentPane.add(getPanelRegistro(), "pnRegistro");
		contentPane.add(getPanelMenu(), "pnMenu");
		contentPane.add(getPanelPago(), "pnPagar");
	}

	private JPanel getPanelInicio() {
		if (panelInicio == null) {
			panelInicio = new JPanel();
			panelInicio.setBackground(new Color(255, 0, 0));
			panelInicio.setLayout(new BorderLayout(0, 0));
			panelInicio.add(getPanelBienvenida(), BorderLayout.CENTER);
			panelInicio.add(getPanelIdiomas(), BorderLayout.NORTH);
			panelInicio.add(getPanelSaludo(), BorderLayout.SOUTH);
		}
		return panelInicio;
	}
	private JPanel getPanelBienvenida() {
		if (panelBienvenida == null) {
			panelBienvenida = new JPanel();
			panelBienvenida.setBackground(new Color(0, 0, 139));
			panelBienvenida.setLayout(new BorderLayout(0, 0));
			panelBienvenida.add(getLblIngredients(), BorderLayout.CENTER);
			panelBienvenida.add(getLblIngredients2(), BorderLayout.WEST);
			panelBienvenida.add(getLblIngredients2_1(), BorderLayout.EAST);
		}
		return panelBienvenida;
	}
	private JPanel getPanelIdiomas() {
		if (panelIdiomas == null) {
			panelIdiomas = new JPanel();
			panelIdiomas.setBackground(new Color(255, 0, 0));
			panelIdiomas.setLayout(new GridLayout(0, 4, 0, 0));
			panelIdiomas.add(getBtnSpanish());
			panelIdiomas.add(getBtnEnglish());
			panelIdiomas.add(getBtnFrench());
			panelIdiomas.add(getBtnItalian());
		}
		return panelIdiomas;
	}
	private JButton getBtnSpanish() {
		if (btnSpanish == null) {
			btnSpanish = new JButton("");
			btnSpanish.setBackground(new Color(255, 255, 255));
			btnSpanish.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/es.png")));
		}
		return btnSpanish;
	}
	private JLabel getLblIngredients() {
		if (lblIngredients == null) {
			lblIngredients = new JLabel("");
			lblIngredients.setHorizontalAlignment(SwingConstants.CENTER);
			lblIngredients.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/bienvenida.png")));
		}
		return lblIngredients;
	}
	private JButton getBtnEnglish() {
		if (btnEnglish == null) {
			btnEnglish = new JButton("");
			btnEnglish.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/en.png")));
			btnEnglish.setBackground(Color.WHITE);
		}
		return btnEnglish;
	}
	private JButton getBtnFrench() {
		if (btnFrench == null) {
			btnFrench = new JButton("");
			btnFrench.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/fr.png")));
			btnFrench.setBackground(Color.WHITE);
		}
		return btnFrench;
	}
	private JButton getBtnItalian() {
		if (btnItalian == null) {
			btnItalian = new JButton("");
			btnItalian.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/it.png")));
			btnItalian.setBackground(Color.WHITE);
		}
		return btnItalian;
	}
	private JPanel getPanelSaludo() {
		if (panelSaludo == null) {
			panelSaludo = new JPanel();
			panelSaludo.setBackground(new Color(255, 0, 0));
			panelSaludo.setLayout(new GridLayout(0, 2, 0, 0));
			panelSaludo.add(getLblWelcome_1());
			panelSaludo.add(getBtnSiguiente_Datos());
		}
		return panelSaludo;
	}
	private JLabel getLblWelcome_1() {
		if (lblWelcome == null) {
			lblWelcome = new JLabel("\u00A1Bienvenido a Uniovi's!");
			lblWelcome.setHorizontalAlignment(SwingConstants.CENTER);
			lblWelcome.setForeground(Color.WHITE);
			lblWelcome.setFont(new Font("Dialog", Font.BOLD, 28));
			lblWelcome.setBorder(new LineBorder(new Color(0, 0, 0), 0));
			lblWelcome.setBackground(Color.WHITE);
		}
		return lblWelcome;
	}
	private JButton getBtnSiguiente_Datos() {
		if (btnSiguiente_Datos == null) {
			btnSiguiente_Datos = new JButton("Continuar");
			btnSiguiente_Datos.setAlignmentX(Component.RIGHT_ALIGNMENT);
			btnSiguiente_Datos.setBackground(new Color(50, 205, 50));
			btnSiguiente_Datos.setForeground(new Color(255, 255, 255));
			btnSiguiente_Datos.setFont(new Font("SansSerif", Font.PLAIN, 24));
			btnSiguiente_Datos.setMnemonic('C');
			btnSiguiente_Datos.setBorder(new LineBorder(new Color(0, 0, 0), 4, true));
			btnSiguiente_Datos.setActionCommand("pnRegistro");
			btnSiguiente_Datos.addActionListener(pf);
		}
		return btnSiguiente_Datos;
	}
	private JLabel getLblIngredients2() {
		if (lblIngredients2 == null) {
			lblIngredients2 = new JLabel("");
			lblIngredients2.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/PI03.png")));
		}
		return lblIngredients2;
	}
	private JLabel getLblIngredients2_1() {
		if (lblIngredients2_1 == null) {
			lblIngredients2_1 = new JLabel("");
			lblIngredients2_1.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/BE02.png")));
		}
		return lblIngredients2_1;
	}
	private JPanel getPanelRegistro() {
		if (panelRegistro == null) {
			panelRegistro = new JPanel();
			panelRegistro.setLayout(new BorderLayout(0, 0));
			panelRegistro.add(getPanelDatos(), BorderLayout.CENTER);
			panelRegistro.add(getPanelBtn(), BorderLayout.SOUTH);
			panelRegistro.add(getPanelSpacing(), BorderLayout.EAST);
		}
		return panelRegistro;
	}
	private JPanel getPanelDatos() {
		if (panelDatos == null) {
			panelDatos = new JPanel();
			panelDatos.setBackground(new Color(0, 0, 128));
			panelDatos.setLayout(new GridLayout(6, 1, 0, 0));
			panelDatos.add(getLblDNI());
			panelDatos.add(getTextFieldDNI());
			panelDatos.add(getLblReserva());
			panelDatos.add(getPasswordFieldReserva());
		}
		return panelDatos;
	}
	private JTextField getTextFieldDNI() {
		if (textFieldDNI == null) {
			textFieldDNI = new JTextField();
			textFieldDNI.setFont(new Font("SansSerif", Font.PLAIN, 28));
			textFieldDNI.setColumns(10);
		}
		return textFieldDNI;
	}
	private JLabel getLblDNI() {
		if (lblDNI == null) {
			lblDNI = new JLabel("DNI / NIE:");
			lblDNI.setLabelFor(getTextFieldDNI());
			lblDNI.setDisplayedMnemonic('D');
			lblDNI.setForeground(new Color(255, 255, 255));
			lblDNI.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return lblDNI;
	}
	private JLabel getLblReserva() {
		if (lblReserva == null) {
			lblReserva = new JLabel("N\u00BA / C\u00F3digo de reserva");
			lblReserva.setLabelFor(getPasswordFieldReserva());
			lblReserva.setDisplayedMnemonic('N');
			lblReserva.setForeground(new Color(255, 255, 255));
			lblReserva.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return lblReserva;
	}
	private JPanel getPanelBtn() {
		if (panelBtn == null) {
			panelBtn = new JPanel();
			panelBtn.setBackground(new Color(0, 0, 128));
			panelBtn.setLayout(new GridLayout(1, 0, 0, 0));
			panelBtn.add(getLblPlaceHolder_1());
			panelBtn.add(getLblPlaceHolder());
			panelBtn.add(getBtnSiguiente_Menu());
		}
		return panelBtn;
	}
	private JLabel getLblPlaceHolder() {
		if (lblPlaceHolder == null) {
			lblPlaceHolder = new JLabel("");
			lblPlaceHolder.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder;
	}
	private JButton getBtnSiguiente_Menu() {
		if (btnSiguiente_Menu == null) {
			btnSiguiente_Menu = new JButton("Continuar");
			btnSiguiente_Menu.setForeground(new Color(255, 255, 255));
			btnSiguiente_Menu.setBackground(new Color(50, 205, 50));
			btnSiguiente_Menu.setFont(new Font("SansSerif", Font.PLAIN, 28));
			btnSiguiente_Menu.setMnemonic('C');
			btnSiguiente_Menu.setActionCommand("pnMenu");
			btnSiguiente_Menu.addActionListener(pf);
		}
		return btnSiguiente_Menu;
	}
	private JLabel getLblPlaceHolder_1() {
		if (lblPlaceHolder_1 == null) {
			lblPlaceHolder_1 = new JLabel("");
			lblPlaceHolder_1.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder_1;
	}
	private JPanel getPanelSpacing() {
		if (panelSpacing == null) {
			panelSpacing = new JPanel();
			panelSpacing.setBackground(new Color(0, 0, 128));
			panelSpacing.add(getLblPlaceHolder_1_1());
		}
		return panelSpacing;
	}
	private JLabel getLblPlaceHolder_1_1() {
		if (lblPlaceHolder_1_1 == null) {
			lblPlaceHolder_1_1 = new JLabel("                                                                                                            ");
			lblPlaceHolder_1_1.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder_1_1;
	}
	private JPanel getPanelMenu() {
		if (panelMenu == null) {
			panelMenu = new JPanel();
			panelMenu.setLayout(new BorderLayout(0, 0));
			panelMenu.add(getPanelFiltros(), BorderLayout.WEST);
			panelMenu.add(getScrollPaneProductos(), BorderLayout.CENTER);
			panelMenu.add(getPanelFinalizarMenu(), BorderLayout.SOUTH);
			panelMenu.add(getPanelCarrito(), BorderLayout.EAST);
		}
		return panelMenu;
	}
	private JPanel getPanelFiltros() {
		if (panelFiltros == null) {
			panelFiltros = new JPanel();
			panelFiltros.setLayout(new GridLayout(6, 0, 0, 0));
			panelFiltros.add(getBtnTodos());
			panelFiltros.add(getBtnPizzas());
			panelFiltros.add(getBtnEntrantes());
			panelFiltros.add(getBtnEnsaladas());
			panelFiltros.add(getBtnPostres());
			panelFiltros.add(getBtnBebidas());
		}
		return panelFiltros;
	}
	private JButton getBtnTodos() {
		if (btnTodos == null) {
			btnTodos = new JButton("");
			btnTodos.setBackground(new Color(255, 255, 255));
			btnTodos.setToolTipText("Filtrar - Todos");
			setImagenAdaptada(btnTodos, "/img/bienvenida.png");
		}
		return btnTodos;
	}
	private JButton getBtnPizzas() {
		if (btnPizzas == null) {
			btnPizzas = new JButton("");
			btnPizzas.setBackground(new Color(255, 255, 255));
			btnPizzas.setToolTipText("Filtrar - Pizzas");
			setImagenAdaptada(btnPizzas,"/img/PI01.png");
		}
		return btnPizzas;
	}
	private JButton getBtnEntrantes() {
		if (btnEntrantes == null) {
			btnEntrantes = new JButton("");
			btnEntrantes.setBackground(new Color(255, 255, 255));
			btnEntrantes.setToolTipText("Filtrar - Entrantes");
			setImagenAdaptada(btnEntrantes, "/img/ET02.png");
		}
		return btnEntrantes;
	}
	private JButton getBtnEnsaladas() {
		if (btnEnsaladas == null) {
			btnEnsaladas = new JButton("");
			btnEnsaladas.setBackground(new Color(255, 255, 255));
			btnEnsaladas.setToolTipText("Filtrar - Ensaladas");
			setImagenAdaptada(btnEnsaladas, "/img/EN02.png");
		}
		return btnEnsaladas;
	}
	private JButton getBtnPostres() {
		if (btnPostres == null) {
			btnPostres = new JButton("");
			btnPostres.setBackground(new Color(255, 255, 255));
			btnPostres.setToolTipText("Filtrar - Postres");
			setImagenAdaptada(btnPostres, "/img/PO01.png");
		}
		return btnPostres;
	}
	private JButton getBtnBebidas() {
		if (btnBebidas == null) {
			btnBebidas = new JButton("");
			btnBebidas.setBackground(new Color(255, 255, 255));
			btnBebidas.setToolTipText("Filtrar - Bebidas");
			setImagenAdaptada(btnBebidas, "/img/BE03.png");
		}
		return btnBebidas;
	}
	private void setImagenAdaptada(JButton boton, String rutaImagen){
		 Image imgOriginal = new ImageIcon(getClass().getResource(rutaImagen)).getImage(); 
		 Image imgEscalada = imgOriginal.getScaledInstance((int) (100), (int) (100),Image.SCALE_SMOOTH);
		 //si se quiere reescalar la ventana, este 100 tendria que cambiarse por el width y el height  respectivamente de la imagen para que as√≠ se reescale cada vez que cambias el tama√±o
		 //adem√°s este m√©todo deber√≠a llamarse en el constructor de la ventana mientras se usa un evento componentResized
		 boton.setIcon(new ImageIcon(imgEscalada));
	}
	private JScrollPane getScrollPaneProductos() {
		if (scrollPaneProductos == null) {
			scrollPaneProductos = new JScrollPane();
			scrollPaneProductos.setViewportView(getPanelProductos());
		}
		return scrollPaneProductos;
	}
	private JPanel getPanelProductos() {
		if (panelProductos == null) {
			panelProductos = new JPanel();
			panelProductos.setBackground(new Color(0, 0, 128));
			panelProductos.setLayout(new GridLayout(0, 5, 40, 40));
			generarBotones();
		}
		return panelProductos;
	}

	protected void generarBotones() {
		for(int i=0; i<60; i++) {
			JButton j = new JButton("");
			j.setText("jihdihdiqgduqgudgquy");
			j.setVerticalTextPosition(SwingConstants.BOTTOM); 
			j.setHorizontalTextPosition(SwingConstants.CENTER);
			setImagenAdaptada(j, "/img/logo.png");
			panelProductos.add(j);
		}
	}
	private JPanel getPanelFinalizarMenu() {
		if (panelFinalizarMenu == null) {
			panelFinalizarMenu = new JPanel();
			panelFinalizarMenu.setBackground(new Color(128, 0, 0));
			panelFinalizarMenu.setLayout(new GridLayout(0, 5, 0, 0));
			panelFinalizarMenu.add(getLblPlaceHolderMenu());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_3());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_1());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_2());
			panelFinalizarMenu.add(getBtnFinalizar());
		}
		return panelFinalizarMenu;
	}
	private JLabel getLblPlaceHolderMenu() {
		if (lblPlaceHolderMenu == null) {
			lblPlaceHolderMenu = new JLabel("");
		}
		return lblPlaceHolderMenu;
	}
	private JButton getBtnFinalizar() {
		if (btnFinalizar == null) {
			btnFinalizar = new JButton("Finalizar");
			btnFinalizar.setMnemonic('F');
			btnFinalizar.setForeground(new Color(255, 255, 255));
			btnFinalizar.setBackground(new Color(50, 205, 50));
			btnFinalizar.setFont(new Font("SansSerif", Font.PLAIN, 28));
			btnFinalizar.setActionCommand("pnPagar");
			btnFinalizar.addActionListener(pf);
		}
		return btnFinalizar;
	}
	private JLabel getLblPlaceHolderMenu_2() {
		if (lblPlaceHolderMenu_2 == null) {
			lblPlaceHolderMenu_2 = new JLabel("");
		}
		return lblPlaceHolderMenu_2;
	}
	private JLabel getLblPlaceHolderMenu_1() {
		if (lblPlaceHolderMenu_1 == null) {
			lblPlaceHolderMenu_1 = new JLabel("");
		}
		return lblPlaceHolderMenu_1;
	}
	private JLabel getLblPlaceHolderMenu_3() {
		if (lblPlaceHolderMenu_3 == null) {
			lblPlaceHolderMenu_3 = new JLabel("");
		}
		return lblPlaceHolderMenu_3;
	}
	private JPanel getPanelCarrito() {
		if (panelCarrito == null) {
			panelCarrito = new JPanel();
			panelCarrito.setBackground(new Color(128, 0, 0));
			panelCarrito.setLayout(new BorderLayout(0, 0));
			panelCarrito.add(getBtnCarrito(), BorderLayout.NORTH);
			panelCarrito.add(getScrollPaneCarrito());
		}
		return panelCarrito;
	}
	private JButton getBtnCarrito() {
		if (btnCarrito == null) {
			btnCarrito = new JButton("");
			btnCarrito.setToolTipText("Mostrar/Ocultar Carrito");
			btnCarrito.setBackground(new Color(255, 255, 255));
			setImagenAdaptada(btnCarrito,"/img/carrito.png");
			btnCarrito.addActionListener(pCrt);
		}
		return btnCarrito;
	}
	private JScrollPane getScrollPaneCarrito() {
		if (scrollPaneCarrito == null) {
			scrollPaneCarrito = new JScrollPane();
			scrollPaneCarrito.setEnabled(false);
			scrollPaneCarrito.setViewportView(getTxtAreaCarrito());
		}
		return scrollPaneCarrito;
	}
	private JTextArea getTxtAreaCarrito() {
		if (txtAreaCarrito == null) {
			txtAreaCarrito = new JTextArea();
			txtAreaCarrito.setBackground(new Color(255, 255, 255));
			txtAreaCarrito.setEditable(false);
			txtAreaCarrito.setVisible(false);
			txtAreaCarrito.setText("jijdijdwjdw\r\ndmqojqowjdoqwjdoqw\r\nfdoqkdoqk");
		}
		return txtAreaCarrito;
	}
	private JPasswordField getPasswordFieldReserva() {
		if (passwordFieldReserva == null) {
			passwordFieldReserva = new JPasswordField();
			passwordFieldReserva.setBackground(new Color(255, 255, 255));
			passwordFieldReserva.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return passwordFieldReserva;
	}
	private JPanel getPanelPago() {
		if (panelPago == null) {
			panelPago = new JPanel();
			panelPago.setLayout(new GridLayout(0, 2, 0, 0));
			panelPago.add(getScrollPaneListaPedidos());
			panelPago.add(getPanelOpcionesFinales());
		}
		return panelPago;
	}
	private JScrollPane getScrollPaneListaPedidos() {
		if (scrollPaneListaPedidos == null) {
			scrollPaneListaPedidos = new JScrollPane();
			scrollPaneListaPedidos.setViewportView(getTextAreaPedidos());
		}
		return scrollPaneListaPedidos;
	}
	private JPanel getPanelOpcionesFinales() {
		if (panelOpcionesFinales == null) {
			panelOpcionesFinales = new JPanel();
			panelOpcionesFinales.setBackground(new Color(0, 0, 128));
			panelOpcionesFinales.setLayout(new BorderLayout(0, 0));
			panelOpcionesFinales.add(getPanelMetodoPago(), BorderLayout.CENTER);
			panelOpcionesFinales.add(getPanelEleccionJugar(), BorderLayout.NORTH);
			panelOpcionesFinales.add(getPanelBtnFinales(), BorderLayout.SOUTH);
		}
		return panelOpcionesFinales;
	}
	private JTextArea getTextAreaPedidos() {
		if (textAreaPedidos == null) {
			textAreaPedidos = new JTextArea();
			textAreaPedidos.setText("ojdowjdowjdowdowjdo\r\ndojdodjwojdowjdm\r\ndmwdjowjdo");
			textAreaPedidos.setFont(new Font("SansSerif", Font.PLAIN, 21));
		}
		return textAreaPedidos;
	}
	private JPanel getPanelMetodoPago() {
		if (panelMetodoPago == null) {
			panelMetodoPago = new JPanel();
			panelMetodoPago.setBackground(new Color(0, 0, 128));
			panelMetodoPago.setLayout(new GridLayout(4, 1, 0, 0));
			panelMetodoPago.add(getLblOpcionesPago());
			panelMetodoPago.add(getRdbtnTarjeta());
			panelMetodoPago.add(getRdbtnEfectivo());
		}
		return panelMetodoPago;
	}
	private JPanel getPanelEleccionJugar() {
		if (panelEleccionJugar == null) {
			panelEleccionJugar = new JPanel();
			panelEleccionJugar.setBackground(new Color(0, 0, 128));
			panelEleccionJugar.setLayout(new GridLayout(3, 1, 0, 0));
			panelEleccionJugar.add(getLblOpcionesJugar());
			panelEleccionJugar.add(getRdbtnJugar());
			panelEleccionJugar.add(getRdbtnNoJugar());
		}
		return panelEleccionJugar;
	}
	private JLabel getLblOpcionesJugar() {
		if (lblOpcionesJugar == null) {
			lblOpcionesJugar = new JLabel("\u00BFQuiere jugar para descuentos?");
			lblOpcionesJugar.setForeground(new Color(255, 255, 255));
			lblOpcionesJugar.setFont(new Font("SansSerif", Font.BOLD, 27));
		}
		return lblOpcionesJugar;
	}
	private JRadioButton getRdbtnJugar() {
		if (rdbtnJugar == null) {
			rdbtnJugar = new JRadioButton("Jugar");
			rdbtnJugar.setBackground(new Color(0, 0, 128));
			rdbtnJugar.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnJugar.setSelected(true);
			rdbtnJugar.setMnemonic('J');
			buttonGroupJugar.add(rdbtnJugar);
			rdbtnJugar.setForeground(new Color(255, 255, 255));
		}
		return rdbtnJugar;
	}
	private JRadioButton getRdbtnNoJugar() {
		if (rdbtnNoJugar == null) {
			rdbtnNoJugar = new JRadioButton("No jugar");
			rdbtnNoJugar.setBackground(new Color(0, 0, 128));
			rdbtnNoJugar.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnNoJugar.setMnemonic('N');
			buttonGroupJugar.add(rdbtnNoJugar);
			rdbtnNoJugar.setForeground(new Color(255, 255, 255));
		}
		return rdbtnNoJugar;
	}
	private JLabel getLblOpcionesPago() {
		if (lblOpcionesPago == null) {
			lblOpcionesPago = new JLabel("\u00BFC\u00F3mo desea pagar?");
			lblOpcionesPago.setHorizontalAlignment(SwingConstants.LEFT);
			lblOpcionesPago.setFont(new Font("SansSerif", Font.BOLD, 27));
			lblOpcionesPago.setForeground(new Color(255, 255, 255));
		}
		return lblOpcionesPago;
	}
	private JRadioButton getRdbtnTarjeta() {
		if (rdbtnTarjeta == null) {
			rdbtnTarjeta = new JRadioButton("Tarjeta");
			rdbtnTarjeta.setBackground(new Color(0, 0, 128));
			rdbtnTarjeta.setMnemonic('T');
			rdbtnTarjeta.setSelected(true);
			buttonGroupPago.add(rdbtnTarjeta);
			rdbtnTarjeta.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnTarjeta.setForeground(new Color(255, 255, 255));
			rdbtnTarjeta.setHorizontalAlignment(SwingConstants.LEFT);
		}
		return rdbtnTarjeta;
	}
	private JRadioButton getRdbtnEfectivo() {
		if (rdbtnEfectivo == null) {
			rdbtnEfectivo = new JRadioButton("Efectivo");
			rdbtnEfectivo.setBackground(new Color(0, 0, 128));
			rdbtnEfectivo.setMnemonic('E');
			buttonGroupPago.add(rdbtnEfectivo);
			rdbtnEfectivo.setForeground(new Color(255, 255, 255));
			rdbtnEfectivo.setFont(new Font("SansSerif", Font.PLAIN, 19));
		}
		return rdbtnEfectivo;
	}
	private JPanel getPanelBtnFinales() {
		if (panelBtnFinales == null) {
			panelBtnFinales = new JPanel();
			panelBtnFinales.setLayout(new GridLayout(0, 2, 0, 0));
			panelBtnFinales.add(getBtnCancelar());
			panelBtnFinales.add(getBtnFinalizaryPagar());
		}
		return panelBtnFinales;
	}
	private JButton getBtnCancelar() {
		if (btnCancelar == null) {
			btnCancelar = new JButton("Cancelar");
			btnCancelar.setForeground(new Color(255, 255, 255));
			btnCancelar.setBackground(new Color(255, 0, 0));
			btnCancelar.setFont(new Font("SansSerif", Font.PLAIN, 27));
			btnCancelar.setMnemonic('C');
			btnCancelar.setActionCommand("pnMenu");
			btnCancelar.addActionListener(pf);
		}
		return btnCancelar;
	}
	private JButton getBtnFinalizaryPagar() {
		if (btnFinalizaryPagar == null) {
			btnFinalizaryPagar = new JButton("Finalizar y pagar");
			btnFinalizaryPagar.setMnemonic('F');
			btnFinalizaryPagar.setBackground(new Color(50, 205, 50));
			btnFinalizaryPagar.setForeground(new Color(255, 255, 255));
			btnFinalizaryPagar.setFont(new Font("SansSerif", Font.PLAIN, 23));
		}
		return btnFinalizaryPagar;
	}
	private JMenuBar getMenuBar_4() {
		if (menuBar == null) {
			menuBar = new JMenuBar();
			menuBar.add(getMenu_1());
			menuBar.add(getMenu_2());
		}
		return menuBar;
	}
	private JMenu getMenu_1() {
		if (mnOptions == null) {
			mnOptions = new JMenu("Opciones");
			mnOptions.setMnemonic('O');
			mnOptions.add(getMntmNuevaSesion());
			mnOptions.add(getSeparator());
			mnOptions.add(getMntmSalida());
		}
		return mnOptions;
	}
	private JMenuItem getMntmSalida() {
		if (mntmSalida == null) {
			mntmSalida = new JMenuItem("Salida");
			mntmSalida.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_X, InputEvent.CTRL_DOWN_MASK));
			mntmSalida.addActionListener(pE);
		}
		return mntmSalida;
	}
	private JMenuItem getMntmNuevaSesion() {
		if (mntmNuevaSesion == null) {
			mntmNuevaSesion = new JMenuItem("Nueva Sesion");
			mntmNuevaSesion.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, InputEvent.CTRL_DOWN_MASK));
		}
		return mntmNuevaSesion;
	}
	private JSeparator getSeparator() {
		if (separator == null) {
			separator = new JSeparator();
		}
		return separator;
	}
	private JMenu getMenu_2() {
		if (mnAyuda == null) {
			mnAyuda = new JMenu("Ayuda");
			mnAyuda.setMnemonic('A');
			mnAyuda.add(getMntmAyuda());
		}
		return mnAyuda;
	}
	private JMenuItem getMntmAyuda() {
		if (mntmAyuda == null) {
			mntmAyuda = new JMenuItem("Abrir men\u00FA de ayuda");
			mntmAyuda.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F1, InputEvent.CTRL_DOWN_MASK));
		}
		return mntmAyuda;
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2024-12-25 21:00:52.637
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2024-12-25 21:00:52.638
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2024-12-25 21:00:53.545
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package uo.cpm.modulo.ui;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import java.awt.CardLayout;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.BorderLayout;
import javax.swing.JLabel;
import javax.swing.JButton;
import javax.swing.BoxLayout;
import java.awt.GridLayout;
import java.awt.Image;

import javax.swing.ImageIcon;
import java.awt.Color;
import java.awt.Font;
import javax.swing.border.LineBorder;
import javax.swing.SwingConstants;
import java.awt.FlowLayout;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.Component;
import javax.swing.JTextField;
import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.InputEvent;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JPasswordField;
import javax.swing.JSplitPane;
import javax.swing.JRadioButton;
import javax.swing.ButtonGroup;
import javax.swing.JSeparator;

public class VentanaPrincipal extends JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private JPanel contentPane;
	private JPanel panelInicio;
	private JPanel panelBienvenida;
	private JPanel panelIdiomas;
	private JButton btnSpanish;
	private JLabel lblIngredients;
	private JButton btnEnglish;
	private JButton btnFrench;
	private JButton btnItalian;
	private JPanel panelSaludo;
	private JLabel lblWelcome;
	private JButton btnSiguiente_Datos;
	private JLabel lblIngredients2;
	private JLabel lblIngredients2_1;
	private ProcessFrame pf = new  ProcessFrame();
	private JPanel panelRegistro;
	private JPanel panelDatos;
	private JTextField textFieldDNI;
	private JLabel lblDNI;
	private JLabel lblReserva;
	private JPanel panelBtn;
	private JLabel lblPlaceHolder;
	private JButton btnSiguiente_Menu;
	private JLabel lblPlaceHolder_1;
	private JPanel panelSpacing;
	private JLabel lblPlaceHolder_1_1;
	private JPanel panelMenu;
	private JPanel panelFiltros;
	private JButton btnTodos;
	private JButton btnPizzas;
	private JButton btnEntrantes;
	private JButton btnEnsaladas;
	private JButton btnPostres;
	private JButton btnBebidas;
	private JScrollPane scrollPaneProductos;
	private JPanel panelProductos;
	private JPanel panelFinalizarMenu;
	private JLabel lblPlaceHolderMenu;
	private JButton btnFinalizar;
	private JLabel lblPlaceHolderMenu_2;
	private JLabel lblPlaceHolderMenu_1;
	private JLabel lblPlaceHolderMenu_3;
	private JPanel panelCarrito;
	private JButton btnCarrito;
	private JScrollPane scrollPaneCarrito;
	private JTextArea txtAreaCarrito;
	private ProcessCart pCrt = new ProcessCart();
	private JPasswordField passwordFieldReserva;
	private JPanel panelPago;
	private JScrollPane scrollPaneListaPedidos;
	private JPanel panelOpcionesFinales;
	private JTextArea textAreaPedidos;
	private JPanel panelMetodoPago;
	private JPanel panelEleccionJugar;
	private JLabel lblOpcionesJugar;
	private JRadioButton rdbtnJugar;
	private JRadioButton rdbtnNoJugar;
	private final ButtonGroup buttonGroupJugar = new ButtonGroup();
	private JLabel lblOpcionesPago;
	private JRadioButton rdbtnTarjeta;
	private JRadioButton rdbtnEfectivo;
	private JPanel panelBtnFinales;
	private JButton btnCancelar;
	private JButton btnFinalizaryPagar;
	private final ButtonGroup buttonGroupPago = new ButtonGroup();
	private JMenuBar menuBar;
	private JMenu mnOptions;
	private JMenuItem mntmSalida;
	private JMenuItem mntmNuevaSesion;
	private JSeparator separator;
	private JMenu mnAyuda;
	private JMenuItem mntmAyuda;
	private ProcessExit pE = new ProcessExit();
	private ProcessWindowHelpFocus pWHF = new 
	class ProcessWindowHelpFocus extends WindowAdapter{
		@Override
		public void windowOpened(WindowEvent e) {
			getBtnSiguiente_Datos().requestFocus();
		}
	}
	class ProcessExit implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			confirmChoice();
			
		}

		
		
	}
	protected void confirmChoice() {
		if(JOptionPane.showConfirmDialog(null, "¬øEst√°s seguro/a de que quieres salir de la aplicaci√≥n?")==JOptionPane.YES_OPTION) {
			System.exit(0);
		}
	}
	class ProcessFrame implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			changeFrame(e);
			
		}

		
		
	}
	protected void changeFrame(ActionEvent e) {
		String frame = e.getActionCommand();
		((CardLayout)getContentPane().getLayout()).show(getContentPane(), frame);
	}
	class ProcessCart implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			showShoppingCart();
			
		}

		
		
	}
	protected void showShoppingCart() {
		if(getTxtAreaCarrito().isVisible()) {
			getTxtAreaCarrito().setVisible(false);
		}else {
			getTxtAreaCarrito().setVisible(true);
		}
	}

	/**
	 * Create the frame.
	 */
	public VentanaPrincipal() {
		addWindowListener(p);
		setTitle("Uniovi's ");
		setIconImage(Toolkit.getDefaultToolkit().getImage(VentanaPrincipal.class.getResource("/img/logo.png")));
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 870, 530);
		setJMenuBar(getMenuBar_4());
		contentPane = new JPanel();
		contentPane.setBackground(new Color(255, 0, 0));
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(new CardLayout(0, 0));
		contentPane.add(getPanelInicio(), "pnInicio");
		contentPane.add(getPanelRegistro(), "pnRegistro");
		contentPane.add(getPanelMenu(), "pnMenu");
		contentPane.add(getPanelPago(), "pnPagar");
	}

	private JPanel getPanelInicio() {
		if (panelInicio == null) {
			panelInicio = new JPanel();
			panelInicio.setBackground(new Color(255, 0, 0));
			panelInicio.setLayout(new BorderLayout(0, 0));
			panelInicio.add(getPanelBienvenida(), BorderLayout.CENTER);
			panelInicio.add(getPanelIdiomas(), BorderLayout.NORTH);
			panelInicio.add(getPanelSaludo(), BorderLayout.SOUTH);
		}
		return panelInicio;
	}
	private JPanel getPanelBienvenida() {
		if (panelBienvenida == null) {
			panelBienvenida = new JPanel();
			panelBienvenida.setBackground(new Color(0, 0, 139));
			panelBienvenida.setLayout(new BorderLayout(0, 0));
			panelBienvenida.add(getLblIngredients(), BorderLayout.CENTER);
			panelBienvenida.add(getLblIngredients2(), BorderLayout.WEST);
			panelBienvenida.add(getLblIngredients2_1(), BorderLayout.EAST);
		}
		return panelBienvenida;
	}
	private JPanel getPanelIdiomas() {
		if (panelIdiomas == null) {
			panelIdiomas = new JPanel();
			panelIdiomas.setBackground(new Color(255, 0, 0));
			panelIdiomas.setLayout(new GridLayout(0, 4, 0, 0));
			panelIdiomas.add(getBtnSpanish());
			panelIdiomas.add(getBtnEnglish());
			panelIdiomas.add(getBtnFrench());
			panelIdiomas.add(getBtnItalian());
		}
		return panelIdiomas;
	}
	private JButton getBtnSpanish() {
		if (btnSpanish == null) {
			btnSpanish = new JButton("");
			btnSpanish.setBackground(new Color(255, 255, 255));
			btnSpanish.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/es.png")));
		}
		return btnSpanish;
	}
	private JLabel getLblIngredients() {
		if (lblIngredients == null) {
			lblIngredients = new JLabel("");
			lblIngredients.setHorizontalAlignment(SwingConstants.CENTER);
			lblIngredients.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/bienvenida.png")));
		}
		return lblIngredients;
	}
	private JButton getBtnEnglish() {
		if (btnEnglish == null) {
			btnEnglish = new JButton("");
			btnEnglish.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/en.png")));
			btnEnglish.setBackground(Color.WHITE);
		}
		return btnEnglish;
	}
	private JButton getBtnFrench() {
		if (btnFrench == null) {
			btnFrench = new JButton("");
			btnFrench.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/fr.png")));
			btnFrench.setBackground(Color.WHITE);
		}
		return btnFrench;
	}
	private JButton getBtnItalian() {
		if (btnItalian == null) {
			btnItalian = new JButton("");
			btnItalian.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/it.png")));
			btnItalian.setBackground(Color.WHITE);
		}
		return btnItalian;
	}
	private JPanel getPanelSaludo() {
		if (panelSaludo == null) {
			panelSaludo = new JPanel();
			panelSaludo.setBackground(new Color(255, 0, 0));
			panelSaludo.setLayout(new GridLayout(0, 2, 0, 0));
			panelSaludo.add(getLblWelcome_1());
			panelSaludo.add(getBtnSiguiente_Datos());
		}
		return panelSaludo;
	}
	private JLabel getLblWelcome_1() {
		if (lblWelcome == null) {
			lblWelcome = new JLabel("\u00A1Bienvenido a Uniovi's!");
			lblWelcome.setHorizontalAlignment(SwingConstants.CENTER);
			lblWelcome.setForeground(Color.WHITE);
			lblWelcome.setFont(new Font("Dialog", Font.BOLD, 28));
			lblWelcome.setBorder(new LineBorder(new Color(0, 0, 0), 0));
			lblWelcome.setBackground(Color.WHITE);
		}
		return lblWelcome;
	}
	private JButton getBtnSiguiente_Datos() {
		if (btnSiguiente_Datos == null) {
			btnSiguiente_Datos = new JButton("Continuar");
			btnSiguiente_Datos.setAlignmentX(Component.RIGHT_ALIGNMENT);
			btnSiguiente_Datos.setBackground(new Color(50, 205, 50));
			btnSiguiente_Datos.setForeground(new Color(255, 255, 255));
			btnSiguiente_Datos.setFont(new Font("SansSerif", Font.PLAIN, 24));
			btnSiguiente_Datos.setMnemonic('C');
			btnSiguiente_Datos.setBorder(new LineBorder(new Color(0, 0, 0), 4, true));
			btnSiguiente_Datos.setActionCommand("pnRegistro");
			btnSiguiente_Datos.addActionListener(pf);
		}
		return btnSiguiente_Datos;
	}
	private JLabel getLblIngredients2() {
		if (lblIngredients2 == null) {
			lblIngredients2 = new JLabel("");
			lblIngredients2.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/PI03.png")));
		}
		return lblIngredients2;
	}
	private JLabel getLblIngredients2_1() {
		if (lblIngredients2_1 == null) {
			lblIngredients2_1 = new JLabel("");
			lblIngredients2_1.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/BE02.png")));
		}
		return lblIngredients2_1;
	}
	private JPanel getPanelRegistro() {
		if (panelRegistro == null) {
			panelRegistro = new JPanel();
			panelRegistro.setLayout(new BorderLayout(0, 0));
			panelRegistro.add(getPanelDatos(), BorderLayout.CENTER);
			panelRegistro.add(getPanelBtn(), BorderLayout.SOUTH);
			panelRegistro.add(getPanelSpacing(), BorderLayout.EAST);
		}
		return panelRegistro;
	}
	private JPanel getPanelDatos() {
		if (panelDatos == null) {
			panelDatos = new JPanel();
			panelDatos.setBackground(new Color(0, 0, 128));
			panelDatos.setLayout(new GridLayout(6, 1, 0, 0));
			panelDatos.add(getLblDNI());
			panelDatos.add(getTextFieldDNI());
			panelDatos.add(getLblReserva());
			panelDatos.add(getPasswordFieldReserva());
		}
		return panelDatos;
	}
	private JTextField getTextFieldDNI() {
		if (textFieldDNI == null) {
			textFieldDNI = new JTextField();
			textFieldDNI.setFont(new Font("SansSerif", Font.PLAIN, 28));
			textFieldDNI.setColumns(10);
		}
		return textFieldDNI;
	}
	private JLabel getLblDNI() {
		if (lblDNI == null) {
			lblDNI = new JLabel("DNI / NIE:");
			lblDNI.setLabelFor(getTextFieldDNI());
			lblDNI.setDisplayedMnemonic('D');
			lblDNI.setForeground(new Color(255, 255, 255));
			lblDNI.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return lblDNI;
	}
	private JLabel getLblReserva() {
		if (lblReserva == null) {
			lblReserva = new JLabel("N\u00BA / C\u00F3digo de reserva");
			lblReserva.setLabelFor(getPasswordFieldReserva());
			lblReserva.setDisplayedMnemonic('N');
			lblReserva.setForeground(new Color(255, 255, 255));
			lblReserva.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return lblReserva;
	}
	private JPanel getPanelBtn() {
		if (panelBtn == null) {
			panelBtn = new JPanel();
			panelBtn.setBackground(new Color(0, 0, 128));
			panelBtn.setLayout(new GridLayout(1, 0, 0, 0));
			panelBtn.add(getLblPlaceHolder_1());
			panelBtn.add(getLblPlaceHolder());
			panelBtn.add(getBtnSiguiente_Menu());
		}
		return panelBtn;
	}
	private JLabel getLblPlaceHolder() {
		if (lblPlaceHolder == null) {
			lblPlaceHolder = new JLabel("");
			lblPlaceHolder.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder;
	}
	private JButton getBtnSiguiente_Menu() {
		if (btnSiguiente_Menu == null) {
			btnSiguiente_Menu = new JButton("Continuar");
			btnSiguiente_Menu.setForeground(new Color(255, 255, 255));
			btnSiguiente_Menu.setBackground(new Color(50, 205, 50));
			btnSiguiente_Menu.setFont(new Font("SansSerif", Font.PLAIN, 28));
			btnSiguiente_Menu.setMnemonic('C');
			btnSiguiente_Menu.setActionCommand("pnMenu");
			btnSiguiente_Menu.addActionListener(pf);
		}
		return btnSiguiente_Menu;
	}
	private JLabel getLblPlaceHolder_1() {
		if (lblPlaceHolder_1 == null) {
			lblPlaceHolder_1 = new JLabel("");
			lblPlaceHolder_1.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder_1;
	}
	private JPanel getPanelSpacing() {
		if (panelSpacing == null) {
			panelSpacing = new JPanel();
			panelSpacing.setBackground(new Color(0, 0, 128));
			panelSpacing.add(getLblPlaceHolder_1_1());
		}
		return panelSpacing;
	}
	private JLabel getLblPlaceHolder_1_1() {
		if (lblPlaceHolder_1_1 == null) {
			lblPlaceHolder_1_1 = new JLabel("                                                                                                            ");
			lblPlaceHolder_1_1.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder_1_1;
	}
	private JPanel getPanelMenu() {
		if (panelMenu == null) {
			panelMenu = new JPanel();
			panelMenu.setLayout(new BorderLayout(0, 0));
			panelMenu.add(getPanelFiltros(), BorderLayout.WEST);
			panelMenu.add(getScrollPaneProductos(), BorderLayout.CENTER);
			panelMenu.add(getPanelFinalizarMenu(), BorderLayout.SOUTH);
			panelMenu.add(getPanelCarrito(), BorderLayout.EAST);
		}
		return panelMenu;
	}
	private JPanel getPanelFiltros() {
		if (panelFiltros == null) {
			panelFiltros = new JPanel();
			panelFiltros.setLayout(new GridLayout(6, 0, 0, 0));
			panelFiltros.add(getBtnTodos());
			panelFiltros.add(getBtnPizzas());
			panelFiltros.add(getBtnEntrantes());
			panelFiltros.add(getBtnEnsaladas());
			panelFiltros.add(getBtnPostres());
			panelFiltros.add(getBtnBebidas());
		}
		return panelFiltros;
	}
	private JButton getBtnTodos() {
		if (btnTodos == null) {
			btnTodos = new JButton("");
			btnTodos.setBackground(new Color(255, 255, 255));
			btnTodos.setToolTipText("Filtrar - Todos");
			setImagenAdaptada(btnTodos, "/img/bienvenida.png");
		}
		return btnTodos;
	}
	private JButton getBtnPizzas() {
		if (btnPizzas == null) {
			btnPizzas = new JButton("");
			btnPizzas.setBackground(new Color(255, 255, 255));
			btnPizzas.setToolTipText("Filtrar - Pizzas");
			setImagenAdaptada(btnPizzas,"/img/PI01.png");
		}
		return btnPizzas;
	}
	private JButton getBtnEntrantes() {
		if (btnEntrantes == null) {
			btnEntrantes = new JButton("");
			btnEntrantes.setBackground(new Color(255, 255, 255));
			btnEntrantes.setToolTipText("Filtrar - Entrantes");
			setImagenAdaptada(btnEntrantes, "/img/ET02.png");
		}
		return btnEntrantes;
	}
	private JButton getBtnEnsaladas() {
		if (btnEnsaladas == null) {
			btnEnsaladas = new JButton("");
			btnEnsaladas.setBackground(new Color(255, 255, 255));
			btnEnsaladas.setToolTipText("Filtrar - Ensaladas");
			setImagenAdaptada(btnEnsaladas, "/img/EN02.png");
		}
		return btnEnsaladas;
	}
	private JButton getBtnPostres() {
		if (btnPostres == null) {
			btnPostres = new JButton("");
			btnPostres.setBackground(new Color(255, 255, 255));
			btnPostres.setToolTipText("Filtrar - Postres");
			setImagenAdaptada(btnPostres, "/img/PO01.png");
		}
		return btnPostres;
	}
	private JButton getBtnBebidas() {
		if (btnBebidas == null) {
			btnBebidas = new JButton("");
			btnBebidas.setBackground(new Color(255, 255, 255));
			btnBebidas.setToolTipText("Filtrar - Bebidas");
			setImagenAdaptada(btnBebidas, "/img/BE03.png");
		}
		return btnBebidas;
	}
	private void setImagenAdaptada(JButton boton, String rutaImagen){
		 Image imgOriginal = new ImageIcon(getClass().getResource(rutaImagen)).getImage(); 
		 Image imgEscalada = imgOriginal.getScaledInstance((int) (100), (int) (100),Image.SCALE_SMOOTH);
		 //si se quiere reescalar la ventana, este 100 tendria que cambiarse por el width y el height  respectivamente de la imagen para que as√≠ se reescale cada vez que cambias el tama√±o
		 //adem√°s este m√©todo deber√≠a llamarse en el constructor de la ventana mientras se usa un evento componentResized
		 boton.setIcon(new ImageIcon(imgEscalada));
	}
	private JScrollPane getScrollPaneProductos() {
		if (scrollPaneProductos == null) {
			scrollPaneProductos = new JScrollPane();
			scrollPaneProductos.setViewportView(getPanelProductos());
		}
		return scrollPaneProductos;
	}
	private JPanel getPanelProductos() {
		if (panelProductos == null) {
			panelProductos = new JPanel();
			panelProductos.setBackground(new Color(0, 0, 128));
			panelProductos.setLayout(new GridLayout(0, 5, 40, 40));
			generarBotones();
		}
		return panelProductos;
	}

	protected void generarBotones() {
		for(int i=0; i<60; i++) {
			JButton j = new JButton("");
			j.setText("jihdihdiqgduqgudgquy");
			j.setVerticalTextPosition(SwingConstants.BOTTOM); 
			j.setHorizontalTextPosition(SwingConstants.CENTER);
			setImagenAdaptada(j, "/img/logo.png");
			panelProductos.add(j);
		}
	}
	private JPanel getPanelFinalizarMenu() {
		if (panelFinalizarMenu == null) {
			panelFinalizarMenu = new JPanel();
			panelFinalizarMenu.setBackground(new Color(128, 0, 0));
			panelFinalizarMenu.setLayout(new GridLayout(0, 5, 0, 0));
			panelFinalizarMenu.add(getLblPlaceHolderMenu());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_3());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_1());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_2());
			panelFinalizarMenu.add(getBtnFinalizar());
		}
		return panelFinalizarMenu;
	}
	private JLabel getLblPlaceHolderMenu() {
		if (lblPlaceHolderMenu == null) {
			lblPlaceHolderMenu = new JLabel("");
		}
		return lblPlaceHolderMenu;
	}
	private JButton getBtnFinalizar() {
		if (btnFinalizar == null) {
			btnFinalizar = new JButton("Finalizar");
			btnFinalizar.setMnemonic('F');
			btnFinalizar.setForeground(new Color(255, 255, 255));
			btnFinalizar.setBackground(new Color(50, 205, 50));
			btnFinalizar.setFont(new Font("SansSerif", Font.PLAIN, 28));
			btnFinalizar.setActionCommand("pnPagar");
			btnFinalizar.addActionListener(pf);
		}
		return btnFinalizar;
	}
	private JLabel getLblPlaceHolderMenu_2() {
		if (lblPlaceHolderMenu_2 == null) {
			lblPlaceHolderMenu_2 = new JLabel("");
		}
		return lblPlaceHolderMenu_2;
	}
	private JLabel getLblPlaceHolderMenu_1() {
		if (lblPlaceHolderMenu_1 == null) {
			lblPlaceHolderMenu_1 = new JLabel("");
		}
		return lblPlaceHolderMenu_1;
	}
	private JLabel getLblPlaceHolderMenu_3() {
		if (lblPlaceHolderMenu_3 == null) {
			lblPlaceHolderMenu_3 = new JLabel("");
		}
		return lblPlaceHolderMenu_3;
	}
	private JPanel getPanelCarrito() {
		if (panelCarrito == null) {
			panelCarrito = new JPanel();
			panelCarrito.setBackground(new Color(128, 0, 0));
			panelCarrito.setLayout(new BorderLayout(0, 0));
			panelCarrito.add(getBtnCarrito(), BorderLayout.NORTH);
			panelCarrito.add(getScrollPaneCarrito());
		}
		return panelCarrito;
	}
	private JButton getBtnCarrito() {
		if (btnCarrito == null) {
			btnCarrito = new JButton("");
			btnCarrito.setToolTipText("Mostrar/Ocultar Carrito");
			btnCarrito.setBackground(new Color(255, 255, 255));
			setImagenAdaptada(btnCarrito,"/img/carrito.png");
			btnCarrito.addActionListener(pCrt);
		}
		return btnCarrito;
	}
	private JScrollPane getScrollPaneCarrito() {
		if (scrollPaneCarrito == null) {
			scrollPaneCarrito = new JScrollPane();
			scrollPaneCarrito.setEnabled(false);
			scrollPaneCarrito.setViewportView(getTxtAreaCarrito());
		}
		return scrollPaneCarrito;
	}
	private JTextArea getTxtAreaCarrito() {
		if (txtAreaCarrito == null) {
			txtAreaCarrito = new JTextArea();
			txtAreaCarrito.setBackground(new Color(255, 255, 255));
			txtAreaCarrito.setEditable(false);
			txtAreaCarrito.setVisible(false);
			txtAreaCarrito.setText("jijdijdwjdw\r\ndmqojqowjdoqwjdoqw\r\nfdoqkdoqk");
		}
		return txtAreaCarrito;
	}
	private JPasswordField getPasswordFieldReserva() {
		if (passwordFieldReserva == null) {
			passwordFieldReserva = new JPasswordField();
			passwordFieldReserva.setBackground(new Color(255, 255, 255));
			passwordFieldReserva.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return passwordFieldReserva;
	}
	private JPanel getPanelPago() {
		if (panelPago == null) {
			panelPago = new JPanel();
			panelPago.setLayout(new GridLayout(0, 2, 0, 0));
			panelPago.add(getScrollPaneListaPedidos());
			panelPago.add(getPanelOpcionesFinales());
		}
		return panelPago;
	}
	private JScrollPane getScrollPaneListaPedidos() {
		if (scrollPaneListaPedidos == null) {
			scrollPaneListaPedidos = new JScrollPane();
			scrollPaneListaPedidos.setViewportView(getTextAreaPedidos());
		}
		return scrollPaneListaPedidos;
	}
	private JPanel getPanelOpcionesFinales() {
		if (panelOpcionesFinales == null) {
			panelOpcionesFinales = new JPanel();
			panelOpcionesFinales.setBackground(new Color(0, 0, 128));
			panelOpcionesFinales.setLayout(new BorderLayout(0, 0));
			panelOpcionesFinales.add(getPanelMetodoPago(), BorderLayout.CENTER);
			panelOpcionesFinales.add(getPanelEleccionJugar(), BorderLayout.NORTH);
			panelOpcionesFinales.add(getPanelBtnFinales(), BorderLayout.SOUTH);
		}
		return panelOpcionesFinales;
	}
	private JTextArea getTextAreaPedidos() {
		if (textAreaPedidos == null) {
			textAreaPedidos = new JTextArea();
			textAreaPedidos.setText("ojdowjdowjdowdowjdo\r\ndojdodjwojdowjdm\r\ndmwdjowjdo");
			textAreaPedidos.setFont(new Font("SansSerif", Font.PLAIN, 21));
		}
		return textAreaPedidos;
	}
	private JPanel getPanelMetodoPago() {
		if (panelMetodoPago == null) {
			panelMetodoPago = new JPanel();
			panelMetodoPago.setBackground(new Color(0, 0, 128));
			panelMetodoPago.setLayout(new GridLayout(4, 1, 0, 0));
			panelMetodoPago.add(getLblOpcionesPago());
			panelMetodoPago.add(getRdbtnTarjeta());
			panelMetodoPago.add(getRdbtnEfectivo());
		}
		return panelMetodoPago;
	}
	private JPanel getPanelEleccionJugar() {
		if (panelEleccionJugar == null) {
			panelEleccionJugar = new JPanel();
			panelEleccionJugar.setBackground(new Color(0, 0, 128));
			panelEleccionJugar.setLayout(new GridLayout(3, 1, 0, 0));
			panelEleccionJugar.add(getLblOpcionesJugar());
			panelEleccionJugar.add(getRdbtnJugar());
			panelEleccionJugar.add(getRdbtnNoJugar());
		}
		return panelEleccionJugar;
	}
	private JLabel getLblOpcionesJugar() {
		if (lblOpcionesJugar == null) {
			lblOpcionesJugar = new JLabel("\u00BFQuiere jugar para descuentos?");
			lblOpcionesJugar.setForeground(new Color(255, 255, 255));
			lblOpcionesJugar.setFont(new Font("SansSerif", Font.BOLD, 27));
		}
		return lblOpcionesJugar;
	}
	private JRadioButton getRdbtnJugar() {
		if (rdbtnJugar == null) {
			rdbtnJugar = new JRadioButton("Jugar");
			rdbtnJugar.setBackground(new Color(0, 0, 128));
			rdbtnJugar.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnJugar.setSelected(true);
			rdbtnJugar.setMnemonic('J');
			buttonGroupJugar.add(rdbtnJugar);
			rdbtnJugar.setForeground(new Color(255, 255, 255));
		}
		return rdbtnJugar;
	}
	private JRadioButton getRdbtnNoJugar() {
		if (rdbtnNoJugar == null) {
			rdbtnNoJugar = new JRadioButton("No jugar");
			rdbtnNoJugar.setBackground(new Color(0, 0, 128));
			rdbtnNoJugar.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnNoJugar.setMnemonic('N');
			buttonGroupJugar.add(rdbtnNoJugar);
			rdbtnNoJugar.setForeground(new Color(255, 255, 255));
		}
		return rdbtnNoJugar;
	}
	private JLabel getLblOpcionesPago() {
		if (lblOpcionesPago == null) {
			lblOpcionesPago = new JLabel("\u00BFC\u00F3mo desea pagar?");
			lblOpcionesPago.setHorizontalAlignment(SwingConstants.LEFT);
			lblOpcionesPago.setFont(new Font("SansSerif", Font.BOLD, 27));
			lblOpcionesPago.setForeground(new Color(255, 255, 255));
		}
		return lblOpcionesPago;
	}
	private JRadioButton getRdbtnTarjeta() {
		if (rdbtnTarjeta == null) {
			rdbtnTarjeta = new JRadioButton("Tarjeta");
			rdbtnTarjeta.setBackground(new Color(0, 0, 128));
			rdbtnTarjeta.setMnemonic('T');
			rdbtnTarjeta.setSelected(true);
			buttonGroupPago.add(rdbtnTarjeta);
			rdbtnTarjeta.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnTarjeta.setForeground(new Color(255, 255, 255));
			rdbtnTarjeta.setHorizontalAlignment(SwingConstants.LEFT);
		}
		return rdbtnTarjeta;
	}
	private JRadioButton getRdbtnEfectivo() {
		if (rdbtnEfectivo == null) {
			rdbtnEfectivo = new JRadioButton("Efectivo");
			rdbtnEfectivo.setBackground(new Color(0, 0, 128));
			rdbtnEfectivo.setMnemonic('E');
			buttonGroupPago.add(rdbtnEfectivo);
			rdbtnEfectivo.setForeground(new Color(255, 255, 255));
			rdbtnEfectivo.setFont(new Font("SansSerif", Font.PLAIN, 19));
		}
		return rdbtnEfectivo;
	}
	private JPanel getPanelBtnFinales() {
		if (panelBtnFinales == null) {
			panelBtnFinales = new JPanel();
			panelBtnFinales.setLayout(new GridLayout(0, 2, 0, 0));
			panelBtnFinales.add(getBtnCancelar());
			panelBtnFinales.add(getBtnFinalizaryPagar());
		}
		return panelBtnFinales;
	}
	private JButton getBtnCancelar() {
		if (btnCancelar == null) {
			btnCancelar = new JButton("Cancelar");
			btnCancelar.setForeground(new Color(255, 255, 255));
			btnCancelar.setBackground(new Color(255, 0, 0));
			btnCancelar.setFont(new Font("SansSerif", Font.PLAIN, 27));
			btnCancelar.setMnemonic('C');
			btnCancelar.setActionCommand("pnMenu");
			btnCancelar.addActionListener(pf);
		}
		return btnCancelar;
	}
	private JButton getBtnFinalizaryPagar() {
		if (btnFinalizaryPagar == null) {
			btnFinalizaryPagar = new JButton("Finalizar y pagar");
			btnFinalizaryPagar.setMnemonic('F');
			btnFinalizaryPagar.setBackground(new Color(50, 205, 50));
			btnFinalizaryPagar.setForeground(new Color(255, 255, 255));
			btnFinalizaryPagar.setFont(new Font("SansSerif", Font.PLAIN, 23));
		}
		return btnFinalizaryPagar;
	}
	private JMenuBar getMenuBar_4() {
		if (menuBar == null) {
			menuBar = new JMenuBar();
			menuBar.add(getMenu_1());
			menuBar.add(getMenu_2());
		}
		return menuBar;
	}
	private JMenu getMenu_1() {
		if (mnOptions == null) {
			mnOptions = new JMenu("Opciones");
			mnOptions.setMnemonic('O');
			mnOptions.add(getMntmNuevaSesion());
			mnOptions.add(getSeparator());
			mnOptions.add(getMntmSalida());
		}
		return mnOptions;
	}
	private JMenuItem getMntmSalida() {
		if (mntmSalida == null) {
			mntmSalida = new JMenuItem("Salida");
			mntmSalida.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_X, InputEvent.CTRL_DOWN_MASK));
			mntmSalida.addActionListener(pE);
		}
		return mntmSalida;
	}
	private JMenuItem getMntmNuevaSesion() {
		if (mntmNuevaSesion == null) {
			mntmNuevaSesion = new JMenuItem("Nueva Sesion");
			mntmNuevaSesion.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, InputEvent.CTRL_DOWN_MASK));
		}
		return mntmNuevaSesion;
	}
	private JSeparator getSeparator() {
		if (separator == null) {
			separator = new JSeparator();
		}
		return separator;
	}
	private JMenu getMenu_2() {
		if (mnAyuda == null) {
			mnAyuda = new JMenu("Ayuda");
			mnAyuda.setMnemonic('A');
			mnAyuda.add(getMntmAyuda());
		}
		return mnAyuda;
	}
	private JMenuItem getMntmAyuda() {
		if (mntmAyuda == null) {
			mntmAyuda = new JMenuItem("Abrir men\u00FA de ayuda");
			mntmAyuda.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F1, InputEvent.CTRL_DOWN_MASK));
		}
		return mntmAyuda;
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2024-12-25 21:00:53.546
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2024-12-25 21:00:53.546
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2024-12-25 21:00:55.299
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package uo.cpm.modulo.ui;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import java.awt.CardLayout;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.BorderLayout;
import javax.swing.JLabel;
import javax.swing.JButton;
import javax.swing.BoxLayout;
import java.awt.GridLayout;
import java.awt.Image;

import javax.swing.ImageIcon;
import java.awt.Color;
import java.awt.Font;
import javax.swing.border.LineBorder;
import javax.swing.SwingConstants;
import java.awt.FlowLayout;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.Component;
import javax.swing.JTextField;
import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.InputEvent;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JPasswordField;
import javax.swing.JSplitPane;
import javax.swing.JRadioButton;
import javax.swing.ButtonGroup;
import javax.swing.JSeparator;

public class VentanaPrincipal extends JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private JPanel contentPane;
	private JPanel panelInicio;
	private JPanel panelBienvenida;
	private JPanel panelIdiomas;
	private JButton btnSpanish;
	private JLabel lblIngredients;
	private JButton btnEnglish;
	private JButton btnFrench;
	private JButton btnItalian;
	private JPanel panelSaludo;
	private JLabel lblWelcome;
	private JButton btnSiguiente_Datos;
	private JLabel lblIngredients2;
	private JLabel lblIngredients2_1;
	private ProcessFrame pf = new  ProcessFrame();
	private JPanel panelRegistro;
	private JPanel panelDatos;
	private JTextField textFieldDNI;
	private JLabel lblDNI;
	private JLabel lblReserva;
	private JPanel panelBtn;
	private JLabel lblPlaceHolder;
	private JButton btnSiguiente_Menu;
	private JLabel lblPlaceHolder_1;
	private JPanel panelSpacing;
	private JLabel lblPlaceHolder_1_1;
	private JPanel panelMenu;
	private JPanel panelFiltros;
	private JButton btnTodos;
	private JButton btnPizzas;
	private JButton btnEntrantes;
	private JButton btnEnsaladas;
	private JButton btnPostres;
	private JButton btnBebidas;
	private JScrollPane scrollPaneProductos;
	private JPanel panelProductos;
	private JPanel panelFinalizarMenu;
	private JLabel lblPlaceHolderMenu;
	private JButton btnFinalizar;
	private JLabel lblPlaceHolderMenu_2;
	private JLabel lblPlaceHolderMenu_1;
	private JLabel lblPlaceHolderMenu_3;
	private JPanel panelCarrito;
	private JButton btnCarrito;
	private JScrollPane scrollPaneCarrito;
	private JTextArea txtAreaCarrito;
	private ProcessCart pCrt = new ProcessCart();
	private JPasswordField passwordFieldReserva;
	private JPanel panelPago;
	private JScrollPane scrollPaneListaPedidos;
	private JPanel panelOpcionesFinales;
	private JTextArea textAreaPedidos;
	private JPanel panelMetodoPago;
	private JPanel panelEleccionJugar;
	private JLabel lblOpcionesJugar;
	private JRadioButton rdbtnJugar;
	private JRadioButton rdbtnNoJugar;
	private final ButtonGroup buttonGroupJugar = new ButtonGroup();
	private JLabel lblOpcionesPago;
	private JRadioButton rdbtnTarjeta;
	private JRadioButton rdbtnEfectivo;
	private JPanel panelBtnFinales;
	private JButton btnCancelar;
	private JButton btnFinalizaryPagar;
	private final ButtonGroup buttonGroupPago = new ButtonGroup();
	private JMenuBar menuBar;
	private JMenu mnOptions;
	private JMenuItem mntmSalida;
	private JMenuItem mntmNuevaSesion;
	private JSeparator separator;
	private JMenu mnAyuda;
	private JMenuItem mntmAyuda;
	private ProcessExit pE = new ProcessExit();
	private ProcessWindowHelpFocus pWHF = new  
	class ProcessWindowHelpFocus extends WindowAdapter{
		@Override
		public void windowOpened(WindowEvent e) {
			getBtnSiguiente_Datos().requestFocus();
		}
	}
	class ProcessExit implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			confirmChoice();
			
		}

		
		
	}
	protected void confirmChoice() {
		if(JOptionPane.showConfirmDialog(null, "¬øEst√°s seguro/a de que quieres salir de la aplicaci√≥n?")==JOptionPane.YES_OPTION) {
			System.exit(0);
		}
	}
	class ProcessFrame implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			changeFrame(e);
			
		}

		
		
	}
	protected void changeFrame(ActionEvent e) {
		String frame = e.getActionCommand();
		((CardLayout)getContentPane().getLayout()).show(getContentPane(), frame);
	}
	class ProcessCart implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			showShoppingCart();
			
		}

		
		
	}
	protected void showShoppingCart() {
		if(getTxtAreaCarrito().isVisible()) {
			getTxtAreaCarrito().setVisible(false);
		}else {
			getTxtAreaCarrito().setVisible(true);
		}
	}

	/**
	 * Create the frame.
	 */
	public VentanaPrincipal() {
		addWindowListener(p);
		setTitle("Uniovi's ");
		setIconImage(Toolkit.getDefaultToolkit().getImage(VentanaPrincipal.class.getResource("/img/logo.png")));
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 870, 530);
		setJMenuBar(getMenuBar_4());
		contentPane = new JPanel();
		contentPane.setBackground(new Color(255, 0, 0));
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(new CardLayout(0, 0));
		contentPane.add(getPanelInicio(), "pnInicio");
		contentPane.add(getPanelRegistro(), "pnRegistro");
		contentPane.add(getPanelMenu(), "pnMenu");
		contentPane.add(getPanelPago(), "pnPagar");
	}

	private JPanel getPanelInicio() {
		if (panelInicio == null) {
			panelInicio = new JPanel();
			panelInicio.setBackground(new Color(255, 0, 0));
			panelInicio.setLayout(new BorderLayout(0, 0));
			panelInicio.add(getPanelBienvenida(), BorderLayout.CENTER);
			panelInicio.add(getPanelIdiomas(), BorderLayout.NORTH);
			panelInicio.add(getPanelSaludo(), BorderLayout.SOUTH);
		}
		return panelInicio;
	}
	private JPanel getPanelBienvenida() {
		if (panelBienvenida == null) {
			panelBienvenida = new JPanel();
			panelBienvenida.setBackground(new Color(0, 0, 139));
			panelBienvenida.setLayout(new BorderLayout(0, 0));
			panelBienvenida.add(getLblIngredients(), BorderLayout.CENTER);
			panelBienvenida.add(getLblIngredients2(), BorderLayout.WEST);
			panelBienvenida.add(getLblIngredients2_1(), BorderLayout.EAST);
		}
		return panelBienvenida;
	}
	private JPanel getPanelIdiomas() {
		if (panelIdiomas == null) {
			panelIdiomas = new JPanel();
			panelIdiomas.setBackground(new Color(255, 0, 0));
			panelIdiomas.setLayout(new GridLayout(0, 4, 0, 0));
			panelIdiomas.add(getBtnSpanish());
			panelIdiomas.add(getBtnEnglish());
			panelIdiomas.add(getBtnFrench());
			panelIdiomas.add(getBtnItalian());
		}
		return panelIdiomas;
	}
	private JButton getBtnSpanish() {
		if (btnSpanish == null) {
			btnSpanish = new JButton("");
			btnSpanish.setBackground(new Color(255, 255, 255));
			btnSpanish.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/es.png")));
		}
		return btnSpanish;
	}
	private JLabel getLblIngredients() {
		if (lblIngredients == null) {
			lblIngredients = new JLabel("");
			lblIngredients.setHorizontalAlignment(SwingConstants.CENTER);
			lblIngredients.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/bienvenida.png")));
		}
		return lblIngredients;
	}
	private JButton getBtnEnglish() {
		if (btnEnglish == null) {
			btnEnglish = new JButton("");
			btnEnglish.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/en.png")));
			btnEnglish.setBackground(Color.WHITE);
		}
		return btnEnglish;
	}
	private JButton getBtnFrench() {
		if (btnFrench == null) {
			btnFrench = new JButton("");
			btnFrench.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/fr.png")));
			btnFrench.setBackground(Color.WHITE);
		}
		return btnFrench;
	}
	private JButton getBtnItalian() {
		if (btnItalian == null) {
			btnItalian = new JButton("");
			btnItalian.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/it.png")));
			btnItalian.setBackground(Color.WHITE);
		}
		return btnItalian;
	}
	private JPanel getPanelSaludo() {
		if (panelSaludo == null) {
			panelSaludo = new JPanel();
			panelSaludo.setBackground(new Color(255, 0, 0));
			panelSaludo.setLayout(new GridLayout(0, 2, 0, 0));
			panelSaludo.add(getLblWelcome_1());
			panelSaludo.add(getBtnSiguiente_Datos());
		}
		return panelSaludo;
	}
	private JLabel getLblWelcome_1() {
		if (lblWelcome == null) {
			lblWelcome = new JLabel("\u00A1Bienvenido a Uniovi's!");
			lblWelcome.setHorizontalAlignment(SwingConstants.CENTER);
			lblWelcome.setForeground(Color.WHITE);
			lblWelcome.setFont(new Font("Dialog", Font.BOLD, 28));
			lblWelcome.setBorder(new LineBorder(new Color(0, 0, 0), 0));
			lblWelcome.setBackground(Color.WHITE);
		}
		return lblWelcome;
	}
	private JButton getBtnSiguiente_Datos() {
		if (btnSiguiente_Datos == null) {
			btnSiguiente_Datos = new JButton("Continuar");
			btnSiguiente_Datos.setAlignmentX(Component.RIGHT_ALIGNMENT);
			btnSiguiente_Datos.setBackground(new Color(50, 205, 50));
			btnSiguiente_Datos.setForeground(new Color(255, 255, 255));
			btnSiguiente_Datos.setFont(new Font("SansSerif", Font.PLAIN, 24));
			btnSiguiente_Datos.setMnemonic('C');
			btnSiguiente_Datos.setBorder(new LineBorder(new Color(0, 0, 0), 4, true));
			btnSiguiente_Datos.setActionCommand("pnRegistro");
			btnSiguiente_Datos.addActionListener(pf);
		}
		return btnSiguiente_Datos;
	}
	private JLabel getLblIngredients2() {
		if (lblIngredients2 == null) {
			lblIngredients2 = new JLabel("");
			lblIngredients2.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/PI03.png")));
		}
		return lblIngredients2;
	}
	private JLabel getLblIngredients2_1() {
		if (lblIngredients2_1 == null) {
			lblIngredients2_1 = new JLabel("");
			lblIngredients2_1.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/BE02.png")));
		}
		return lblIngredients2_1;
	}
	private JPanel getPanelRegistro() {
		if (panelRegistro == null) {
			panelRegistro = new JPanel();
			panelRegistro.setLayout(new BorderLayout(0, 0));
			panelRegistro.add(getPanelDatos(), BorderLayout.CENTER);
			panelRegistro.add(getPanelBtn(), BorderLayout.SOUTH);
			panelRegistro.add(getPanelSpacing(), BorderLayout.EAST);
		}
		return panelRegistro;
	}
	private JPanel getPanelDatos() {
		if (panelDatos == null) {
			panelDatos = new JPanel();
			panelDatos.setBackground(new Color(0, 0, 128));
			panelDatos.setLayout(new GridLayout(6, 1, 0, 0));
			panelDatos.add(getLblDNI());
			panelDatos.add(getTextFieldDNI());
			panelDatos.add(getLblReserva());
			panelDatos.add(getPasswordFieldReserva());
		}
		return panelDatos;
	}
	private JTextField getTextFieldDNI() {
		if (textFieldDNI == null) {
			textFieldDNI = new JTextField();
			textFieldDNI.setFont(new Font("SansSerif", Font.PLAIN, 28));
			textFieldDNI.setColumns(10);
		}
		return textFieldDNI;
	}
	private JLabel getLblDNI() {
		if (lblDNI == null) {
			lblDNI = new JLabel("DNI / NIE:");
			lblDNI.setLabelFor(getTextFieldDNI());
			lblDNI.setDisplayedMnemonic('D');
			lblDNI.setForeground(new Color(255, 255, 255));
			lblDNI.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return lblDNI;
	}
	private JLabel getLblReserva() {
		if (lblReserva == null) {
			lblReserva = new JLabel("N\u00BA / C\u00F3digo de reserva");
			lblReserva.setLabelFor(getPasswordFieldReserva());
			lblReserva.setDisplayedMnemonic('N');
			lblReserva.setForeground(new Color(255, 255, 255));
			lblReserva.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return lblReserva;
	}
	private JPanel getPanelBtn() {
		if (panelBtn == null) {
			panelBtn = new JPanel();
			panelBtn.setBackground(new Color(0, 0, 128));
			panelBtn.setLayout(new GridLayout(1, 0, 0, 0));
			panelBtn.add(getLblPlaceHolder_1());
			panelBtn.add(getLblPlaceHolder());
			panelBtn.add(getBtnSiguiente_Menu());
		}
		return panelBtn;
	}
	private JLabel getLblPlaceHolder() {
		if (lblPlaceHolder == null) {
			lblPlaceHolder = new JLabel("");
			lblPlaceHolder.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder;
	}
	private JButton getBtnSiguiente_Menu() {
		if (btnSiguiente_Menu == null) {
			btnSiguiente_Menu = new JButton("Continuar");
			btnSiguiente_Menu.setForeground(new Color(255, 255, 255));
			btnSiguiente_Menu.setBackground(new Color(50, 205, 50));
			btnSiguiente_Menu.setFont(new Font("SansSerif", Font.PLAIN, 28));
			btnSiguiente_Menu.setMnemonic('C');
			btnSiguiente_Menu.setActionCommand("pnMenu");
			btnSiguiente_Menu.addActionListener(pf);
		}
		return btnSiguiente_Menu;
	}
	private JLabel getLblPlaceHolder_1() {
		if (lblPlaceHolder_1 == null) {
			lblPlaceHolder_1 = new JLabel("");
			lblPlaceHolder_1.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder_1;
	}
	private JPanel getPanelSpacing() {
		if (panelSpacing == null) {
			panelSpacing = new JPanel();
			panelSpacing.setBackground(new Color(0, 0, 128));
			panelSpacing.add(getLblPlaceHolder_1_1());
		}
		return panelSpacing;
	}
	private JLabel getLblPlaceHolder_1_1() {
		if (lblPlaceHolder_1_1 == null) {
			lblPlaceHolder_1_1 = new JLabel("                                                                                                            ");
			lblPlaceHolder_1_1.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder_1_1;
	}
	private JPanel getPanelMenu() {
		if (panelMenu == null) {
			panelMenu = new JPanel();
			panelMenu.setLayout(new BorderLayout(0, 0));
			panelMenu.add(getPanelFiltros(), BorderLayout.WEST);
			panelMenu.add(getScrollPaneProductos(), BorderLayout.CENTER);
			panelMenu.add(getPanelFinalizarMenu(), BorderLayout.SOUTH);
			panelMenu.add(getPanelCarrito(), BorderLayout.EAST);
		}
		return panelMenu;
	}
	private JPanel getPanelFiltros() {
		if (panelFiltros == null) {
			panelFiltros = new JPanel();
			panelFiltros.setLayout(new GridLayout(6, 0, 0, 0));
			panelFiltros.add(getBtnTodos());
			panelFiltros.add(getBtnPizzas());
			panelFiltros.add(getBtnEntrantes());
			panelFiltros.add(getBtnEnsaladas());
			panelFiltros.add(getBtnPostres());
			panelFiltros.add(getBtnBebidas());
		}
		return panelFiltros;
	}
	private JButton getBtnTodos() {
		if (btnTodos == null) {
			btnTodos = new JButton("");
			btnTodos.setBackground(new Color(255, 255, 255));
			btnTodos.setToolTipText("Filtrar - Todos");
			setImagenAdaptada(btnTodos, "/img/bienvenida.png");
		}
		return btnTodos;
	}
	private JButton getBtnPizzas() {
		if (btnPizzas == null) {
			btnPizzas = new JButton("");
			btnPizzas.setBackground(new Color(255, 255, 255));
			btnPizzas.setToolTipText("Filtrar - Pizzas");
			setImagenAdaptada(btnPizzas,"/img/PI01.png");
		}
		return btnPizzas;
	}
	private JButton getBtnEntrantes() {
		if (btnEntrantes == null) {
			btnEntrantes = new JButton("");
			btnEntrantes.setBackground(new Color(255, 255, 255));
			btnEntrantes.setToolTipText("Filtrar - Entrantes");
			setImagenAdaptada(btnEntrantes, "/img/ET02.png");
		}
		return btnEntrantes;
	}
	private JButton getBtnEnsaladas() {
		if (btnEnsaladas == null) {
			btnEnsaladas = new JButton("");
			btnEnsaladas.setBackground(new Color(255, 255, 255));
			btnEnsaladas.setToolTipText("Filtrar - Ensaladas");
			setImagenAdaptada(btnEnsaladas, "/img/EN02.png");
		}
		return btnEnsaladas;
	}
	private JButton getBtnPostres() {
		if (btnPostres == null) {
			btnPostres = new JButton("");
			btnPostres.setBackground(new Color(255, 255, 255));
			btnPostres.setToolTipText("Filtrar - Postres");
			setImagenAdaptada(btnPostres, "/img/PO01.png");
		}
		return btnPostres;
	}
	private JButton getBtnBebidas() {
		if (btnBebidas == null) {
			btnBebidas = new JButton("");
			btnBebidas.setBackground(new Color(255, 255, 255));
			btnBebidas.setToolTipText("Filtrar - Bebidas");
			setImagenAdaptada(btnBebidas, "/img/BE03.png");
		}
		return btnBebidas;
	}
	private void setImagenAdaptada(JButton boton, String rutaImagen){
		 Image imgOriginal = new ImageIcon(getClass().getResource(rutaImagen)).getImage(); 
		 Image imgEscalada = imgOriginal.getScaledInstance((int) (100), (int) (100),Image.SCALE_SMOOTH);
		 //si se quiere reescalar la ventana, este 100 tendria que cambiarse por el width y el height  respectivamente de la imagen para que as√≠ se reescale cada vez que cambias el tama√±o
		 //adem√°s este m√©todo deber√≠a llamarse en el constructor de la ventana mientras se usa un evento componentResized
		 boton.setIcon(new ImageIcon(imgEscalada));
	}
	private JScrollPane getScrollPaneProductos() {
		if (scrollPaneProductos == null) {
			scrollPaneProductos = new JScrollPane();
			scrollPaneProductos.setViewportView(getPanelProductos());
		}
		return scrollPaneProductos;
	}
	private JPanel getPanelProductos() {
		if (panelProductos == null) {
			panelProductos = new JPanel();
			panelProductos.setBackground(new Color(0, 0, 128));
			panelProductos.setLayout(new GridLayout(0, 5, 40, 40));
			generarBotones();
		}
		return panelProductos;
	}

	protected void generarBotones() {
		for(int i=0; i<60; i++) {
			JButton j = new JButton("");
			j.setText("jihdihdiqgduqgudgquy");
			j.setVerticalTextPosition(SwingConstants.BOTTOM); 
			j.setHorizontalTextPosition(SwingConstants.CENTER);
			setImagenAdaptada(j, "/img/logo.png");
			panelProductos.add(j);
		}
	}
	private JPanel getPanelFinalizarMenu() {
		if (panelFinalizarMenu == null) {
			panelFinalizarMenu = new JPanel();
			panelFinalizarMenu.setBackground(new Color(128, 0, 0));
			panelFinalizarMenu.setLayout(new GridLayout(0, 5, 0, 0));
			panelFinalizarMenu.add(getLblPlaceHolderMenu());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_3());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_1());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_2());
			panelFinalizarMenu.add(getBtnFinalizar());
		}
		return panelFinalizarMenu;
	}
	private JLabel getLblPlaceHolderMenu() {
		if (lblPlaceHolderMenu == null) {
			lblPlaceHolderMenu = new JLabel("");
		}
		return lblPlaceHolderMenu;
	}
	private JButton getBtnFinalizar() {
		if (btnFinalizar == null) {
			btnFinalizar = new JButton("Finalizar");
			btnFinalizar.setMnemonic('F');
			btnFinalizar.setForeground(new Color(255, 255, 255));
			btnFinalizar.setBackground(new Color(50, 205, 50));
			btnFinalizar.setFont(new Font("SansSerif", Font.PLAIN, 28));
			btnFinalizar.setActionCommand("pnPagar");
			btnFinalizar.addActionListener(pf);
		}
		return btnFinalizar;
	}
	private JLabel getLblPlaceHolderMenu_2() {
		if (lblPlaceHolderMenu_2 == null) {
			lblPlaceHolderMenu_2 = new JLabel("");
		}
		return lblPlaceHolderMenu_2;
	}
	private JLabel getLblPlaceHolderMenu_1() {
		if (lblPlaceHolderMenu_1 == null) {
			lblPlaceHolderMenu_1 = new JLabel("");
		}
		return lblPlaceHolderMenu_1;
	}
	private JLabel getLblPlaceHolderMenu_3() {
		if (lblPlaceHolderMenu_3 == null) {
			lblPlaceHolderMenu_3 = new JLabel("");
		}
		return lblPlaceHolderMenu_3;
	}
	private JPanel getPanelCarrito() {
		if (panelCarrito == null) {
			panelCarrito = new JPanel();
			panelCarrito.setBackground(new Color(128, 0, 0));
			panelCarrito.setLayout(new BorderLayout(0, 0));
			panelCarrito.add(getBtnCarrito(), BorderLayout.NORTH);
			panelCarrito.add(getScrollPaneCarrito());
		}
		return panelCarrito;
	}
	private JButton getBtnCarrito() {
		if (btnCarrito == null) {
			btnCarrito = new JButton("");
			btnCarrito.setToolTipText("Mostrar/Ocultar Carrito");
			btnCarrito.setBackground(new Color(255, 255, 255));
			setImagenAdaptada(btnCarrito,"/img/carrito.png");
			btnCarrito.addActionListener(pCrt);
		}
		return btnCarrito;
	}
	private JScrollPane getScrollPaneCarrito() {
		if (scrollPaneCarrito == null) {
			scrollPaneCarrito = new JScrollPane();
			scrollPaneCarrito.setEnabled(false);
			scrollPaneCarrito.setViewportView(getTxtAreaCarrito());
		}
		return scrollPaneCarrito;
	}
	private JTextArea getTxtAreaCarrito() {
		if (txtAreaCarrito == null) {
			txtAreaCarrito = new JTextArea();
			txtAreaCarrito.setBackground(new Color(255, 255, 255));
			txtAreaCarrito.setEditable(false);
			txtAreaCarrito.setVisible(false);
			txtAreaCarrito.setText("jijdijdwjdw\r\ndmqojqowjdoqwjdoqw\r\nfdoqkdoqk");
		}
		return txtAreaCarrito;
	}
	private JPasswordField getPasswordFieldReserva() {
		if (passwordFieldReserva == null) {
			passwordFieldReserva = new JPasswordField();
			passwordFieldReserva.setBackground(new Color(255, 255, 255));
			passwordFieldReserva.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return passwordFieldReserva;
	}
	private JPanel getPanelPago() {
		if (panelPago == null) {
			panelPago = new JPanel();
			panelPago.setLayout(new GridLayout(0, 2, 0, 0));
			panelPago.add(getScrollPaneListaPedidos());
			panelPago.add(getPanelOpcionesFinales());
		}
		return panelPago;
	}
	private JScrollPane getScrollPaneListaPedidos() {
		if (scrollPaneListaPedidos == null) {
			scrollPaneListaPedidos = new JScrollPane();
			scrollPaneListaPedidos.setViewportView(getTextAreaPedidos());
		}
		return scrollPaneListaPedidos;
	}
	private JPanel getPanelOpcionesFinales() {
		if (panelOpcionesFinales == null) {
			panelOpcionesFinales = new JPanel();
			panelOpcionesFinales.setBackground(new Color(0, 0, 128));
			panelOpcionesFinales.setLayout(new BorderLayout(0, 0));
			panelOpcionesFinales.add(getPanelMetodoPago(), BorderLayout.CENTER);
			panelOpcionesFinales.add(getPanelEleccionJugar(), BorderLayout.NORTH);
			panelOpcionesFinales.add(getPanelBtnFinales(), BorderLayout.SOUTH);
		}
		return panelOpcionesFinales;
	}
	private JTextArea getTextAreaPedidos() {
		if (textAreaPedidos == null) {
			textAreaPedidos = new JTextArea();
			textAreaPedidos.setText("ojdowjdowjdowdowjdo\r\ndojdodjwojdowjdm\r\ndmwdjowjdo");
			textAreaPedidos.setFont(new Font("SansSerif", Font.PLAIN, 21));
		}
		return textAreaPedidos;
	}
	private JPanel getPanelMetodoPago() {
		if (panelMetodoPago == null) {
			panelMetodoPago = new JPanel();
			panelMetodoPago.setBackground(new Color(0, 0, 128));
			panelMetodoPago.setLayout(new GridLayout(4, 1, 0, 0));
			panelMetodoPago.add(getLblOpcionesPago());
			panelMetodoPago.add(getRdbtnTarjeta());
			panelMetodoPago.add(getRdbtnEfectivo());
		}
		return panelMetodoPago;
	}
	private JPanel getPanelEleccionJugar() {
		if (panelEleccionJugar == null) {
			panelEleccionJugar = new JPanel();
			panelEleccionJugar.setBackground(new Color(0, 0, 128));
			panelEleccionJugar.setLayout(new GridLayout(3, 1, 0, 0));
			panelEleccionJugar.add(getLblOpcionesJugar());
			panelEleccionJugar.add(getRdbtnJugar());
			panelEleccionJugar.add(getRdbtnNoJugar());
		}
		return panelEleccionJugar;
	}
	private JLabel getLblOpcionesJugar() {
		if (lblOpcionesJugar == null) {
			lblOpcionesJugar = new JLabel("\u00BFQuiere jugar para descuentos?");
			lblOpcionesJugar.setForeground(new Color(255, 255, 255));
			lblOpcionesJugar.setFont(new Font("SansSerif", Font.BOLD, 27));
		}
		return lblOpcionesJugar;
	}
	private JRadioButton getRdbtnJugar() {
		if (rdbtnJugar == null) {
			rdbtnJugar = new JRadioButton("Jugar");
			rdbtnJugar.setBackground(new Color(0, 0, 128));
			rdbtnJugar.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnJugar.setSelected(true);
			rdbtnJugar.setMnemonic('J');
			buttonGroupJugar.add(rdbtnJugar);
			rdbtnJugar.setForeground(new Color(255, 255, 255));
		}
		return rdbtnJugar;
	}
	private JRadioButton getRdbtnNoJugar() {
		if (rdbtnNoJugar == null) {
			rdbtnNoJugar = new JRadioButton("No jugar");
			rdbtnNoJugar.setBackground(new Color(0, 0, 128));
			rdbtnNoJugar.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnNoJugar.setMnemonic('N');
			buttonGroupJugar.add(rdbtnNoJugar);
			rdbtnNoJugar.setForeground(new Color(255, 255, 255));
		}
		return rdbtnNoJugar;
	}
	private JLabel getLblOpcionesPago() {
		if (lblOpcionesPago == null) {
			lblOpcionesPago = new JLabel("\u00BFC\u00F3mo desea pagar?");
			lblOpcionesPago.setHorizontalAlignment(SwingConstants.LEFT);
			lblOpcionesPago.setFont(new Font("SansSerif", Font.BOLD, 27));
			lblOpcionesPago.setForeground(new Color(255, 255, 255));
		}
		return lblOpcionesPago;
	}
	private JRadioButton getRdbtnTarjeta() {
		if (rdbtnTarjeta == null) {
			rdbtnTarjeta = new JRadioButton("Tarjeta");
			rdbtnTarjeta.setBackground(new Color(0, 0, 128));
			rdbtnTarjeta.setMnemonic('T');
			rdbtnTarjeta.setSelected(true);
			buttonGroupPago.add(rdbtnTarjeta);
			rdbtnTarjeta.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnTarjeta.setForeground(new Color(255, 255, 255));
			rdbtnTarjeta.setHorizontalAlignment(SwingConstants.LEFT);
		}
		return rdbtnTarjeta;
	}
	private JRadioButton getRdbtnEfectivo() {
		if (rdbtnEfectivo == null) {
			rdbtnEfectivo = new JRadioButton("Efectivo");
			rdbtnEfectivo.setBackground(new Color(0, 0, 128));
			rdbtnEfectivo.setMnemonic('E');
			buttonGroupPago.add(rdbtnEfectivo);
			rdbtnEfectivo.setForeground(new Color(255, 255, 255));
			rdbtnEfectivo.setFont(new Font("SansSerif", Font.PLAIN, 19));
		}
		return rdbtnEfectivo;
	}
	private JPanel getPanelBtnFinales() {
		if (panelBtnFinales == null) {
			panelBtnFinales = new JPanel();
			panelBtnFinales.setLayout(new GridLayout(0, 2, 0, 0));
			panelBtnFinales.add(getBtnCancelar());
			panelBtnFinales.add(getBtnFinalizaryPagar());
		}
		return panelBtnFinales;
	}
	private JButton getBtnCancelar() {
		if (btnCancelar == null) {
			btnCancelar = new JButton("Cancelar");
			btnCancelar.setForeground(new Color(255, 255, 255));
			btnCancelar.setBackground(new Color(255, 0, 0));
			btnCancelar.setFont(new Font("SansSerif", Font.PLAIN, 27));
			btnCancelar.setMnemonic('C');
			btnCancelar.setActionCommand("pnMenu");
			btnCancelar.addActionListener(pf);
		}
		return btnCancelar;
	}
	private JButton getBtnFinalizaryPagar() {
		if (btnFinalizaryPagar == null) {
			btnFinalizaryPagar = new JButton("Finalizar y pagar");
			btnFinalizaryPagar.setMnemonic('F');
			btnFinalizaryPagar.setBackground(new Color(50, 205, 50));
			btnFinalizaryPagar.setForeground(new Color(255, 255, 255));
			btnFinalizaryPagar.setFont(new Font("SansSerif", Font.PLAIN, 23));
		}
		return btnFinalizaryPagar;
	}
	private JMenuBar getMenuBar_4() {
		if (menuBar == null) {
			menuBar = new JMenuBar();
			menuBar.add(getMenu_1());
			menuBar.add(getMenu_2());
		}
		return menuBar;
	}
	private JMenu getMenu_1() {
		if (mnOptions == null) {
			mnOptions = new JMenu("Opciones");
			mnOptions.setMnemonic('O');
			mnOptions.add(getMntmNuevaSesion());
			mnOptions.add(getSeparator());
			mnOptions.add(getMntmSalida());
		}
		return mnOptions;
	}
	private JMenuItem getMntmSalida() {
		if (mntmSalida == null) {
			mntmSalida = new JMenuItem("Salida");
			mntmSalida.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_X, InputEvent.CTRL_DOWN_MASK));
			mntmSalida.addActionListener(pE);
		}
		return mntmSalida;
	}
	private JMenuItem getMntmNuevaSesion() {
		if (mntmNuevaSesion == null) {
			mntmNuevaSesion = new JMenuItem("Nueva Sesion");
			mntmNuevaSesion.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, InputEvent.CTRL_DOWN_MASK));
		}
		return mntmNuevaSesion;
	}
	private JSeparator getSeparator() {
		if (separator == null) {
			separator = new JSeparator();
		}
		return separator;
	}
	private JMenu getMenu_2() {
		if (mnAyuda == null) {
			mnAyuda = new JMenu("Ayuda");
			mnAyuda.setMnemonic('A');
			mnAyuda.add(getMntmAyuda());
		}
		return mnAyuda;
	}
	private JMenuItem getMntmAyuda() {
		if (mntmAyuda == null) {
			mntmAyuda = new JMenuItem("Abrir men\u00FA de ayuda");
			mntmAyuda.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F1, InputEvent.CTRL_DOWN_MASK));
		}
		return mntmAyuda;
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2024-12-25 21:00:55.300
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2024-12-25 21:00:55.300
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-25 21:06:01.996
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-25 21:25:23.055
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
!SESSION 2024-12-29 20:19:01.259 -----------------------------------------------
eclipse.buildId=4.23.0.I20220308-0310
java.version=17.0.2
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=es_ES
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2024-12-29 20:19:19.560
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2024-12-29 20:19:19.560
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@a859c5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@37083af6,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2024-12-29 20:19:19.560
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@55e4dd68,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@28c7fd9d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2024-12-29 20:19:31.231
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\El√≠as'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.help.base 2 0 2024-12-29 21:03:21.478
!MESSAGE Unable to consume Lucene index from bundle 'org.eclipse.jdt.doc.user_3.15.1300.v20220302-1215 [219]'. The index should be rebuilt with Lucene 8.4.1

!ENTRY org.eclipse.help.base 2 0 2024-12-29 21:03:21.482
!MESSAGE Unable to consume Lucene index from bundle 'org.eclipse.pde.doc.user_3.14.1500.v20220302-1713 [449]'. The index should be rebuilt with Lucene 8.4.1

!ENTRY org.eclipse.help.base 2 0 2024-12-29 21:03:21.486
!MESSAGE Unable to consume Lucene index from bundle 'org.eclipse.platform.doc.user_4.23.0.v20220302-1425 [334]'. The index should be rebuilt with Lucene 8.4.1

!ENTRY org.eclipse.jdt.core 4 4 2024-12-29 22:24:34.539
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package uo.cpm.modulo.ui;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import java.awt.CardLayout;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.BorderLayout;
import javax.swing.JLabel;
import javax.swing.JButton;
import javax.swing.BoxLayout;
import java.awt.GridLayout;
import java.awt.Image;

import javax.swing.ImageIcon;
import java.awt.Color;
import java.awt.Font;
import javax.swing.border.LineBorder;

import uo.cpm.modulo.model.Producto;
import uo.cpm.modulo.service.Pizzeria;

import javax.swing.SwingConstants;
import java.awt.FlowLayout;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.Component;
import java.awt.Dimension;

import javax.swing.JTextField;
import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.InputEvent;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JPasswordField;
import javax.swing.JSplitPane;
import javax.swing.JRadioButton;
import javax.swing.ButtonGroup;
import javax.swing.JSeparator;

public class VentanaPrincipal extends JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private JPanel contentPane;
	private JPanel panelInicio;
	private JPanel panelBienvenida;
	private JPanel panelIdiomas;
	private JButton btnSpanish;
	private JLabel lblIngredients;
	private JButton btnEnglish;
	private JButton btnFrench;
	private JButton btnItalian;
	private JPanel panelSaludo;
	private JLabel lblWelcome;
	private JButton btnSiguiente_Datos;
	private JLabel lblIngredients2;
	private JLabel lblIngredients2_1;
	private ProcessFrame pf = new  ProcessFrame();
	private JPanel panelRegistro;
	private JPanel panelDatos;
	private JTextField textFieldDNI;
	private JLabel lblDNI;
	private JLabel lblReserva;
	private JPanel panelBtn;
	private JLabel lblPlaceHolder;
	private JButton btnSiguiente_Menu;
	private JLabel lblPlaceHolder_1;
	private JPanel panelSpacing;
	private JLabel lblPlaceHolder_1_1;
	private JPanel panelMenu;
	private JPanel panelFiltros;
	private JButton btnTodos;
	private JButton btnPizzas;
	private JButton btnEntrantes;
	private JButton btnEnsaladas;
	private JButton btnPostres;
	private JButton btnBebidas;
	private JScrollPane scrollPaneProductos;
	private JPanel panelProductos;
	private JPanel panelFinalizarMenu;
	private JLabel lblPlaceHolderMenu;
	private JButton btnFinalizar;
	private JLabel lblPlaceHolderMenu_2;
	private JLabel lblPlaceHolderMenu_1;
	private JLabel lblPlaceHolderMenu_3;
	private JPanel panelCarrito;
	private JButton btnCarrito;
	private JScrollPane scrollPaneCarrito;
	private JTextArea txtAreaCarrito;
	private ProcessCart pCrt = new ProcessCart();
	private JPasswordField passwordFieldReserva;
	private JPanel panelPago;
	private JScrollPane scrollPaneListaPedidos;
	private JPanel panelOpcionesFinales;
	private JTextArea textAreaPedidos;
	private JPanel panelMetodoPago;
	private JPanel panelEleccionJugar;
	private JLabel lblOpcionesJugar;
	private JRadioButton rdbtnJugar;
	private JRadioButton rdbtnNoJugar;
	private final ButtonGroup buttonGroupJugar = new ButtonGroup();
	private JLabel lblOpcionesPago;
	private JRadioButton rdbtnTarjeta;
	private JRadioButton rdbtnEfectivo;
	private JPanel panelBtnFinales;
	private JButton btnCancelar;
	private JButton btnFinalizaryPagar;
	private final ButtonGroup buttonGroupPago = new ButtonGroup();
	private JMenuBar menuBar;
	private JMenu mnOptions;
	private JMenuItem mntmSalida;
	private JMenuItem mntmNuevaSesion;
	private JSeparator separator;
	private JMenu mnAyuda;
	private JMenuItem mntmAyuda;
	private ProcessExit pE = new ProcessExit();
	private ProcessWindowHelpFocus pWHF = new  ProcessWindowHelpFocus();
	private Pizzeria pz;
	private ProcessFilters pf = new 
	class ProcessFilters implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			int filter = Integer.parseInt(e.getActionCommand());
			quitarBotonesMenu();
			generarBotonesMenu(filter);
			
		}
		
	}
	class ProcessWindowHelpFocus extends WindowAdapter{
		@Override
		public void windowOpened(WindowEvent e) {
			getBtnSiguiente_Datos().requestFocus();
		}
	}
	class ProcessExit implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			confirmChoice();
			
		}

		
		
	}
	protected void confirmChoice() {
		if(JOptionPane.showConfirmDialog(null, "¬øEst√°s seguro/a de que quieres salir de la aplicaci√≥n?")==JOptionPane.YES_OPTION) {
			System.exit(0);
		}
	}
	class ProcessFrame implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			changeFrame(e);
			
		}

		
		
	}
	protected void changeFrame(ActionEvent e) {
		String frame = e.getActionCommand();
		((CardLayout)getContentPane().getLayout()).show(getContentPane(), frame);
		setTitle("Uniovi's: " + frame);
	}
	class ProcessCart implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			showShoppingCart();
			
		}

		
		
	}
	protected void showShoppingCart() {
		if(getTxtAreaCarrito().isVisible()) {
			getTxtAreaCarrito().setVisible(false);
		}else {
			getTxtAreaCarrito().setVisible(true);
		}
	}

	/**
	 * Create the frame.
	 */
	public VentanaPrincipal(Pizzeria pz) {
		this.pz = pz;
		addWindowListener(pWHF);
		setMinimumSize(new Dimension(550, 350));
		setTitle("Uniovi's ");
		setIconImage(Toolkit.getDefaultToolkit().getImage(VentanaPrincipal.class.getResource("/img/logo.png")));
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 900, 620);
		setLocationRelativeTo(null);
		setJMenuBar(getMenuBar_4());
		contentPane = new JPanel();
		contentPane.setBackground(new Color(255, 0, 0));
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(new CardLayout(0, 0));
		contentPane.add(getPanelInicio(), "pnInicio");
		contentPane.add(getPanelRegistro(), "Datos de Registro");
		contentPane.add(getPanelMenu(), "Menu");
		contentPane.add(getPanelPago(), "Revisar y Pagar");
	}

	private JPanel getPanelInicio() {
		if (panelInicio == null) {
			panelInicio = new JPanel();
			panelInicio.setBackground(new Color(255, 0, 0));
			panelInicio.setLayout(new BorderLayout(0, 0));
			panelInicio.add(getPanelBienvenida(), BorderLayout.CENTER);
			panelInicio.add(getPanelIdiomas(), BorderLayout.NORTH);
			panelInicio.add(getPanelSaludo(), BorderLayout.SOUTH);
		}
		return panelInicio;
	}
	private JPanel getPanelBienvenida() {
		if (panelBienvenida == null) {
			panelBienvenida = new JPanel();
			panelBienvenida.setBackground(new Color(0, 0, 139));
			panelBienvenida.setLayout(new BorderLayout(0, 0));
			panelBienvenida.add(getLblIngredients(), BorderLayout.CENTER);
			panelBienvenida.add(getLblIngredients2(), BorderLayout.WEST);
			panelBienvenida.add(getLblIngredients2_1(), BorderLayout.EAST);
		}
		return panelBienvenida;
	}
	private JPanel getPanelIdiomas() {
		if (panelIdiomas == null) {
			panelIdiomas = new JPanel();
			panelIdiomas.setBackground(new Color(255, 0, 0));
			panelIdiomas.setLayout(new GridLayout(0, 4, 0, 0));
			panelIdiomas.add(getBtnSpanish());
			panelIdiomas.add(getBtnEnglish());
			panelIdiomas.add(getBtnFrench());
			panelIdiomas.add(getBtnItalian());
		}
		return panelIdiomas;
	}
	private JButton getBtnSpanish() {
		if (btnSpanish == null) {
			btnSpanish = new JButton("");
			btnSpanish.setBackground(new Color(255, 255, 255));
			btnSpanish.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/es.png")));
		}
		return btnSpanish;
	}
	private JLabel getLblIngredients() {
		if (lblIngredients == null) {
			lblIngredients = new JLabel("");
			lblIngredients.setHorizontalAlignment(SwingConstants.CENTER);
			lblIngredients.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/bienvenida.png")));
		}
		return lblIngredients;
	}
	private JButton getBtnEnglish() {
		if (btnEnglish == null) {
			btnEnglish = new JButton("");
			btnEnglish.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/en.png")));
			btnEnglish.setBackground(Color.WHITE);
		}
		return btnEnglish;
	}
	private JButton getBtnFrench() {
		if (btnFrench == null) {
			btnFrench = new JButton("");
			btnFrench.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/fr.png")));
			btnFrench.setBackground(Color.WHITE);
		}
		return btnFrench;
	}
	private JButton getBtnItalian() {
		if (btnItalian == null) {
			btnItalian = new JButton("");
			btnItalian.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/it.png")));
			btnItalian.setBackground(Color.WHITE);
		}
		return btnItalian;
	}
	private JPanel getPanelSaludo() {
		if (panelSaludo == null) {
			panelSaludo = new JPanel();
			panelSaludo.setBackground(new Color(255, 0, 0));
			panelSaludo.setLayout(new GridLayout(0, 2, 0, 0));
			panelSaludo.add(getLblWelcome_1());
			panelSaludo.add(getBtnSiguiente_Datos());
		}
		return panelSaludo;
	}
	private JLabel getLblWelcome_1() {
		if (lblWelcome == null) {
			lblWelcome = new JLabel("\u00A1Bienvenido a Uniovi's!");
			lblWelcome.setHorizontalAlignment(SwingConstants.CENTER);
			lblWelcome.setForeground(Color.WHITE);
			lblWelcome.setFont(new Font("Dialog", Font.BOLD, 28));
			lblWelcome.setBorder(new LineBorder(new Color(0, 0, 0), 0));
			lblWelcome.setBackground(Color.WHITE);
		}
		return lblWelcome;
	}
	private JButton getBtnSiguiente_Datos() {
		if (btnSiguiente_Datos == null) {
			btnSiguiente_Datos = new JButton("Continuar");
			btnSiguiente_Datos.setAlignmentX(Component.RIGHT_ALIGNMENT);
			btnSiguiente_Datos.setBackground(new Color(50, 205, 50));
			btnSiguiente_Datos.setForeground(new Color(255, 255, 255));
			btnSiguiente_Datos.setFont(new Font("SansSerif", Font.PLAIN, 24));
			btnSiguiente_Datos.setMnemonic('C');
			btnSiguiente_Datos.setBorder(new LineBorder(new Color(0, 0, 0), 4, true));
			btnSiguiente_Datos.setActionCommand("Datos de Registro");
			btnSiguiente_Datos.addActionListener(pf);
		}
		return btnSiguiente_Datos;
	}
	private JLabel getLblIngredients2() {
		if (lblIngredients2 == null) {
			lblIngredients2 = new JLabel("");
			lblIngredients2.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/PI03.png")));
		}
		return lblIngredients2;
	}
	private JLabel getLblIngredients2_1() {
		if (lblIngredients2_1 == null) {
			lblIngredients2_1 = new JLabel("");
			lblIngredients2_1.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/BE02.png")));
		}
		return lblIngredients2_1;
	}
	private JPanel getPanelRegistro() {
		if (panelRegistro == null) {
			panelRegistro = new JPanel();
			panelRegistro.setLayout(new BorderLayout(0, 0));
			panelRegistro.add(getPanelDatos(), BorderLayout.CENTER);
			panelRegistro.add(getPanelBtn(), BorderLayout.SOUTH);
			panelRegistro.add(getPanelSpacing(), BorderLayout.EAST);
		}
		return panelRegistro;
	}
	private JPanel getPanelDatos() {
		if (panelDatos == null) {
			panelDatos = new JPanel();
			panelDatos.setBackground(new Color(0, 0, 128));
			panelDatos.setLayout(new GridLayout(6, 1, 0, 0));
			panelDatos.add(getLblDNI());
			panelDatos.add(getTextFieldDNI());
			panelDatos.add(getLblReserva());
			panelDatos.add(getPasswordFieldReserva());
		}
		return panelDatos;
	}
	private JTextField getTextFieldDNI() {
		if (textFieldDNI == null) {
			textFieldDNI = new JTextField();
			textFieldDNI.setFont(new Font("SansSerif", Font.PLAIN, 28));
			textFieldDNI.setColumns(10);
		}
		return textFieldDNI;
	}
	private JLabel getLblDNI() {
		if (lblDNI == null) {
			lblDNI = new JLabel("DNI / NIE:");
			lblDNI.setLabelFor(getTextFieldDNI());
			lblDNI.setDisplayedMnemonic('D');
			lblDNI.setForeground(new Color(255, 255, 255));
			lblDNI.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return lblDNI;
	}
	private JLabel getLblReserva() {
		if (lblReserva == null) {
			lblReserva = new JLabel("N\u00BA / C\u00F3digo de reserva");
			lblReserva.setLabelFor(getPasswordFieldReserva());
			lblReserva.setDisplayedMnemonic('N');
			lblReserva.setForeground(new Color(255, 255, 255));
			lblReserva.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return lblReserva;
	}
	private JPanel getPanelBtn() {
		if (panelBtn == null) {
			panelBtn = new JPanel();
			panelBtn.setBackground(new Color(0, 0, 128));
			panelBtn.setLayout(new GridLayout(1, 0, 0, 0));
			panelBtn.add(getLblPlaceHolder_1());
			panelBtn.add(getLblPlaceHolder());
			panelBtn.add(getBtnSiguiente_Menu());
		}
		return panelBtn;
	}
	private JLabel getLblPlaceHolder() {
		if (lblPlaceHolder == null) {
			lblPlaceHolder = new JLabel("");
			lblPlaceHolder.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder;
	}
	private JButton getBtnSiguiente_Menu() {
		if (btnSiguiente_Menu == null) {
			btnSiguiente_Menu = new JButton("Continuar");
			btnSiguiente_Menu.setForeground(new Color(255, 255, 255));
			btnSiguiente_Menu.setBackground(new Color(50, 205, 50));
			btnSiguiente_Menu.setFont(new Font("SansSerif", Font.PLAIN, 28));
			btnSiguiente_Menu.setMnemonic('C');
			btnSiguiente_Menu.setActionCommand("Menu");
			btnSiguiente_Menu.addActionListener(pf);
		}
		return btnSiguiente_Menu;
	}
	private JLabel getLblPlaceHolder_1() {
		if (lblPlaceHolder_1 == null) {
			lblPlaceHolder_1 = new JLabel("");
			lblPlaceHolder_1.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder_1;
	}
	private JPanel getPanelSpacing() {
		if (panelSpacing == null) {
			panelSpacing = new JPanel();
			panelSpacing.setBackground(new Color(0, 0, 128));
			panelSpacing.add(getLblPlaceHolder_1_1());
		}
		return panelSpacing;
	}
	private JLabel getLblPlaceHolder_1_1() {
		if (lblPlaceHolder_1_1 == null) {
			lblPlaceHolder_1_1 = new JLabel("                                                                                                            ");
			lblPlaceHolder_1_1.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder_1_1;
	}
	private JPanel getPanelMenu() {
		if (panelMenu == null) {
			panelMenu = new JPanel();
			panelMenu.setLayout(new BorderLayout(0, 0));
			panelMenu.add(getPanelFiltros(), BorderLayout.WEST);
			panelMenu.add(getScrollPaneProductos(), BorderLayout.CENTER);
			panelMenu.add(getPanelFinalizarMenu(), BorderLayout.SOUTH);
			panelMenu.add(getPanelCarrito(), BorderLayout.EAST);
		}
		return panelMenu;
	}
	private JPanel getPanelFiltros() {
		if (panelFiltros == null) {
			panelFiltros = new JPanel();
			panelFiltros.setLayout(new GridLayout(6, 0, 0, 0));
			panelFiltros.add(getBtnTodos());
			panelFiltros.add(getBtnPizzas());
			panelFiltros.add(getBtnEntrantes());
			panelFiltros.add(getBtnEnsaladas());
			panelFiltros.add(getBtnPostres());
			panelFiltros.add(getBtnBebidas());
		}
		return panelFiltros;
	}
	private JButton getBtnTodos() {
		if (btnTodos == null) {
			btnTodos = new JButton("");
			btnTodos.setText("Todos");
			btnTodos.setVerticalTextPosition(SwingConstants.TOP);
			btnTodos.setHorizontalTextPosition(SwingConstants.CENTER);
			btnTodos.setBackground(new Color(255, 255, 255));
			btnTodos.setToolTipText("Filtrar - Todos");
			setImagenAdaptada(btnTodos, "/img/bienvenida.png");
		}
		return btnTodos;
	}
	private JButton getBtnPizzas() {
		if (btnPizzas == null) {
			btnPizzas = new JButton("");
			btnPizzas.setText("Pizzas");
			btnPizzas.setVerticalTextPosition(SwingConstants.TOP);
			btnPizzas.setHorizontalTextPosition(SwingConstants.CENTER);
			btnPizzas.setBackground(new Color(255, 255, 255));
			btnPizzas.setToolTipText("Filtrar - Pizzas");
			setImagenAdaptada(btnPizzas,"/img/PI01.png");
		}
		return btnPizzas;
	}
	private JButton getBtnEntrantes() {
		if (btnEntrantes == null) {
			btnEntrantes = new JButton("");
			btnEntrantes.setText("Entrantes");
			btnEntrantes.setVerticalTextPosition(SwingConstants.TOP);
			btnEntrantes.setHorizontalTextPosition(SwingConstants.CENTER);
			btnEntrantes.setBackground(new Color(255, 255, 255));
			btnEntrantes.setToolTipText("Filtrar - Entrantes");
			setImagenAdaptada(btnEntrantes, "/img/ET02.png");
		}
		return btnEntrantes;
	}
	private JButton getBtnEnsaladas() {
		if (btnEnsaladas == null) {
			btnEnsaladas = new JButton("Ensaladas");
			btnEnsaladas.setText("Ensaladas");
			btnEnsaladas.setVerticalTextPosition(SwingConstants.TOP);
			btnEnsaladas.setHorizontalTextPosition(SwingConstants.CENTER);
			btnEnsaladas.setBackground(new Color(255, 255, 255));
			btnEnsaladas.setToolTipText("Filtrar - Ensaladas");
			setImagenAdaptada(btnEnsaladas, "/img/EN02.png");
		}
		return btnEnsaladas;
	}
	private JButton getBtnPostres() {
		if (btnPostres == null) {
			btnPostres = new JButton("");
			btnPostres.setText("Postres");
			btnPostres.setBackground(new Color(255, 255, 255));
			btnPostres.setVerticalTextPosition(SwingConstants.TOP);
			btnPostres.setHorizontalTextPosition(SwingConstants.CENTER);
			btnPostres.setToolTipText("Filtrar - Postres");
			setImagenAdaptada(btnPostres, "/img/PO01.png");
		}
		return btnPostres;
	}
	private JButton getBtnBebidas() {
		if (btnBebidas == null) {
			btnBebidas = new JButton("");
			btnBebidas.setText("Bebidas");
			btnBebidas.setVerticalTextPosition(SwingConstants.TOP);
			btnBebidas.setHorizontalTextPosition(SwingConstants.CENTER);
			btnBebidas.setBackground(new Color(255, 255, 255));
			btnBebidas.setToolTipText("Filtrar - Bebidas");
			setImagenAdaptada(btnBebidas, "/img/BE03.png");
		}
		return btnBebidas;
	}
	private void setImagenAdaptada(JButton boton, String rutaImagen){
		 Image imgOriginal = new ImageIcon(getClass().getResource(rutaImagen)).getImage(); 
		 Image imgEscalada = imgOriginal.getScaledInstance((int) (100), (int) (100),Image.SCALE_SMOOTH);
		 //si se quiere reescalar la ventana, este 100 tendria que cambiarse por el width y el height  respectivamente de la imagen para que as√≠ se reescale cada vez que cambias el tama√±o
		 //adem√°s este m√©todo deber√≠a llamarse en el constructor de la ventana mientras se usa un evento componentResized
		 boton.setIcon(new ImageIcon(imgEscalada));
	}
	private JScrollPane getScrollPaneProductos() {
		if (scrollPaneProductos == null) {
			scrollPaneProductos = new JScrollPane();
			scrollPaneProductos.setViewportView(getPanelProductos());
		}
		return scrollPaneProductos;
	}
	private JPanel getPanelProductos() {
		if (panelProductos == null) {
			panelProductos = new JPanel();
			panelProductos.setBackground(new Color(0, 0, 128));
			panelProductos.setLayout(new GridLayout(0, 4, 40, 40));
			generarBotonesMenu(pz.TODOS);
		}
		return panelProductos;
	}
	private void quitarBotonesMenu() {
		getPanelProductos().removeAll();
		getPanelProductos().repaint();
	}
	protected void generarBotonesMenu(int filter) {
		Producto[] list = pz.typeOfFilter(filter);
		for(int i=0; i<list.length; i++) {
			JButton j = new JButton("");
			j.setText(list[i].toStringMenu());
			j.setVerticalTextPosition(SwingConstants.BOTTOM); 
			j.setHorizontalTextPosition(SwingConstants.CENTER);
			setImagenAdaptada(j, "/img/" +list[i].getCode() + ".png");
			if(i==0) {
				j.setBorder(new LineBorder(Color.red, 4));
				j.setText("¬°Pizza del d√≠a! - " + j.getText());
			}
			panelProductos.add(j);
		}
	}
	private JPanel getPanelFinalizarMenu() {
		if (panelFinalizarMenu == null) {
			panelFinalizarMenu = new JPanel();
			panelFinalizarMenu.setBackground(new Color(128, 0, 0));
			panelFinalizarMenu.setLayout(new GridLayout(0, 5, 0, 0));
			panelFinalizarMenu.add(getLblPlaceHolderMenu());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_3());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_1());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_2());
			panelFinalizarMenu.add(getBtnFinalizar());
		}
		return panelFinalizarMenu;
	}
	private JLabel getLblPlaceHolderMenu() {
		if (lblPlaceHolderMenu == null) {
			lblPlaceHolderMenu = new JLabel("");
		}
		return lblPlaceHolderMenu;
	}
	private JButton getBtnFinalizar() {
		if (btnFinalizar == null) {
			btnFinalizar = new JButton("Finalizar");
			btnFinalizar.setMnemonic('F');
			btnFinalizar.setForeground(new Color(255, 255, 255));
			btnFinalizar.setBackground(new Color(50, 205, 50));
			btnFinalizar.setFont(new Font("SansSerif", Font.PLAIN, 28));
			btnFinalizar.setActionCommand("Revisar y Pagar");
			btnFinalizar.addActionListener(pf);
		}
		return btnFinalizar;
	}
	private JLabel getLblPlaceHolderMenu_2() {
		if (lblPlaceHolderMenu_2 == null) {
			lblPlaceHolderMenu_2 = new JLabel("");
		}
		return lblPlaceHolderMenu_2;
	}
	private JLabel getLblPlaceHolderMenu_1() {
		if (lblPlaceHolderMenu_1 == null) {
			lblPlaceHolderMenu_1 = new JLabel("");
		}
		return lblPlaceHolderMenu_1;
	}
	private JLabel getLblPlaceHolderMenu_3() {
		if (lblPlaceHolderMenu_3 == null) {
			lblPlaceHolderMenu_3 = new JLabel("");
		}
		return lblPlaceHolderMenu_3;
	}
	private JPanel getPanelCarrito() {
		if (panelCarrito == null) {
			panelCarrito = new JPanel();
			panelCarrito.setBackground(new Color(128, 0, 0));
			panelCarrito.setLayout(new BorderLayout(0, 0));
			panelCarrito.add(getBtnCarrito(), BorderLayout.NORTH);
			panelCarrito.add(getScrollPaneCarrito());
		}
		return panelCarrito;
	}
	private JButton getBtnCarrito() {
		if (btnCarrito == null) {
			btnCarrito = new JButton("");
			btnCarrito.setToolTipText("Mostrar/Ocultar Carrito");
			btnCarrito.setBackground(new Color(255, 255, 255));
			setImagenAdaptada(btnCarrito,"/img/carrito.png");
			btnCarrito.addActionListener(pCrt);
		}
		return btnCarrito;
	}
	private JScrollPane getScrollPaneCarrito() {
		if (scrollPaneCarrito == null) {
			scrollPaneCarrito = new JScrollPane();
			scrollPaneCarrito.setEnabled(false);
			scrollPaneCarrito.setViewportView(getTxtAreaCarrito());
		}
		return scrollPaneCarrito;
	}
	private JTextArea getTxtAreaCarrito() {
		if (txtAreaCarrito == null) {
			txtAreaCarrito = new JTextArea();
			txtAreaCarrito.setBackground(new Color(255, 255, 255));
			txtAreaCarrito.setEditable(false);
			txtAreaCarrito.setVisible(false);
			txtAreaCarrito.setText("jijdijdwjdw\r\ndmqojqowjdoqwjdoqw\r\nfdoqkdoqk");
		}
		return txtAreaCarrito;
	}
	private JPasswordField getPasswordFieldReserva() {
		if (passwordFieldReserva == null) {
			passwordFieldReserva = new JPasswordField();
			passwordFieldReserva.setBackground(new Color(255, 255, 255));
			passwordFieldReserva.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return passwordFieldReserva;
	}
	private JPanel getPanelPago() {
		if (panelPago == null) {
			panelPago = new JPanel();
			panelPago.setLayout(new GridLayout(0, 2, 0, 0));
			panelPago.add(getScrollPaneListaPedidos());
			panelPago.add(getPanelOpcionesFinales());
		}
		return panelPago;
	}
	private JScrollPane getScrollPaneListaPedidos() {
		if (scrollPaneListaPedidos == null) {
			scrollPaneListaPedidos = new JScrollPane();
			scrollPaneListaPedidos.setViewportView(getTextAreaPedidos());
		}
		return scrollPaneListaPedidos;
	}
	private JPanel getPanelOpcionesFinales() {
		if (panelOpcionesFinales == null) {
			panelOpcionesFinales = new JPanel();
			panelOpcionesFinales.setBackground(new Color(0, 0, 128));
			panelOpcionesFinales.setLayout(new BorderLayout(0, 0));
			panelOpcionesFinales.add(getPanelMetodoPago(), BorderLayout.CENTER);
			panelOpcionesFinales.add(getPanelEleccionJugar(), BorderLayout.NORTH);
			panelOpcionesFinales.add(getPanelBtnFinales(), BorderLayout.SOUTH);
		}
		return panelOpcionesFinales;
	}
	private JTextArea getTextAreaPedidos() {
		if (textAreaPedidos == null) {
			textAreaPedidos = new JTextArea();
			textAreaPedidos.setText("ojdowjdowjdowdowjdo\r\ndojdodjwojdowjdm\r\ndmwdjowjdo");
			textAreaPedidos.setFont(new Font("SansSerif", Font.PLAIN, 21));
		}
		return textAreaPedidos;
	}
	private JPanel getPanelMetodoPago() {
		if (panelMetodoPago == null) {
			panelMetodoPago = new JPanel();
			panelMetodoPago.setBackground(new Color(0, 0, 128));
			panelMetodoPago.setLayout(new GridLayout(4, 1, 0, 0));
			panelMetodoPago.add(getLblOpcionesPago());
			panelMetodoPago.add(getRdbtnTarjeta());
			panelMetodoPago.add(getRdbtnEfectivo());
		}
		return panelMetodoPago;
	}
	private JPanel getPanelEleccionJugar() {
		if (panelEleccionJugar == null) {
			panelEleccionJugar = new JPanel();
			panelEleccionJugar.setBackground(new Color(0, 0, 128));
			panelEleccionJugar.setLayout(new GridLayout(3, 1, 0, 0));
			panelEleccionJugar.add(getLblOpcionesJugar());
			panelEleccionJugar.add(getRdbtnJugar());
			panelEleccionJugar.add(getRdbtnNoJugar());
		}
		return panelEleccionJugar;
	}
	private JLabel getLblOpcionesJugar() {
		if (lblOpcionesJugar == null) {
			lblOpcionesJugar = new JLabel("\u00BFQuiere jugar para descuentos?");
			lblOpcionesJugar.setForeground(new Color(255, 255, 255));
			lblOpcionesJugar.setFont(new Font("SansSerif", Font.BOLD, 27));
		}
		return lblOpcionesJugar;
	}
	private JRadioButton getRdbtnJugar() {
		if (rdbtnJugar == null) {
			rdbtnJugar = new JRadioButton("Jugar");
			rdbtnJugar.setBackground(new Color(0, 0, 128));
			rdbtnJugar.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnJugar.setSelected(true);
			rdbtnJugar.setMnemonic('J');
			buttonGroupJugar.add(rdbtnJugar);
			rdbtnJugar.setForeground(new Color(255, 255, 255));
		}
		return rdbtnJugar;
	}
	private JRadioButton getRdbtnNoJugar() {
		if (rdbtnNoJugar == null) {
			rdbtnNoJugar = new JRadioButton("No jugar");
			rdbtnNoJugar.setBackground(new Color(0, 0, 128));
			rdbtnNoJugar.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnNoJugar.setMnemonic('N');
			buttonGroupJugar.add(rdbtnNoJugar);
			rdbtnNoJugar.setForeground(new Color(255, 255, 255));
		}
		return rdbtnNoJugar;
	}
	private JLabel getLblOpcionesPago() {
		if (lblOpcionesPago == null) {
			lblOpcionesPago = new JLabel("\u00BFC\u00F3mo desea pagar?");
			lblOpcionesPago.setHorizontalAlignment(SwingConstants.LEFT);
			lblOpcionesPago.setFont(new Font("SansSerif", Font.BOLD, 27));
			lblOpcionesPago.setForeground(new Color(255, 255, 255));
		}
		return lblOpcionesPago;
	}
	private JRadioButton getRdbtnTarjeta() {
		if (rdbtnTarjeta == null) {
			rdbtnTarjeta = new JRadioButton("Tarjeta");
			rdbtnTarjeta.setBackground(new Color(0, 0, 128));
			rdbtnTarjeta.setMnemonic('T');
			rdbtnTarjeta.setSelected(true);
			buttonGroupPago.add(rdbtnTarjeta);
			rdbtnTarjeta.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnTarjeta.setForeground(new Color(255, 255, 255));
			rdbtnTarjeta.setHorizontalAlignment(SwingConstants.LEFT);
		}
		return rdbtnTarjeta;
	}
	private JRadioButton getRdbtnEfectivo() {
		if (rdbtnEfectivo == null) {
			rdbtnEfectivo = new JRadioButton("Efectivo");
			rdbtnEfectivo.setBackground(new Color(0, 0, 128));
			rdbtnEfectivo.setMnemonic('E');
			buttonGroupPago.add(rdbtnEfectivo);
			rdbtnEfectivo.setForeground(new Color(255, 255, 255));
			rdbtnEfectivo.setFont(new Font("SansSerif", Font.PLAIN, 19));
		}
		return rdbtnEfectivo;
	}
	private JPanel getPanelBtnFinales() {
		if (panelBtnFinales == null) {
			panelBtnFinales = new JPanel();
			panelBtnFinales.setLayout(new GridLayout(0, 2, 0, 0));
			panelBtnFinales.add(getBtnCancelar());
			panelBtnFinales.add(getBtnFinalizaryPagar());
		}
		return panelBtnFinales;
	}
	private JButton getBtnCancelar() {
		if (btnCancelar == null) {
			btnCancelar = new JButton("Cancelar");
			btnCancelar.setForeground(new Color(255, 255, 255));
			btnCancelar.setBackground(new Color(255, 0, 0));
			btnCancelar.setFont(new Font("SansSerif", Font.PLAIN, 27));
			btnCancelar.setMnemonic('C');
			btnCancelar.setActionCommand("Menu");
			btnCancelar.addActionListener(pf);
		}
		return btnCancelar;
	}
	private JButton getBtnFinalizaryPagar() {
		if (btnFinalizaryPagar == null) {
			btnFinalizaryPagar = new JButton("Finalizar y pagar");
			btnFinalizaryPagar.setMnemonic('F');
			btnFinalizaryPagar.setBackground(new Color(50, 205, 50));
			btnFinalizaryPagar.setForeground(new Color(255, 255, 255));
			btnFinalizaryPagar.setFont(new Font("SansSerif", Font.PLAIN, 23));
		}
		return btnFinalizaryPagar;
	}
	private JMenuBar getMenuBar_4() {
		if (menuBar == null) {
			menuBar = new JMenuBar();
			menuBar.add(getMenu_1());
			menuBar.add(getMenu_2());
		}
		return menuBar;
	}
	private JMenu getMenu_1() {
		if (mnOptions == null) {
			mnOptions = new JMenu("Opciones");
			mnOptions.setMnemonic('O');
			mnOptions.add(getMntmNuevaSesion());
			mnOptions.add(getSeparator());
			mnOptions.add(getMntmSalida());
		}
		return mnOptions;
	}
	private JMenuItem getMntmSalida() {
		if (mntmSalida == null) {
			mntmSalida = new JMenuItem("Salida");
			mntmSalida.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_X, InputEvent.CTRL_DOWN_MASK));
			mntmSalida.addActionListener(pE);
		}
		return mntmSalida;
	}
	private JMenuItem getMntmNuevaSesion() {
		if (mntmNuevaSesion == null) {
			mntmNuevaSesion = new JMenuItem("Nueva Sesion");
			mntmNuevaSesion.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, InputEvent.CTRL_DOWN_MASK));
		}
		return mntmNuevaSesion;
	}
	private JSeparator getSeparator() {
		if (separator == null) {
			separator = new JSeparator();
		}
		return separator;
	}
	private JMenu getMenu_2() {
		if (mnAyuda == null) {
			mnAyuda = new JMenu("Ayuda");
			mnAyuda.setMnemonic('A');
			mnAyuda.add(getMntmAyuda());
		}
		return mnAyuda;
	}
	private JMenuItem getMntmAyuda() {
		if (mntmAyuda == null) {
			mntmAyuda = new JMenuItem("Abrir men\u00FA de ayuda");
			mntmAyuda.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F1, InputEvent.CTRL_DOWN_MASK));
		}
		return mntmAyuda;
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2024-12-29 22:24:34.540
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2024-12-29 22:24:34.541
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2024-12-29 23:02:30.914
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package uo.cpm.modulo.ui;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import java.awt.CardLayout;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.BorderLayout;
import javax.swing.JLabel;
import javax.swing.JButton;
import javax.swing.BoxLayout;
import java.awt.GridLayout;
import java.awt.Image;

import javax.swing.ImageIcon;
import java.awt.Color;
import java.awt.Font;
import javax.swing.border.LineBorder;

import uo.cpm.modulo.model.Producto;
import uo.cpm.modulo.service.Pizzeria;

import javax.swing.SwingConstants;
import java.awt.FlowLayout;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.Component;
import java.awt.Dimension;

import javax.swing.JTextField;
import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.InputEvent;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JPasswordField;
import javax.swing.JSplitPane;
import javax.swing.JRadioButton;
import javax.swing.ButtonGroup;
import javax.swing.JSeparator;

public class VentanaPrincipal extends JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private JPanel contentPane;
	private JPanel panelInicio;
	private JPanel panelBienvenida;
	private JPanel panelIdiomas;
	private JButton btnSpanish;
	private JLabel lblIngredients;
	private JButton btnEnglish;
	private JButton btnFrench;
	private JButton btnItalian;
	private JPanel panelSaludo;
	private JLabel lblWelcome;
	private JButton btnSiguiente_Datos;
	private JLabel lblIngredients2;
	private JLabel lblIngredients2_1;
	private ProcessFrame pf = new  ProcessFrame();
	private JPanel panelRegistro;
	private JPanel panelDatos;
	private JTextField textFieldDNI;
	private JLabel lblDNI;
	private JLabel lblReserva;
	private JPanel panelBtn;
	private JLabel lblPlaceHolder;
	private JButton btnSiguiente_Menu;
	private JLabel lblPlaceHolder_1;
	private JPanel panelSpacing;
	private JLabel lblPlaceHolder_1_1;
	private JPanel panelMenu;
	private JPanel panelFiltros;
	private JButton btnTodos;
	private JButton btnPizzas;
	private JButton btnEntrantes;
	private JButton btnEnsaladas;
	private JButton btnPostres;
	private JButton btnBebidas;
	private JScrollPane scrollPaneProductos;
	private JPanel panelProductos;
	private JPanel panelFinalizarMenu;
	private JLabel lblPlaceHolderMenu;
	private JButton btnFinalizar;
	private JLabel lblPlaceHolderMenu_2;
	private JLabel lblPlaceHolderMenu_1;
	private JLabel lblPlaceHolderMenu_3;
	private JPanel panelCarrito;
	private JButton btnCarrito;
	private JScrollPane scrollPaneCarrito;
	private JTextArea txtAreaCarrito;
	private ProcessCart pCrt = new ProcessCart();
	private JPasswordField passwordFieldReserva;
	private JPanel panelPago;
	private JScrollPane scrollPaneListaPedidos;
	private JPanel panelOpcionesFinales;
	private JTextArea textAreaPedidos;
	private JPanel panelMetodoPago;
	private JPanel panelEleccionJugar;
	private JLabel lblOpcionesJugar;
	private JRadioButton rdbtnJugar;
	private JRadioButton rdbtnNoJugar;
	private final ButtonGroup buttonGroupJugar = new ButtonGroup();
	private JLabel lblOpcionesPago;
	private JRadioButton rdbtnTarjeta;
	private JRadioButton rdbtnEfectivo;
	private JPanel panelBtnFinales;
	private JButton btnCancelar;
	private JButton btnFinalizaryPagar;
	private final ButtonGroup buttonGroupPago = new ButtonGroup();
	private JMenuBar menuBar;
	private JMenu mnOptions;
	private JMenuItem mntmSalida;
	private JMenuItem mntmNuevaSesion;
	private JSeparator separator;
	private JMenu mnAyuda;
	private JMenuItem mntmAyuda;
	private ProcessExit pE = new ProcessExit();
	private ProcessWindowHelpFocus pWHF = new  ProcessWindowHelpFocus();
	private Pizzeria pz;
	private Producto[] menuModel;
	private ProcessFilters pft = new ProcessFilters();
	private ProcessBuying pB = new 
	class ProcessBuying implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			int pos = Integer.parseInt(e.getActionCommand());
			pz.addToOrder(menuModel[pos], 1);
			
		}
		
	}
	class ProcessFilters implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			int filter = Integer.parseInt(e.getActionCommand());
			quitarBotonesMenu();
			generarBotonesMenu(filter);
			
		}
		
	}
	class ProcessWindowHelpFocus extends WindowAdapter{
		@Override
		public void windowOpened(WindowEvent e) {
			getBtnSiguiente_Datos().requestFocus();
		}
	}
	class ProcessExit implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			confirmChoice();
			
		}

		
		
	}
	protected void confirmChoice() {
		if(JOptionPane.showConfirmDialog(null, "¬øEst√°s seguro/a de que quieres salir de la aplicaci√≥n?")==JOptionPane.YES_OPTION) {
			System.exit(0);
		}
	}
	class ProcessFrame implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			changeFrame(e);
			
		}

		
		
	}
	protected void changeFrame(ActionEvent e) {
		String frame = e.getActionCommand();
		((CardLayout)getContentPane().getLayout()).show(getContentPane(), frame);
		setTitle("Uniovi's: " + frame);
	}
	class ProcessCart implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			showShoppingCart();
			
		}

		
		
	}
	protected void showShoppingCart() {
		if(getTxtAreaCarrito().isVisible()) {
			getTxtAreaCarrito().setVisible(false);
		}else {
			getTxtAreaCarrito().setVisible(true);
		}
	}

	/**
	 * Create the frame.
	 */
	public VentanaPrincipal(Pizzeria pz) {
		this.pz = pz;
		addWindowListener(pWHF);
		setMinimumSize(new Dimension(550, 350));
		setTitle("Uniovi's ");
		setIconImage(Toolkit.getDefaultToolkit().getImage(VentanaPrincipal.class.getResource("/img/logo.png")));
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 900, 620);
		setLocationRelativeTo(null);
		setJMenuBar(getMenuBar_4());
		contentPane = new JPanel();
		contentPane.setBackground(new Color(255, 0, 0));
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(new CardLayout(0, 0));
		contentPane.add(getPanelInicio(), "pnInicio");
		contentPane.add(getPanelRegistro(), "Datos de Registro");
		contentPane.add(getPanelMenu(), "Menu");
		contentPane.add(getPanelPago(), "Revisar y Pagar");
	}

	private JPanel getPanelInicio() {
		if (panelInicio == null) {
			panelInicio = new JPanel();
			panelInicio.setBackground(new Color(255, 0, 0));
			panelInicio.setLayout(new BorderLayout(0, 0));
			panelInicio.add(getPanelBienvenida(), BorderLayout.CENTER);
			panelInicio.add(getPanelIdiomas(), BorderLayout.NORTH);
			panelInicio.add(getPanelSaludo(), BorderLayout.SOUTH);
		}
		return panelInicio;
	}
	private JPanel getPanelBienvenida() {
		if (panelBienvenida == null) {
			panelBienvenida = new JPanel();
			panelBienvenida.setBackground(new Color(0, 0, 139));
			panelBienvenida.setLayout(new BorderLayout(0, 0));
			panelBienvenida.add(getLblIngredients(), BorderLayout.CENTER);
			panelBienvenida.add(getLblIngredients2(), BorderLayout.WEST);
			panelBienvenida.add(getLblIngredients2_1(), BorderLayout.EAST);
		}
		return panelBienvenida;
	}
	private JPanel getPanelIdiomas() {
		if (panelIdiomas == null) {
			panelIdiomas = new JPanel();
			panelIdiomas.setBackground(new Color(255, 0, 0));
			panelIdiomas.setLayout(new GridLayout(0, 4, 0, 0));
			panelIdiomas.add(getBtnSpanish());
			panelIdiomas.add(getBtnEnglish());
			panelIdiomas.add(getBtnFrench());
			panelIdiomas.add(getBtnItalian());
		}
		return panelIdiomas;
	}
	private JButton getBtnSpanish() {
		if (btnSpanish == null) {
			btnSpanish = new JButton("");
			btnSpanish.setBackground(new Color(255, 255, 255));
			btnSpanish.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/es.png")));
		}
		return btnSpanish;
	}
	private JLabel getLblIngredients() {
		if (lblIngredients == null) {
			lblIngredients = new JLabel("");
			lblIngredients.setHorizontalAlignment(SwingConstants.CENTER);
			lblIngredients.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/bienvenida.png")));
		}
		return lblIngredients;
	}
	private JButton getBtnEnglish() {
		if (btnEnglish == null) {
			btnEnglish = new JButton("");
			btnEnglish.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/en.png")));
			btnEnglish.setBackground(Color.WHITE);
		}
		return btnEnglish;
	}
	private JButton getBtnFrench() {
		if (btnFrench == null) {
			btnFrench = new JButton("");
			btnFrench.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/fr.png")));
			btnFrench.setBackground(Color.WHITE);
		}
		return btnFrench;
	}
	private JButton getBtnItalian() {
		if (btnItalian == null) {
			btnItalian = new JButton("");
			btnItalian.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/it.png")));
			btnItalian.setBackground(Color.WHITE);
		}
		return btnItalian;
	}
	private JPanel getPanelSaludo() {
		if (panelSaludo == null) {
			panelSaludo = new JPanel();
			panelSaludo.setBackground(new Color(255, 0, 0));
			panelSaludo.setLayout(new GridLayout(0, 2, 0, 0));
			panelSaludo.add(getLblWelcome_1());
			panelSaludo.add(getBtnSiguiente_Datos());
		}
		return panelSaludo;
	}
	private JLabel getLblWelcome_1() {
		if (lblWelcome == null) {
			lblWelcome = new JLabel("\u00A1Bienvenido a Uniovi's!");
			lblWelcome.setHorizontalAlignment(SwingConstants.CENTER);
			lblWelcome.setForeground(Color.WHITE);
			lblWelcome.setFont(new Font("Dialog", Font.BOLD, 28));
			lblWelcome.setBorder(new LineBorder(new Color(0, 0, 0), 0));
			lblWelcome.setBackground(Color.WHITE);
		}
		return lblWelcome;
	}
	private JButton getBtnSiguiente_Datos() {
		if (btnSiguiente_Datos == null) {
			btnSiguiente_Datos = new JButton("Continuar");
			btnSiguiente_Datos.setAlignmentX(Component.RIGHT_ALIGNMENT);
			btnSiguiente_Datos.setBackground(new Color(50, 205, 50));
			btnSiguiente_Datos.setForeground(new Color(255, 255, 255));
			btnSiguiente_Datos.setFont(new Font("SansSerif", Font.PLAIN, 24));
			btnSiguiente_Datos.setMnemonic('C');
			btnSiguiente_Datos.setBorder(new LineBorder(new Color(0, 0, 0), 4, true));
			btnSiguiente_Datos.setActionCommand("Datos de Registro");
			btnSiguiente_Datos.addActionListener(pf);
		}
		return btnSiguiente_Datos;
	}
	private JLabel getLblIngredients2() {
		if (lblIngredients2 == null) {
			lblIngredients2 = new JLabel("");
			lblIngredients2.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/PI03.png")));
		}
		return lblIngredients2;
	}
	private JLabel getLblIngredients2_1() {
		if (lblIngredients2_1 == null) {
			lblIngredients2_1 = new JLabel("");
			lblIngredients2_1.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/BE02.png")));
		}
		return lblIngredients2_1;
	}
	private JPanel getPanelRegistro() {
		if (panelRegistro == null) {
			panelRegistro = new JPanel();
			panelRegistro.setLayout(new BorderLayout(0, 0));
			panelRegistro.add(getPanelDatos(), BorderLayout.CENTER);
			panelRegistro.add(getPanelBtn(), BorderLayout.SOUTH);
			panelRegistro.add(getPanelSpacing(), BorderLayout.EAST);
		}
		return panelRegistro;
	}
	private JPanel getPanelDatos() {
		if (panelDatos == null) {
			panelDatos = new JPanel();
			panelDatos.setBackground(new Color(0, 0, 128));
			panelDatos.setLayout(new GridLayout(6, 1, 0, 0));
			panelDatos.add(getLblDNI());
			panelDatos.add(getTextFieldDNI());
			panelDatos.add(getLblReserva());
			panelDatos.add(getPasswordFieldReserva());
		}
		return panelDatos;
	}
	private JTextField getTextFieldDNI() {
		if (textFieldDNI == null) {
			textFieldDNI = new JTextField();
			textFieldDNI.setFont(new Font("SansSerif", Font.PLAIN, 28));
			textFieldDNI.setColumns(10);
		}
		return textFieldDNI;
	}
	private JLabel getLblDNI() {
		if (lblDNI == null) {
			lblDNI = new JLabel("DNI / NIE:");
			lblDNI.setLabelFor(getTextFieldDNI());
			lblDNI.setDisplayedMnemonic('D');
			lblDNI.setForeground(new Color(255, 255, 255));
			lblDNI.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return lblDNI;
	}
	private JLabel getLblReserva() {
		if (lblReserva == null) {
			lblReserva = new JLabel("N\u00BA / C\u00F3digo de reserva");
			lblReserva.setLabelFor(getPasswordFieldReserva());
			lblReserva.setDisplayedMnemonic('N');
			lblReserva.setForeground(new Color(255, 255, 255));
			lblReserva.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return lblReserva;
	}
	private JPanel getPanelBtn() {
		if (panelBtn == null) {
			panelBtn = new JPanel();
			panelBtn.setBackground(new Color(0, 0, 128));
			panelBtn.setLayout(new GridLayout(1, 0, 0, 0));
			panelBtn.add(getLblPlaceHolder_1());
			panelBtn.add(getLblPlaceHolder());
			panelBtn.add(getBtnSiguiente_Menu());
		}
		return panelBtn;
	}
	private JLabel getLblPlaceHolder() {
		if (lblPlaceHolder == null) {
			lblPlaceHolder = new JLabel("");
			lblPlaceHolder.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder;
	}
	private JButton getBtnSiguiente_Menu() {
		if (btnSiguiente_Menu == null) {
			btnSiguiente_Menu = new JButton("Continuar");
			btnSiguiente_Menu.setForeground(new Color(255, 255, 255));
			btnSiguiente_Menu.setBackground(new Color(50, 205, 50));
			btnSiguiente_Menu.setFont(new Font("SansSerif", Font.PLAIN, 28));
			btnSiguiente_Menu.setMnemonic('C');
			btnSiguiente_Menu.setActionCommand("Menu");
			btnSiguiente_Menu.addActionListener(pf);
		}
		return btnSiguiente_Menu;
	}
	private JLabel getLblPlaceHolder_1() {
		if (lblPlaceHolder_1 == null) {
			lblPlaceHolder_1 = new JLabel("");
			lblPlaceHolder_1.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder_1;
	}
	private JPanel getPanelSpacing() {
		if (panelSpacing == null) {
			panelSpacing = new JPanel();
			panelSpacing.setBackground(new Color(0, 0, 128));
			panelSpacing.add(getLblPlaceHolder_1_1());
		}
		return panelSpacing;
	}
	private JLabel getLblPlaceHolder_1_1() {
		if (lblPlaceHolder_1_1 == null) {
			lblPlaceHolder_1_1 = new JLabel("                                                                                                            ");
			lblPlaceHolder_1_1.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder_1_1;
	}
	private JPanel getPanelMenu() {
		if (panelMenu == null) {
			panelMenu = new JPanel();
			panelMenu.setLayout(new BorderLayout(0, 0));
			panelMenu.add(getPanelFiltros(), BorderLayout.WEST);
			panelMenu.add(getScrollPaneProductos(), BorderLayout.CENTER);
			panelMenu.add(getPanelFinalizarMenu(), BorderLayout.SOUTH);
			panelMenu.add(getPanelCarrito(), BorderLayout.EAST);
		}
		return panelMenu;
	}
	private JPanel getPanelFiltros() {
		if (panelFiltros == null) {
			panelFiltros = new JPanel();
			panelFiltros.setLayout(new GridLayout(6, 0, 0, 0));
			panelFiltros.add(getBtnTodos());
			panelFiltros.add(getBtnPizzas());
			panelFiltros.add(getBtnEntrantes());
			panelFiltros.add(getBtnEnsaladas());
			panelFiltros.add(getBtnPostres());
			panelFiltros.add(getBtnBebidas());
		}
		return panelFiltros;
	}
	private JButton getBtnTodos() {
		if (btnTodos == null) {
			btnTodos = new JButton("");
			btnTodos.setText("Todos");
			btnTodos.setVerticalTextPosition(SwingConstants.TOP);
			btnTodos.setHorizontalTextPosition(SwingConstants.CENTER);
			btnTodos.setBackground(new Color(255, 255, 255));
			btnTodos.setToolTipText("Filtrar - Todos");
			setImagenAdaptada(btnTodos, "/img/bienvenida.png");
			btnTodos.setActionCommand(String.valueOf(Pizzeria.TODOS));
			btnTodos.addActionListener(pft);
		}
		return btnTodos;
	}
	private JButton getBtnPizzas() {
		if (btnPizzas == null) {
			btnPizzas = new JButton("");
			btnPizzas.setText("Pizzas");
			btnPizzas.setVerticalTextPosition(SwingConstants.TOP);
			btnPizzas.setHorizontalTextPosition(SwingConstants.CENTER);
			btnPizzas.setBackground(new Color(255, 255, 255));
			btnPizzas.setToolTipText("Filtrar - Pizzas");
			setImagenAdaptada(btnPizzas,"/img/PI01.png");
			btnPizzas.addActionListener(pft);
			btnPizzas.setActionCommand(String.valueOf(Pizzeria.PIZZAS));
		}
		return btnPizzas;
	}
	private JButton getBtnEntrantes() {
		if (btnEntrantes == null) {
			btnEntrantes = new JButton("");
			btnEntrantes.setText("Entrantes");
			btnEntrantes.setVerticalTextPosition(SwingConstants.TOP);
			btnEntrantes.setHorizontalTextPosition(SwingConstants.CENTER);
			btnEntrantes.setBackground(new Color(255, 255, 255));
			btnEntrantes.setToolTipText("Filtrar - Entrantes");
			setImagenAdaptada(btnEntrantes, "/img/ET02.png");
			btnEntrantes.addActionListener(pft);
			btnEntrantes.setActionCommand(String.valueOf(Pizzeria.ENTRANTES));
		}
		return btnEntrantes;
	}
	private JButton getBtnEnsaladas() {
		if (btnEnsaladas == null) {
			btnEnsaladas = new JButton("Ensaladas");
			btnEnsaladas.setText("Ensaladas");
			btnEnsaladas.setVerticalTextPosition(SwingConstants.TOP);
			btnEnsaladas.setHorizontalTextPosition(SwingConstants.CENTER);
			btnEnsaladas.setBackground(new Color(255, 255, 255));
			btnEnsaladas.setToolTipText("Filtrar - Ensaladas");
			setImagenAdaptada(btnEnsaladas, "/img/EN02.png");
			btnEnsaladas.addActionListener(pft);
			btnEnsaladas.setActionCommand(String.valueOf(Pizzeria.ENSALADAS));
		}
		return btnEnsaladas;
	}
	private JButton getBtnPostres() {
		if (btnPostres == null) {
			btnPostres = new JButton("");
			btnPostres.setText("Postres");
			btnPostres.setBackground(new Color(255, 255, 255));
			btnPostres.setVerticalTextPosition(SwingConstants.TOP);
			btnPostres.setHorizontalTextPosition(SwingConstants.CENTER);
			btnPostres.setToolTipText("Filtrar - Postres");
			btnPostres.setActionCommand(String.valueOf(Pizzeria.POSTRES));
			setImagenAdaptada(btnPostres, "/img/PO01.png");
			btnPostres.addActionListener(pft);
		}
		return btnPostres;
	}
	private JButton getBtnBebidas() {
		if (btnBebidas == null) {
			btnBebidas = new JButton("");
			btnBebidas.setText("Bebidas");
			btnBebidas.setVerticalTextPosition(SwingConstants.TOP);
			btnBebidas.setHorizontalTextPosition(SwingConstants.CENTER);
			btnBebidas.setBackground(new Color(255, 255, 255));
			btnBebidas.setToolTipText("Filtrar - Bebidas");
			setImagenAdaptada(btnBebidas, "/img/BE03.png");
			btnBebidas.addActionListener(pft);
			btnBebidas.setActionCommand(String.valueOf(Pizzeria.BEBIDAS));
		}
		return btnBebidas;
	}
	private void setImagenAdaptada(JButton boton, String rutaImagen){
		 Image imgOriginal = new ImageIcon(getClass().getResource(rutaImagen)).getImage(); 
		 Image imgEscalada = imgOriginal.getScaledInstance((int) (100), (int) (100),Image.SCALE_SMOOTH);
		 //si se quiere reescalar la ventana, este 100 tendria que cambiarse por el width y el height  respectivamente de la imagen para que as√≠ se reescale cada vez que cambias el tama√±o
		 //adem√°s este m√©todo deber√≠a llamarse en el constructor de la ventana mientras se usa un evento componentResized
		 boton.setIcon(new ImageIcon(imgEscalada));
	}
	private JScrollPane getScrollPaneProductos() {
		if (scrollPaneProductos == null) {
			scrollPaneProductos = new JScrollPane();
			scrollPaneProductos.setViewportView(getPanelProductos());
		}
		return scrollPaneProductos;
	}
	private JPanel getPanelProductos() {
		if (panelProductos == null) {
			panelProductos = new JPanel();
			panelProductos.setBackground(new Color(0, 0, 128));
			panelProductos.setLayout(new GridLayout(0, 4, 40, 40));
			generarBotonesMenu(pz.TODOS);
		}
		return panelProductos;
	}
	private void quitarBotonesMenu() {
		getPanelProductos().removeAll();
		getPanelProductos().repaint();
	}
	protected void generarBotonesMenu(int filter) {
			menuModel = pz.typeOfFilter(filter);
		for(int i=0; i<menuModel.length; i++) {
			JButton j = new JButton("");
			j.setText(menuModel[i].toStringMenu());
			j.setVerticalTextPosition(SwingConstants.BOTTOM); 
			j.setHorizontalTextPosition(SwingConstants.CENTER);
			setImagenAdaptada(j, "/img/" +menuModel[i].getCode() + ".png");
			j.setBackground(Color.black);
			j.setForeground(Color.white);
			if(i==0 && menuModel[i].getType().equals("Pizza")) {
				j.setBorder(new LineBorder(Color.red, 8));
				j.setText("¬°Pizza del d√≠a! - " + j.getText());
			}
			j.setActionCommand(String.valueOf(i));
			j.
			panelProductos.add(j);
			validate();
		}
	}
	private JPanel getPanelFinalizarMenu() {
		if (panelFinalizarMenu == null) {
			panelFinalizarMenu = new JPanel();
			panelFinalizarMenu.setBackground(new Color(128, 0, 0));
			panelFinalizarMenu.setLayout(new GridLayout(0, 5, 0, 0));
			panelFinalizarMenu.add(getLblPlaceHolderMenu());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_3());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_1());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_2());
			panelFinalizarMenu.add(getBtnFinalizar());
		}
		return panelFinalizarMenu;
	}
	private JLabel getLblPlaceHolderMenu() {
		if (lblPlaceHolderMenu == null) {
			lblPlaceHolderMenu = new JLabel("");
		}
		return lblPlaceHolderMenu;
	}
	private JButton getBtnFinalizar() {
		if (btnFinalizar == null) {
			btnFinalizar = new JButton("Finalizar");
			btnFinalizar.setMnemonic('F');
			btnFinalizar.setForeground(new Color(255, 255, 255));
			btnFinalizar.setBackground(new Color(50, 205, 50));
			btnFinalizar.setFont(new Font("SansSerif", Font.PLAIN, 28));
			btnFinalizar.setActionCommand("Revisar y Pagar");
			btnFinalizar.addActionListener(pf);
		}
		return btnFinalizar;
	}
	private JLabel getLblPlaceHolderMenu_2() {
		if (lblPlaceHolderMenu_2 == null) {
			lblPlaceHolderMenu_2 = new JLabel("");
		}
		return lblPlaceHolderMenu_2;
	}
	private JLabel getLblPlaceHolderMenu_1() {
		if (lblPlaceHolderMenu_1 == null) {
			lblPlaceHolderMenu_1 = new JLabel("");
		}
		return lblPlaceHolderMenu_1;
	}
	private JLabel getLblPlaceHolderMenu_3() {
		if (lblPlaceHolderMenu_3 == null) {
			lblPlaceHolderMenu_3 = new JLabel("");
		}
		return lblPlaceHolderMenu_3;
	}
	private JPanel getPanelCarrito() {
		if (panelCarrito == null) {
			panelCarrito = new JPanel();
			panelCarrito.setBackground(new Color(128, 0, 0));
			panelCarrito.setLayout(new BorderLayout(0, 0));
			panelCarrito.add(getBtnCarrito(), BorderLayout.NORTH);
			panelCarrito.add(getScrollPaneCarrito());
		}
		return panelCarrito;
	}
	private JButton getBtnCarrito() {
		if (btnCarrito == null) {
			btnCarrito = new JButton("");
			btnCarrito.setToolTipText("Mostrar/Ocultar Carrito");
			btnCarrito.setBackground(new Color(255, 255, 255));
			setImagenAdaptada(btnCarrito,"/img/carrito.png");
			btnCarrito.addActionListener(pCrt);
		}
		return btnCarrito;
	}
	private JScrollPane getScrollPaneCarrito() {
		if (scrollPaneCarrito == null) {
			scrollPaneCarrito = new JScrollPane();
			scrollPaneCarrito.setEnabled(false);
			scrollPaneCarrito.setViewportView(getTxtAreaCarrito());
		}
		return scrollPaneCarrito;
	}
	private JTextArea getTxtAreaCarrito() {
		if (txtAreaCarrito == null) {
			txtAreaCarrito = new JTextArea();
			txtAreaCarrito.setBackground(new Color(255, 255, 255));
			txtAreaCarrito.setEditable(false);
			txtAreaCarrito.setVisible(false);
			txtAreaCarrito.setText(pz.getOrderToStringShoppingCart());
		}
		return txtAreaCarrito;
	}
	private JPasswordField getPasswordFieldReserva() {
		if (passwordFieldReserva == null) {
			passwordFieldReserva = new JPasswordField();
			passwordFieldReserva.setBackground(new Color(255, 255, 255));
			passwordFieldReserva.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return passwordFieldReserva;
	}
	private JPanel getPanelPago() {
		if (panelPago == null) {
			panelPago = new JPanel();
			panelPago.setLayout(new GridLayout(0, 2, 0, 0));
			panelPago.add(getScrollPaneListaPedidos());
			panelPago.add(getPanelOpcionesFinales());
		}
		return panelPago;
	}
	private JScrollPane getScrollPaneListaPedidos() {
		if (scrollPaneListaPedidos == null) {
			scrollPaneListaPedidos = new JScrollPane();
			scrollPaneListaPedidos.setViewportView(getTextAreaPedidos());
		}
		return scrollPaneListaPedidos;
	}
	private JPanel getPanelOpcionesFinales() {
		if (panelOpcionesFinales == null) {
			panelOpcionesFinales = new JPanel();
			panelOpcionesFinales.setBackground(new Color(0, 0, 128));
			panelOpcionesFinales.setLayout(new BorderLayout(0, 0));
			panelOpcionesFinales.add(getPanelMetodoPago(), BorderLayout.CENTER);
			panelOpcionesFinales.add(getPanelEleccionJugar(), BorderLayout.NORTH);
			panelOpcionesFinales.add(getPanelBtnFinales(), BorderLayout.SOUTH);
		}
		return panelOpcionesFinales;
	}
	private JTextArea getTextAreaPedidos() {
		if (textAreaPedidos == null) {
			textAreaPedidos = new JTextArea();
			textAreaPedidos.setText("ojdowjdowjdowdowjdo\r\ndojdodjwojdowjdm\r\ndmwdjowjdo");
			textAreaPedidos.setFont(new Font("SansSerif", Font.PLAIN, 21));
		}
		return textAreaPedidos;
	}
	private JPanel getPanelMetodoPago() {
		if (panelMetodoPago == null) {
			panelMetodoPago = new JPanel();
			panelMetodoPago.setBackground(new Color(0, 0, 128));
			panelMetodoPago.setLayout(new GridLayout(4, 1, 0, 0));
			panelMetodoPago.add(getLblOpcionesPago());
			panelMetodoPago.add(getRdbtnTarjeta());
			panelMetodoPago.add(getRdbtnEfectivo());
		}
		return panelMetodoPago;
	}
	private JPanel getPanelEleccionJugar() {
		if (panelEleccionJugar == null) {
			panelEleccionJugar = new JPanel();
			panelEleccionJugar.setBackground(new Color(0, 0, 128));
			panelEleccionJugar.setLayout(new GridLayout(3, 1, 0, 0));
			panelEleccionJugar.add(getLblOpcionesJugar());
			panelEleccionJugar.add(getRdbtnJugar());
			panelEleccionJugar.add(getRdbtnNoJugar());
		}
		return panelEleccionJugar;
	}
	private JLabel getLblOpcionesJugar() {
		if (lblOpcionesJugar == null) {
			lblOpcionesJugar = new JLabel("\u00BFQuiere jugar para descuentos?");
			lblOpcionesJugar.setForeground(new Color(255, 255, 255));
			lblOpcionesJugar.setFont(new Font("SansSerif", Font.BOLD, 27));
		}
		return lblOpcionesJugar;
	}
	private JRadioButton getRdbtnJugar() {
		if (rdbtnJugar == null) {
			rdbtnJugar = new JRadioButton("Jugar");
			rdbtnJugar.setBackground(new Color(0, 0, 128));
			rdbtnJugar.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnJugar.setSelected(true);
			rdbtnJugar.setMnemonic('J');
			buttonGroupJugar.add(rdbtnJugar);
			rdbtnJugar.setForeground(new Color(255, 255, 255));
		}
		return rdbtnJugar;
	}
	private JRadioButton getRdbtnNoJugar() {
		if (rdbtnNoJugar == null) {
			rdbtnNoJugar = new JRadioButton("No jugar");
			rdbtnNoJugar.setBackground(new Color(0, 0, 128));
			rdbtnNoJugar.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnNoJugar.setMnemonic('N');
			buttonGroupJugar.add(rdbtnNoJugar);
			rdbtnNoJugar.setForeground(new Color(255, 255, 255));
		}
		return rdbtnNoJugar;
	}
	private JLabel getLblOpcionesPago() {
		if (lblOpcionesPago == null) {
			lblOpcionesPago = new JLabel("\u00BFC\u00F3mo desea pagar?");
			lblOpcionesPago.setHorizontalAlignment(SwingConstants.LEFT);
			lblOpcionesPago.setFont(new Font("SansSerif", Font.BOLD, 27));
			lblOpcionesPago.setForeground(new Color(255, 255, 255));
		}
		return lblOpcionesPago;
	}
	private JRadioButton getRdbtnTarjeta() {
		if (rdbtnTarjeta == null) {
			rdbtnTarjeta = new JRadioButton("Tarjeta");
			rdbtnTarjeta.setBackground(new Color(0, 0, 128));
			rdbtnTarjeta.setMnemonic('T');
			rdbtnTarjeta.setSelected(true);
			buttonGroupPago.add(rdbtnTarjeta);
			rdbtnTarjeta.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnTarjeta.setForeground(new Color(255, 255, 255));
			rdbtnTarjeta.setHorizontalAlignment(SwingConstants.LEFT);
		}
		return rdbtnTarjeta;
	}
	private JRadioButton getRdbtnEfectivo() {
		if (rdbtnEfectivo == null) {
			rdbtnEfectivo = new JRadioButton("Efectivo");
			rdbtnEfectivo.setBackground(new Color(0, 0, 128));
			rdbtnEfectivo.setMnemonic('E');
			buttonGroupPago.add(rdbtnEfectivo);
			rdbtnEfectivo.setForeground(new Color(255, 255, 255));
			rdbtnEfectivo.setFont(new Font("SansSerif", Font.PLAIN, 19));
		}
		return rdbtnEfectivo;
	}
	private JPanel getPanelBtnFinales() {
		if (panelBtnFinales == null) {
			panelBtnFinales = new JPanel();
			panelBtnFinales.setLayout(new GridLayout(0, 2, 0, 0));
			panelBtnFinales.add(getBtnCancelar());
			panelBtnFinales.add(getBtnFinalizaryPagar());
		}
		return panelBtnFinales;
	}
	private JButton getBtnCancelar() {
		if (btnCancelar == null) {
			btnCancelar = new JButton("Cancelar");
			btnCancelar.setForeground(new Color(255, 255, 255));
			btnCancelar.setBackground(new Color(255, 0, 0));
			btnCancelar.setFont(new Font("SansSerif", Font.PLAIN, 27));
			btnCancelar.setMnemonic('C');
			btnCancelar.setActionCommand("Menu");
			btnCancelar.addActionListener(pf);
		}
		return btnCancelar;
	}
	private JButton getBtnFinalizaryPagar() {
		if (btnFinalizaryPagar == null) {
			btnFinalizaryPagar = new JButton("Finalizar y pagar");
			btnFinalizaryPagar.setMnemonic('F');
			btnFinalizaryPagar.setBackground(new Color(50, 205, 50));
			btnFinalizaryPagar.setForeground(new Color(255, 255, 255));
			btnFinalizaryPagar.setFont(new Font("SansSerif", Font.PLAIN, 23));
		}
		return btnFinalizaryPagar;
	}
	private JMenuBar getMenuBar_4() {
		if (menuBar == null) {
			menuBar = new JMenuBar();
			menuBar.add(getMenu_1());
			menuBar.add(getMenu_2());
		}
		return menuBar;
	}
	private JMenu getMenu_1() {
		if (mnOptions == null) {
			mnOptions = new JMenu("Opciones");
			mnOptions.setMnemonic('O');
			mnOptions.add(getMntmNuevaSesion());
			mnOptions.add(getSeparator());
			mnOptions.add(getMntmSalida());
		}
		return mnOptions;
	}
	private JMenuItem getMntmSalida() {
		if (mntmSalida == null) {
			mntmSalida = new JMenuItem("Salida");
			mntmSalida.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_X, InputEvent.CTRL_DOWN_MASK));
			mntmSalida.addActionListener(pE);
		}
		return mntmSalida;
	}
	private JMenuItem getMntmNuevaSesion() {
		if (mntmNuevaSesion == null) {
			mntmNuevaSesion = new JMenuItem("Nueva Sesion");
			mntmNuevaSesion.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, InputEvent.CTRL_DOWN_MASK));
		}
		return mntmNuevaSesion;
	}
	private JSeparator getSeparator() {
		if (separator == null) {
			separator = new JSeparator();
		}
		return separator;
	}
	private JMenu getMenu_2() {
		if (mnAyuda == null) {
			mnAyuda = new JMenu("Ayuda");
			mnAyuda.setMnemonic('A');
			mnAyuda.add(getMntmAyuda());
		}
		return mnAyuda;
	}
	private JMenuItem getMntmAyuda() {
		if (mntmAyuda == null) {
			mntmAyuda = new JMenuItem("Abrir men\u00FA de ayuda");
			mntmAyuda.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F1, InputEvent.CTRL_DOWN_MASK));
		}
		return mntmAyuda;
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2024-12-29 23:02:30.915
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2024-12-29 23:02:30.915
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2024-12-29 23:02:30.931
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package uo.cpm.modulo.ui;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import java.awt.CardLayout;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.BorderLayout;
import javax.swing.JLabel;
import javax.swing.JButton;
import javax.swing.BoxLayout;
import java.awt.GridLayout;
import java.awt.Image;

import javax.swing.ImageIcon;
import java.awt.Color;
import java.awt.Font;
import javax.swing.border.LineBorder;

import uo.cpm.modulo.model.Producto;
import uo.cpm.modulo.service.Pizzeria;

import javax.swing.SwingConstants;
import java.awt.FlowLayout;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.Component;
import java.awt.Dimension;

import javax.swing.JTextField;
import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.InputEvent;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JPasswordField;
import javax.swing.JSplitPane;
import javax.swing.JRadioButton;
import javax.swing.ButtonGroup;
import javax.swing.JSeparator;

public class VentanaPrincipal extends JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private JPanel contentPane;
	private JPanel panelInicio;
	private JPanel panelBienvenida;
	private JPanel panelIdiomas;
	private JButton btnSpanish;
	private JLabel lblIngredients;
	private JButton btnEnglish;
	private JButton btnFrench;
	private JButton btnItalian;
	private JPanel panelSaludo;
	private JLabel lblWelcome;
	private JButton btnSiguiente_Datos;
	private JLabel lblIngredients2;
	private JLabel lblIngredients2_1;
	private ProcessFrame pf = new  ProcessFrame();
	private JPanel panelRegistro;
	private JPanel panelDatos;
	private JTextField textFieldDNI;
	private JLabel lblDNI;
	private JLabel lblReserva;
	private JPanel panelBtn;
	private JLabel lblPlaceHolder;
	private JButton btnSiguiente_Menu;
	private JLabel lblPlaceHolder_1;
	private JPanel panelSpacing;
	private JLabel lblPlaceHolder_1_1;
	private JPanel panelMenu;
	private JPanel panelFiltros;
	private JButton btnTodos;
	private JButton btnPizzas;
	private JButton btnEntrantes;
	private JButton btnEnsaladas;
	private JButton btnPostres;
	private JButton btnBebidas;
	private JScrollPane scrollPaneProductos;
	private JPanel panelProductos;
	private JPanel panelFinalizarMenu;
	private JLabel lblPlaceHolderMenu;
	private JButton btnFinalizar;
	private JLabel lblPlaceHolderMenu_2;
	private JLabel lblPlaceHolderMenu_1;
	private JLabel lblPlaceHolderMenu_3;
	private JPanel panelCarrito;
	private JButton btnCarrito;
	private JScrollPane scrollPaneCarrito;
	private JTextArea txtAreaCarrito;
	private ProcessCart pCrt = new ProcessCart();
	private JPasswordField passwordFieldReserva;
	private JPanel panelPago;
	private JScrollPane scrollPaneListaPedidos;
	private JPanel panelOpcionesFinales;
	private JTextArea textAreaPedidos;
	private JPanel panelMetodoPago;
	private JPanel panelEleccionJugar;
	private JLabel lblOpcionesJugar;
	private JRadioButton rdbtnJugar;
	private JRadioButton rdbtnNoJugar;
	private final ButtonGroup buttonGroupJugar = new ButtonGroup();
	private JLabel lblOpcionesPago;
	private JRadioButton rdbtnTarjeta;
	private JRadioButton rdbtnEfectivo;
	private JPanel panelBtnFinales;
	private JButton btnCancelar;
	private JButton btnFinalizaryPagar;
	private final ButtonGroup buttonGroupPago = new ButtonGroup();
	private JMenuBar menuBar;
	private JMenu mnOptions;
	private JMenuItem mntmSalida;
	private JMenuItem mntmNuevaSesion;
	private JSeparator separator;
	private JMenu mnAyuda;
	private JMenuItem mntmAyuda;
	private ProcessExit pE = new ProcessExit();
	private ProcessWindowHelpFocus pWHF = new  ProcessWindowHelpFocus();
	private Pizzeria pz;
	private Producto[] menuModel;
	private ProcessFilters pft = new ProcessFilters();
	private ProcessBuying pB = new 
	class ProcessBuying implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			int pos = Integer.parseInt(e.getActionCommand());
			pz.addToOrder(menuModel[pos], 1);
			
		}
		
	}
	class ProcessFilters implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			int filter = Integer.parseInt(e.getActionCommand());
			quitarBotonesMenu();
			generarBotonesMenu(filter);
			
		}
		
	}
	class ProcessWindowHelpFocus extends WindowAdapter{
		@Override
		public void windowOpened(WindowEvent e) {
			getBtnSiguiente_Datos().requestFocus();
		}
	}
	class ProcessExit implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			confirmChoice();
			
		}

		
		
	}
	protected void confirmChoice() {
		if(JOptionPane.showConfirmDialog(null, "¬øEst√°s seguro/a de que quieres salir de la aplicaci√≥n?")==JOptionPane.YES_OPTION) {
			System.exit(0);
		}
	}
	class ProcessFrame implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			changeFrame(e);
			
		}

		
		
	}
	protected void changeFrame(ActionEvent e) {
		String frame = e.getActionCommand();
		((CardLayout)getContentPane().getLayout()).show(getContentPane(), frame);
		setTitle("Uniovi's: " + frame);
	}
	class ProcessCart implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			showShoppingCart();
			
		}

		
		
	}
	protected void showShoppingCart() {
		if(getTxtAreaCarrito().isVisible()) {
			getTxtAreaCarrito().setVisible(false);
		}else {
			getTxtAreaCarrito().setVisible(true);
		}
	}

	/**
	 * Create the frame.
	 */
	public VentanaPrincipal(Pizzeria pz) {
		this.pz = pz;
		addWindowListener(pWHF);
		setMinimumSize(new Dimension(550, 350));
		setTitle("Uniovi's ");
		setIconImage(Toolkit.getDefaultToolkit().getImage(VentanaPrincipal.class.getResource("/img/logo.png")));
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 900, 620);
		setLocationRelativeTo(null);
		setJMenuBar(getMenuBar_4());
		contentPane = new JPanel();
		contentPane.setBackground(new Color(255, 0, 0));
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(new CardLayout(0, 0));
		contentPane.add(getPanelInicio(), "pnInicio");
		contentPane.add(getPanelRegistro(), "Datos de Registro");
		contentPane.add(getPanelMenu(), "Menu");
		contentPane.add(getPanelPago(), "Revisar y Pagar");
	}

	private JPanel getPanelInicio() {
		if (panelInicio == null) {
			panelInicio = new JPanel();
			panelInicio.setBackground(new Color(255, 0, 0));
			panelInicio.setLayout(new BorderLayout(0, 0));
			panelInicio.add(getPanelBienvenida(), BorderLayout.CENTER);
			panelInicio.add(getPanelIdiomas(), BorderLayout.NORTH);
			panelInicio.add(getPanelSaludo(), BorderLayout.SOUTH);
		}
		return panelInicio;
	}
	private JPanel getPanelBienvenida() {
		if (panelBienvenida == null) {
			panelBienvenida = new JPanel();
			panelBienvenida.setBackground(new Color(0, 0, 139));
			panelBienvenida.setLayout(new BorderLayout(0, 0));
			panelBienvenida.add(getLblIngredients(), BorderLayout.CENTER);
			panelBienvenida.add(getLblIngredients2(), BorderLayout.WEST);
			panelBienvenida.add(getLblIngredients2_1(), BorderLayout.EAST);
		}
		return panelBienvenida;
	}
	private JPanel getPanelIdiomas() {
		if (panelIdiomas == null) {
			panelIdiomas = new JPanel();
			panelIdiomas.setBackground(new Color(255, 0, 0));
			panelIdiomas.setLayout(new GridLayout(0, 4, 0, 0));
			panelIdiomas.add(getBtnSpanish());
			panelIdiomas.add(getBtnEnglish());
			panelIdiomas.add(getBtnFrench());
			panelIdiomas.add(getBtnItalian());
		}
		return panelIdiomas;
	}
	private JButton getBtnSpanish() {
		if (btnSpanish == null) {
			btnSpanish = new JButton("");
			btnSpanish.setBackground(new Color(255, 255, 255));
			btnSpanish.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/es.png")));
		}
		return btnSpanish;
	}
	private JLabel getLblIngredients() {
		if (lblIngredients == null) {
			lblIngredients = new JLabel("");
			lblIngredients.setHorizontalAlignment(SwingConstants.CENTER);
			lblIngredients.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/bienvenida.png")));
		}
		return lblIngredients;
	}
	private JButton getBtnEnglish() {
		if (btnEnglish == null) {
			btnEnglish = new JButton("");
			btnEnglish.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/en.png")));
			btnEnglish.setBackground(Color.WHITE);
		}
		return btnEnglish;
	}
	private JButton getBtnFrench() {
		if (btnFrench == null) {
			btnFrench = new JButton("");
			btnFrench.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/fr.png")));
			btnFrench.setBackground(Color.WHITE);
		}
		return btnFrench;
	}
	private JButton getBtnItalian() {
		if (btnItalian == null) {
			btnItalian = new JButton("");
			btnItalian.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/it.png")));
			btnItalian.setBackground(Color.WHITE);
		}
		return btnItalian;
	}
	private JPanel getPanelSaludo() {
		if (panelSaludo == null) {
			panelSaludo = new JPanel();
			panelSaludo.setBackground(new Color(255, 0, 0));
			panelSaludo.setLayout(new GridLayout(0, 2, 0, 0));
			panelSaludo.add(getLblWelcome_1());
			panelSaludo.add(getBtnSiguiente_Datos());
		}
		return panelSaludo;
	}
	private JLabel getLblWelcome_1() {
		if (lblWelcome == null) {
			lblWelcome = new JLabel("\u00A1Bienvenido a Uniovi's!");
			lblWelcome.setHorizontalAlignment(SwingConstants.CENTER);
			lblWelcome.setForeground(Color.WHITE);
			lblWelcome.setFont(new Font("Dialog", Font.BOLD, 28));
			lblWelcome.setBorder(new LineBorder(new Color(0, 0, 0), 0));
			lblWelcome.setBackground(Color.WHITE);
		}
		return lblWelcome;
	}
	private JButton getBtnSiguiente_Datos() {
		if (btnSiguiente_Datos == null) {
			btnSiguiente_Datos = new JButton("Continuar");
			btnSiguiente_Datos.setAlignmentX(Component.RIGHT_ALIGNMENT);
			btnSiguiente_Datos.setBackground(new Color(50, 205, 50));
			btnSiguiente_Datos.setForeground(new Color(255, 255, 255));
			btnSiguiente_Datos.setFont(new Font("SansSerif", Font.PLAIN, 24));
			btnSiguiente_Datos.setMnemonic('C');
			btnSiguiente_Datos.setBorder(new LineBorder(new Color(0, 0, 0), 4, true));
			btnSiguiente_Datos.setActionCommand("Datos de Registro");
			btnSiguiente_Datos.addActionListener(pf);
		}
		return btnSiguiente_Datos;
	}
	private JLabel getLblIngredients2() {
		if (lblIngredients2 == null) {
			lblIngredients2 = new JLabel("");
			lblIngredients2.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/PI03.png")));
		}
		return lblIngredients2;
	}
	private JLabel getLblIngredients2_1() {
		if (lblIngredients2_1 == null) {
			lblIngredients2_1 = new JLabel("");
			lblIngredients2_1.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/BE02.png")));
		}
		return lblIngredients2_1;
	}
	private JPanel getPanelRegistro() {
		if (panelRegistro == null) {
			panelRegistro = new JPanel();
			panelRegistro.setLayout(new BorderLayout(0, 0));
			panelRegistro.add(getPanelDatos(), BorderLayout.CENTER);
			panelRegistro.add(getPanelBtn(), BorderLayout.SOUTH);
			panelRegistro.add(getPanelSpacing(), BorderLayout.EAST);
		}
		return panelRegistro;
	}
	private JPanel getPanelDatos() {
		if (panelDatos == null) {
			panelDatos = new JPanel();
			panelDatos.setBackground(new Color(0, 0, 128));
			panelDatos.setLayout(new GridLayout(6, 1, 0, 0));
			panelDatos.add(getLblDNI());
			panelDatos.add(getTextFieldDNI());
			panelDatos.add(getLblReserva());
			panelDatos.add(getPasswordFieldReserva());
		}
		return panelDatos;
	}
	private JTextField getTextFieldDNI() {
		if (textFieldDNI == null) {
			textFieldDNI = new JTextField();
			textFieldDNI.setFont(new Font("SansSerif", Font.PLAIN, 28));
			textFieldDNI.setColumns(10);
		}
		return textFieldDNI;
	}
	private JLabel getLblDNI() {
		if (lblDNI == null) {
			lblDNI = new JLabel("DNI / NIE:");
			lblDNI.setLabelFor(getTextFieldDNI());
			lblDNI.setDisplayedMnemonic('D');
			lblDNI.setForeground(new Color(255, 255, 255));
			lblDNI.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return lblDNI;
	}
	private JLabel getLblReserva() {
		if (lblReserva == null) {
			lblReserva = new JLabel("N\u00BA / C\u00F3digo de reserva");
			lblReserva.setLabelFor(getPasswordFieldReserva());
			lblReserva.setDisplayedMnemonic('N');
			lblReserva.setForeground(new Color(255, 255, 255));
			lblReserva.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return lblReserva;
	}
	private JPanel getPanelBtn() {
		if (panelBtn == null) {
			panelBtn = new JPanel();
			panelBtn.setBackground(new Color(0, 0, 128));
			panelBtn.setLayout(new GridLayout(1, 0, 0, 0));
			panelBtn.add(getLblPlaceHolder_1());
			panelBtn.add(getLblPlaceHolder());
			panelBtn.add(getBtnSiguiente_Menu());
		}
		return panelBtn;
	}
	private JLabel getLblPlaceHolder() {
		if (lblPlaceHolder == null) {
			lblPlaceHolder = new JLabel("");
			lblPlaceHolder.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder;
	}
	private JButton getBtnSiguiente_Menu() {
		if (btnSiguiente_Menu == null) {
			btnSiguiente_Menu = new JButton("Continuar");
			btnSiguiente_Menu.setForeground(new Color(255, 255, 255));
			btnSiguiente_Menu.setBackground(new Color(50, 205, 50));
			btnSiguiente_Menu.setFont(new Font("SansSerif", Font.PLAIN, 28));
			btnSiguiente_Menu.setMnemonic('C');
			btnSiguiente_Menu.setActionCommand("Menu");
			btnSiguiente_Menu.addActionListener(pf);
		}
		return btnSiguiente_Menu;
	}
	private JLabel getLblPlaceHolder_1() {
		if (lblPlaceHolder_1 == null) {
			lblPlaceHolder_1 = new JLabel("");
			lblPlaceHolder_1.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder_1;
	}
	private JPanel getPanelSpacing() {
		if (panelSpacing == null) {
			panelSpacing = new JPanel();
			panelSpacing.setBackground(new Color(0, 0, 128));
			panelSpacing.add(getLblPlaceHolder_1_1());
		}
		return panelSpacing;
	}
	private JLabel getLblPlaceHolder_1_1() {
		if (lblPlaceHolder_1_1 == null) {
			lblPlaceHolder_1_1 = new JLabel("                                                                                                            ");
			lblPlaceHolder_1_1.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder_1_1;
	}
	private JPanel getPanelMenu() {
		if (panelMenu == null) {
			panelMenu = new JPanel();
			panelMenu.setLayout(new BorderLayout(0, 0));
			panelMenu.add(getPanelFiltros(), BorderLayout.WEST);
			panelMenu.add(getScrollPaneProductos(), BorderLayout.CENTER);
			panelMenu.add(getPanelFinalizarMenu(), BorderLayout.SOUTH);
			panelMenu.add(getPanelCarrito(), BorderLayout.EAST);
		}
		return panelMenu;
	}
	private JPanel getPanelFiltros() {
		if (panelFiltros == null) {
			panelFiltros = new JPanel();
			panelFiltros.setLayout(new GridLayout(6, 0, 0, 0));
			panelFiltros.add(getBtnTodos());
			panelFiltros.add(getBtnPizzas());
			panelFiltros.add(getBtnEntrantes());
			panelFiltros.add(getBtnEnsaladas());
			panelFiltros.add(getBtnPostres());
			panelFiltros.add(getBtnBebidas());
		}
		return panelFiltros;
	}
	private JButton getBtnTodos() {
		if (btnTodos == null) {
			btnTodos = new JButton("");
			btnTodos.setText("Todos");
			btnTodos.setVerticalTextPosition(SwingConstants.TOP);
			btnTodos.setHorizontalTextPosition(SwingConstants.CENTER);
			btnTodos.setBackground(new Color(255, 255, 255));
			btnTodos.setToolTipText("Filtrar - Todos");
			setImagenAdaptada(btnTodos, "/img/bienvenida.png");
			btnTodos.setActionCommand(String.valueOf(Pizzeria.TODOS));
			btnTodos.addActionListener(pft);
		}
		return btnTodos;
	}
	private JButton getBtnPizzas() {
		if (btnPizzas == null) {
			btnPizzas = new JButton("");
			btnPizzas.setText("Pizzas");
			btnPizzas.setVerticalTextPosition(SwingConstants.TOP);
			btnPizzas.setHorizontalTextPosition(SwingConstants.CENTER);
			btnPizzas.setBackground(new Color(255, 255, 255));
			btnPizzas.setToolTipText("Filtrar - Pizzas");
			setImagenAdaptada(btnPizzas,"/img/PI01.png");
			btnPizzas.addActionListener(pft);
			btnPizzas.setActionCommand(String.valueOf(Pizzeria.PIZZAS));
		}
		return btnPizzas;
	}
	private JButton getBtnEntrantes() {
		if (btnEntrantes == null) {
			btnEntrantes = new JButton("");
			btnEntrantes.setText("Entrantes");
			btnEntrantes.setVerticalTextPosition(SwingConstants.TOP);
			btnEntrantes.setHorizontalTextPosition(SwingConstants.CENTER);
			btnEntrantes.setBackground(new Color(255, 255, 255));
			btnEntrantes.setToolTipText("Filtrar - Entrantes");
			setImagenAdaptada(btnEntrantes, "/img/ET02.png");
			btnEntrantes.addActionListener(pft);
			btnEntrantes.setActionCommand(String.valueOf(Pizzeria.ENTRANTES));
		}
		return btnEntrantes;
	}
	private JButton getBtnEnsaladas() {
		if (btnEnsaladas == null) {
			btnEnsaladas = new JButton("Ensaladas");
			btnEnsaladas.setText("Ensaladas");
			btnEnsaladas.setVerticalTextPosition(SwingConstants.TOP);
			btnEnsaladas.setHorizontalTextPosition(SwingConstants.CENTER);
			btnEnsaladas.setBackground(new Color(255, 255, 255));
			btnEnsaladas.setToolTipText("Filtrar - Ensaladas");
			setImagenAdaptada(btnEnsaladas, "/img/EN02.png");
			btnEnsaladas.addActionListener(pft);
			btnEnsaladas.setActionCommand(String.valueOf(Pizzeria.ENSALADAS));
		}
		return btnEnsaladas;
	}
	private JButton getBtnPostres() {
		if (btnPostres == null) {
			btnPostres = new JButton("");
			btnPostres.setText("Postres");
			btnPostres.setBackground(new Color(255, 255, 255));
			btnPostres.setVerticalTextPosition(SwingConstants.TOP);
			btnPostres.setHorizontalTextPosition(SwingConstants.CENTER);
			btnPostres.setToolTipText("Filtrar - Postres");
			btnPostres.setActionCommand(String.valueOf(Pizzeria.POSTRES));
			setImagenAdaptada(btnPostres, "/img/PO01.png");
			btnPostres.addActionListener(pft);
		}
		return btnPostres;
	}
	private JButton getBtnBebidas() {
		if (btnBebidas == null) {
			btnBebidas = new JButton("");
			btnBebidas.setText("Bebidas");
			btnBebidas.setVerticalTextPosition(SwingConstants.TOP);
			btnBebidas.setHorizontalTextPosition(SwingConstants.CENTER);
			btnBebidas.setBackground(new Color(255, 255, 255));
			btnBebidas.setToolTipText("Filtrar - Bebidas");
			setImagenAdaptada(btnBebidas, "/img/BE03.png");
			btnBebidas.addActionListener(pft);
			btnBebidas.setActionCommand(String.valueOf(Pizzeria.BEBIDAS));
		}
		return btnBebidas;
	}
	private void setImagenAdaptada(JButton boton, String rutaImagen){
		 Image imgOriginal = new ImageIcon(getClass().getResource(rutaImagen)).getImage(); 
		 Image imgEscalada = imgOriginal.getScaledInstance((int) (100), (int) (100),Image.SCALE_SMOOTH);
		 //si se quiere reescalar la ventana, este 100 tendria que cambiarse por el width y el height  respectivamente de la imagen para que as√≠ se reescale cada vez que cambias el tama√±o
		 //adem√°s este m√©todo deber√≠a llamarse en el constructor de la ventana mientras se usa un evento componentResized
		 boton.setIcon(new ImageIcon(imgEscalada));
	}
	private JScrollPane getScrollPaneProductos() {
		if (scrollPaneProductos == null) {
			scrollPaneProductos = new JScrollPane();
			scrollPaneProductos.setViewportView(getPanelProductos());
		}
		return scrollPaneProductos;
	}
	private JPanel getPanelProductos() {
		if (panelProductos == null) {
			panelProductos = new JPanel();
			panelProductos.setBackground(new Color(0, 0, 128));
			panelProductos.setLayout(new GridLayout(0, 4, 40, 40));
			generarBotonesMenu(pz.TODOS);
		}
		return panelProductos;
	}
	private void quitarBotonesMenu() {
		getPanelProductos().removeAll();
		getPanelProductos().repaint();
	}
	protected void generarBotonesMenu(int filter) {
			menuModel = pz.typeOfFilter(filter);
		for(int i=0; i<menuModel.length; i++) {
			JButton j = new JButton("");
			j.setText(menuModel[i].toStringMenu());
			j.setVerticalTextPosition(SwingConstants.BOTTOM); 
			j.setHorizontalTextPosition(SwingConstants.CENTER);
			setImagenAdaptada(j, "/img/" +menuModel[i].getCode() + ".png");
			j.setBackground(Color.black);
			j.setForeground(Color.white);
			if(i==0 && menuModel[i].getType().equals("Pizza")) {
				j.setBorder(new LineBorder(Color.red, 8));
				j.setText("¬°Pizza del d√≠a! - " + j.getText());
			}
			j.setActionCommand(String.valueOf(i));
			j.
			panelProductos.add(j);
			validate();
		}
	}
	private JPanel getPanelFinalizarMenu() {
		if (panelFinalizarMenu == null) {
			panelFinalizarMenu = new JPanel();
			panelFinalizarMenu.setBackground(new Color(128, 0, 0));
			panelFinalizarMenu.setLayout(new GridLayout(0, 5, 0, 0));
			panelFinalizarMenu.add(getLblPlaceHolderMenu());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_3());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_1());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_2());
			panelFinalizarMenu.add(getBtnFinalizar());
		}
		return panelFinalizarMenu;
	}
	private JLabel getLblPlaceHolderMenu() {
		if (lblPlaceHolderMenu == null) {
			lblPlaceHolderMenu = new JLabel("");
		}
		return lblPlaceHolderMenu;
	}
	private JButton getBtnFinalizar() {
		if (btnFinalizar == null) {
			btnFinalizar = new JButton("Finalizar");
			btnFinalizar.setMnemonic('F');
			btnFinalizar.setForeground(new Color(255, 255, 255));
			btnFinalizar.setBackground(new Color(50, 205, 50));
			btnFinalizar.setFont(new Font("SansSerif", Font.PLAIN, 28));
			btnFinalizar.setActionCommand("Revisar y Pagar");
			btnFinalizar.addActionListener(pf);
		}
		return btnFinalizar;
	}
	private JLabel getLblPlaceHolderMenu_2() {
		if (lblPlaceHolderMenu_2 == null) {
			lblPlaceHolderMenu_2 = new JLabel("");
		}
		return lblPlaceHolderMenu_2;
	}
	private JLabel getLblPlaceHolderMenu_1() {
		if (lblPlaceHolderMenu_1 == null) {
			lblPlaceHolderMenu_1 = new JLabel("");
		}
		return lblPlaceHolderMenu_1;
	}
	private JLabel getLblPlaceHolderMenu_3() {
		if (lblPlaceHolderMenu_3 == null) {
			lblPlaceHolderMenu_3 = new JLabel("");
		}
		return lblPlaceHolderMenu_3;
	}
	private JPanel getPanelCarrito() {
		if (panelCarrito == null) {
			panelCarrito = new JPanel();
			panelCarrito.setBackground(new Color(128, 0, 0));
			panelCarrito.setLayout(new BorderLayout(0, 0));
			panelCarrito.add(getBtnCarrito(), BorderLayout.NORTH);
			panelCarrito.add(getScrollPaneCarrito());
		}
		return panelCarrito;
	}
	private JButton getBtnCarrito() {
		if (btnCarrito == null) {
			btnCarrito = new JButton("");
			btnCarrito.setToolTipText("Mostrar/Ocultar Carrito");
			btnCarrito.setBackground(new Color(255, 255, 255));
			setImagenAdaptada(btnCarrito,"/img/carrito.png");
			btnCarrito.addActionListener(pCrt);
		}
		return btnCarrito;
	}
	private JScrollPane getScrollPaneCarrito() {
		if (scrollPaneCarrito == null) {
			scrollPaneCarrito = new JScrollPane();
			scrollPaneCarrito.setEnabled(false);
			scrollPaneCarrito.setViewportView(getTxtAreaCarrito());
		}
		return scrollPaneCarrito;
	}
	private JTextArea getTxtAreaCarrito() {
		if (txtAreaCarrito == null) {
			txtAreaCarrito = new JTextArea();
			txtAreaCarrito.setBackground(new Color(255, 255, 255));
			txtAreaCarrito.setEditable(false);
			txtAreaCarrito.setVisible(false);
			txtAreaCarrito.setText(pz.getOrderToStringShoppingCart());
		}
		return txtAreaCarrito;
	}
	private JPasswordField getPasswordFieldReserva() {
		if (passwordFieldReserva == null) {
			passwordFieldReserva = new JPasswordField();
			passwordFieldReserva.setBackground(new Color(255, 255, 255));
			passwordFieldReserva.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return passwordFieldReserva;
	}
	private JPanel getPanelPago() {
		if (panelPago == null) {
			panelPago = new JPanel();
			panelPago.setLayout(new GridLayout(0, 2, 0, 0));
			panelPago.add(getScrollPaneListaPedidos());
			panelPago.add(getPanelOpcionesFinales());
		}
		return panelPago;
	}
	private JScrollPane getScrollPaneListaPedidos() {
		if (scrollPaneListaPedidos == null) {
			scrollPaneListaPedidos = new JScrollPane();
			scrollPaneListaPedidos.setViewportView(getTextAreaPedidos());
		}
		return scrollPaneListaPedidos;
	}
	private JPanel getPanelOpcionesFinales() {
		if (panelOpcionesFinales == null) {
			panelOpcionesFinales = new JPanel();
			panelOpcionesFinales.setBackground(new Color(0, 0, 128));
			panelOpcionesFinales.setLayout(new BorderLayout(0, 0));
			panelOpcionesFinales.add(getPanelMetodoPago(), BorderLayout.CENTER);
			panelOpcionesFinales.add(getPanelEleccionJugar(), BorderLayout.NORTH);
			panelOpcionesFinales.add(getPanelBtnFinales(), BorderLayout.SOUTH);
		}
		return panelOpcionesFinales;
	}
	private JTextArea getTextAreaPedidos() {
		if (textAreaPedidos == null) {
			textAreaPedidos = new JTextArea();
			textAreaPedidos.setText("ojdowjdowjdowdowjdo\r\ndojdodjwojdowjdm\r\ndmwdjowjdo");
			textAreaPedidos.setFont(new Font("SansSerif", Font.PLAIN, 21));
		}
		return textAreaPedidos;
	}
	private JPanel getPanelMetodoPago() {
		if (panelMetodoPago == null) {
			panelMetodoPago = new JPanel();
			panelMetodoPago.setBackground(new Color(0, 0, 128));
			panelMetodoPago.setLayout(new GridLayout(4, 1, 0, 0));
			panelMetodoPago.add(getLblOpcionesPago());
			panelMetodoPago.add(getRdbtnTarjeta());
			panelMetodoPago.add(getRdbtnEfectivo());
		}
		return panelMetodoPago;
	}
	private JPanel getPanelEleccionJugar() {
		if (panelEleccionJugar == null) {
			panelEleccionJugar = new JPanel();
			panelEleccionJugar.setBackground(new Color(0, 0, 128));
			panelEleccionJugar.setLayout(new GridLayout(3, 1, 0, 0));
			panelEleccionJugar.add(getLblOpcionesJugar());
			panelEleccionJugar.add(getRdbtnJugar());
			panelEleccionJugar.add(getRdbtnNoJugar());
		}
		return panelEleccionJugar;
	}
	private JLabel getLblOpcionesJugar() {
		if (lblOpcionesJugar == null) {
			lblOpcionesJugar = new JLabel("\u00BFQuiere jugar para descuentos?");
			lblOpcionesJugar.setForeground(new Color(255, 255, 255));
			lblOpcionesJugar.setFont(new Font("SansSerif", Font.BOLD, 27));
		}
		return lblOpcionesJugar;
	}
	private JRadioButton getRdbtnJugar() {
		if (rdbtnJugar == null) {
			rdbtnJugar = new JRadioButton("Jugar");
			rdbtnJugar.setBackground(new Color(0, 0, 128));
			rdbtnJugar.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnJugar.setSelected(true);
			rdbtnJugar.setMnemonic('J');
			buttonGroupJugar.add(rdbtnJugar);
			rdbtnJugar.setForeground(new Color(255, 255, 255));
		}
		return rdbtnJugar;
	}
	private JRadioButton getRdbtnNoJugar() {
		if (rdbtnNoJugar == null) {
			rdbtnNoJugar = new JRadioButton("No jugar");
			rdbtnNoJugar.setBackground(new Color(0, 0, 128));
			rdbtnNoJugar.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnNoJugar.setMnemonic('N');
			buttonGroupJugar.add(rdbtnNoJugar);
			rdbtnNoJugar.setForeground(new Color(255, 255, 255));
		}
		return rdbtnNoJugar;
	}
	private JLabel getLblOpcionesPago() {
		if (lblOpcionesPago == null) {
			lblOpcionesPago = new JLabel("\u00BFC\u00F3mo desea pagar?");
			lblOpcionesPago.setHorizontalAlignment(SwingConstants.LEFT);
			lblOpcionesPago.setFont(new Font("SansSerif", Font.BOLD, 27));
			lblOpcionesPago.setForeground(new Color(255, 255, 255));
		}
		return lblOpcionesPago;
	}
	private JRadioButton getRdbtnTarjeta() {
		if (rdbtnTarjeta == null) {
			rdbtnTarjeta = new JRadioButton("Tarjeta");
			rdbtnTarjeta.setBackground(new Color(0, 0, 128));
			rdbtnTarjeta.setMnemonic('T');
			rdbtnTarjeta.setSelected(true);
			buttonGroupPago.add(rdbtnTarjeta);
			rdbtnTarjeta.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnTarjeta.setForeground(new Color(255, 255, 255));
			rdbtnTarjeta.setHorizontalAlignment(SwingConstants.LEFT);
		}
		return rdbtnTarjeta;
	}
	private JRadioButton getRdbtnEfectivo() {
		if (rdbtnEfectivo == null) {
			rdbtnEfectivo = new JRadioButton("Efectivo");
			rdbtnEfectivo.setBackground(new Color(0, 0, 128));
			rdbtnEfectivo.setMnemonic('E');
			buttonGroupPago.add(rdbtnEfectivo);
			rdbtnEfectivo.setForeground(new Color(255, 255, 255));
			rdbtnEfectivo.setFont(new Font("SansSerif", Font.PLAIN, 19));
		}
		return rdbtnEfectivo;
	}
	private JPanel getPanelBtnFinales() {
		if (panelBtnFinales == null) {
			panelBtnFinales = new JPanel();
			panelBtnFinales.setLayout(new GridLayout(0, 2, 0, 0));
			panelBtnFinales.add(getBtnCancelar());
			panelBtnFinales.add(getBtnFinalizaryPagar());
		}
		return panelBtnFinales;
	}
	private JButton getBtnCancelar() {
		if (btnCancelar == null) {
			btnCancelar = new JButton("Cancelar");
			btnCancelar.setForeground(new Color(255, 255, 255));
			btnCancelar.setBackground(new Color(255, 0, 0));
			btnCancelar.setFont(new Font("SansSerif", Font.PLAIN, 27));
			btnCancelar.setMnemonic('C');
			btnCancelar.setActionCommand("Menu");
			btnCancelar.addActionListener(pf);
		}
		return btnCancelar;
	}
	private JButton getBtnFinalizaryPagar() {
		if (btnFinalizaryPagar == null) {
			btnFinalizaryPagar = new JButton("Finalizar y pagar");
			btnFinalizaryPagar.setMnemonic('F');
			btnFinalizaryPagar.setBackground(new Color(50, 205, 50));
			btnFinalizaryPagar.setForeground(new Color(255, 255, 255));
			btnFinalizaryPagar.setFont(new Font("SansSerif", Font.PLAIN, 23));
		}
		return btnFinalizaryPagar;
	}
	private JMenuBar getMenuBar_4() {
		if (menuBar == null) {
			menuBar = new JMenuBar();
			menuBar.add(getMenu_1());
			menuBar.add(getMenu_2());
		}
		return menuBar;
	}
	private JMenu getMenu_1() {
		if (mnOptions == null) {
			mnOptions = new JMenu("Opciones");
			mnOptions.setMnemonic('O');
			mnOptions.add(getMntmNuevaSesion());
			mnOptions.add(getSeparator());
			mnOptions.add(getMntmSalida());
		}
		return mnOptions;
	}
	private JMenuItem getMntmSalida() {
		if (mntmSalida == null) {
			mntmSalida = new JMenuItem("Salida");
			mntmSalida.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_X, InputEvent.CTRL_DOWN_MASK));
			mntmSalida.addActionListener(pE);
		}
		return mntmSalida;
	}
	private JMenuItem getMntmNuevaSesion() {
		if (mntmNuevaSesion == null) {
			mntmNuevaSesion = new JMenuItem("Nueva Sesion");
			mntmNuevaSesion.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, InputEvent.CTRL_DOWN_MASK));
		}
		return mntmNuevaSesion;
	}
	private JSeparator getSeparator() {
		if (separator == null) {
			separator = new JSeparator();
		}
		return separator;
	}
	private JMenu getMenu_2() {
		if (mnAyuda == null) {
			mnAyuda = new JMenu("Ayuda");
			mnAyuda.setMnemonic('A');
			mnAyuda.add(getMntmAyuda());
		}
		return mnAyuda;
	}
	private JMenuItem getMntmAyuda() {
		if (mntmAyuda == null) {
			mntmAyuda = new JMenuItem("Abrir men\u00FA de ayuda");
			mntmAyuda.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F1, InputEvent.CTRL_DOWN_MASK));
		}
		return mntmAyuda;
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2024-12-29 23:02:30.932
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2024-12-29 23:02:30.932
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2024-12-29 23:02:32.779
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package uo.cpm.modulo.ui;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import java.awt.CardLayout;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.BorderLayout;
import javax.swing.JLabel;
import javax.swing.JButton;
import javax.swing.BoxLayout;
import java.awt.GridLayout;
import java.awt.Image;

import javax.swing.ImageIcon;
import java.awt.Color;
import java.awt.Font;
import javax.swing.border.LineBorder;

import uo.cpm.modulo.model.Producto;
import uo.cpm.modulo.service.Pizzeria;

import javax.swing.SwingConstants;
import java.awt.FlowLayout;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.Component;
import java.awt.Dimension;

import javax.swing.JTextField;
import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.InputEvent;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JPasswordField;
import javax.swing.JSplitPane;
import javax.swing.JRadioButton;
import javax.swing.ButtonGroup;
import javax.swing.JSeparator;

public class VentanaPrincipal extends JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private JPanel contentPane;
	private JPanel panelInicio;
	private JPanel panelBienvenida;
	private JPanel panelIdiomas;
	private JButton btnSpanish;
	private JLabel lblIngredients;
	private JButton btnEnglish;
	private JButton btnFrench;
	private JButton btnItalian;
	private JPanel panelSaludo;
	private JLabel lblWelcome;
	private JButton btnSiguiente_Datos;
	private JLabel lblIngredients2;
	private JLabel lblIngredients2_1;
	private ProcessFrame pf = new  ProcessFrame();
	private JPanel panelRegistro;
	private JPanel panelDatos;
	private JTextField textFieldDNI;
	private JLabel lblDNI;
	private JLabel lblReserva;
	private JPanel panelBtn;
	private JLabel lblPlaceHolder;
	private JButton btnSiguiente_Menu;
	private JLabel lblPlaceHolder_1;
	private JPanel panelSpacing;
	private JLabel lblPlaceHolder_1_1;
	private JPanel panelMenu;
	private JPanel panelFiltros;
	private JButton btnTodos;
	private JButton btnPizzas;
	private JButton btnEntrantes;
	private JButton btnEnsaladas;
	private JButton btnPostres;
	private JButton btnBebidas;
	private JScrollPane scrollPaneProductos;
	private JPanel panelProductos;
	private JPanel panelFinalizarMenu;
	private JLabel lblPlaceHolderMenu;
	private JButton btnFinalizar;
	private JLabel lblPlaceHolderMenu_2;
	private JLabel lblPlaceHolderMenu_1;
	private JLabel lblPlaceHolderMenu_3;
	private JPanel panelCarrito;
	private JButton btnCarrito;
	private JScrollPane scrollPaneCarrito;
	private JTextArea txtAreaCarrito;
	private ProcessCart pCrt = new ProcessCart();
	private JPasswordField passwordFieldReserva;
	private JPanel panelPago;
	private JScrollPane scrollPaneListaPedidos;
	private JPanel panelOpcionesFinales;
	private JTextArea textAreaPedidos;
	private JPanel panelMetodoPago;
	private JPanel panelEleccionJugar;
	private JLabel lblOpcionesJugar;
	private JRadioButton rdbtnJugar;
	private JRadioButton rdbtnNoJugar;
	private final ButtonGroup buttonGroupJugar = new ButtonGroup();
	private JLabel lblOpcionesPago;
	private JRadioButton rdbtnTarjeta;
	private JRadioButton rdbtnEfectivo;
	private JPanel panelBtnFinales;
	private JButton btnCancelar;
	private JButton btnFinalizaryPagar;
	private final ButtonGroup buttonGroupPago = new ButtonGroup();
	private JMenuBar menuBar;
	private JMenu mnOptions;
	private JMenuItem mntmSalida;
	private JMenuItem mntmNuevaSesion;
	private JSeparator separator;
	private JMenu mnAyuda;
	private JMenuItem mntmAyuda;
	private ProcessExit pE = new ProcessExit();
	private ProcessWindowHelpFocus pWHF = new  ProcessWindowHelpFocus();
	private Pizzeria pz;
	private Producto[] menuModel;
	private ProcessFilters pft = new ProcessFilters();
	private ProcessBuying pB = new Process
	class ProcessBuying implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			int pos = Integer.parseInt(e.getActionCommand());
			pz.addToOrder(menuModel[pos], 1);
			
		}
		
	}
	class ProcessFilters implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			int filter = Integer.parseInt(e.getActionCommand());
			quitarBotonesMenu();
			generarBotonesMenu(filter);
			
		}
		
	}
	class ProcessWindowHelpFocus extends WindowAdapter{
		@Override
		public void windowOpened(WindowEvent e) {
			getBtnSiguiente_Datos().requestFocus();
		}
	}
	class ProcessExit implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			confirmChoice();
			
		}

		
		
	}
	protected void confirmChoice() {
		if(JOptionPane.showConfirmDialog(null, "¬øEst√°s seguro/a de que quieres salir de la aplicaci√≥n?")==JOptionPane.YES_OPTION) {
			System.exit(0);
		}
	}
	class ProcessFrame implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			changeFrame(e);
			
		}

		
		
	}
	protected void changeFrame(ActionEvent e) {
		String frame = e.getActionCommand();
		((CardLayout)getContentPane().getLayout()).show(getContentPane(), frame);
		setTitle("Uniovi's: " + frame);
	}
	class ProcessCart implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			showShoppingCart();
			
		}

		
		
	}
	protected void showShoppingCart() {
		if(getTxtAreaCarrito().isVisible()) {
			getTxtAreaCarrito().setVisible(false);
		}else {
			getTxtAreaCarrito().setVisible(true);
		}
	}

	/**
	 * Create the frame.
	 */
	public VentanaPrincipal(Pizzeria pz) {
		this.pz = pz;
		addWindowListener(pWHF);
		setMinimumSize(new Dimension(550, 350));
		setTitle("Uniovi's ");
		setIconImage(Toolkit.getDefaultToolkit().getImage(VentanaPrincipal.class.getResource("/img/logo.png")));
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 900, 620);
		setLocationRelativeTo(null);
		setJMenuBar(getMenuBar_4());
		contentPane = new JPanel();
		contentPane.setBackground(new Color(255, 0, 0));
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(new CardLayout(0, 0));
		contentPane.add(getPanelInicio(), "pnInicio");
		contentPane.add(getPanelRegistro(), "Datos de Registro");
		contentPane.add(getPanelMenu(), "Menu");
		contentPane.add(getPanelPago(), "Revisar y Pagar");
	}

	private JPanel getPanelInicio() {
		if (panelInicio == null) {
			panelInicio = new JPanel();
			panelInicio.setBackground(new Color(255, 0, 0));
			panelInicio.setLayout(new BorderLayout(0, 0));
			panelInicio.add(getPanelBienvenida(), BorderLayout.CENTER);
			panelInicio.add(getPanelIdiomas(), BorderLayout.NORTH);
			panelInicio.add(getPanelSaludo(), BorderLayout.SOUTH);
		}
		return panelInicio;
	}
	private JPanel getPanelBienvenida() {
		if (panelBienvenida == null) {
			panelBienvenida = new JPanel();
			panelBienvenida.setBackground(new Color(0, 0, 139));
			panelBienvenida.setLayout(new BorderLayout(0, 0));
			panelBienvenida.add(getLblIngredients(), BorderLayout.CENTER);
			panelBienvenida.add(getLblIngredients2(), BorderLayout.WEST);
			panelBienvenida.add(getLblIngredients2_1(), BorderLayout.EAST);
		}
		return panelBienvenida;
	}
	private JPanel getPanelIdiomas() {
		if (panelIdiomas == null) {
			panelIdiomas = new JPanel();
			panelIdiomas.setBackground(new Color(255, 0, 0));
			panelIdiomas.setLayout(new GridLayout(0, 4, 0, 0));
			panelIdiomas.add(getBtnSpanish());
			panelIdiomas.add(getBtnEnglish());
			panelIdiomas.add(getBtnFrench());
			panelIdiomas.add(getBtnItalian());
		}
		return panelIdiomas;
	}
	private JButton getBtnSpanish() {
		if (btnSpanish == null) {
			btnSpanish = new JButton("");
			btnSpanish.setBackground(new Color(255, 255, 255));
			btnSpanish.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/es.png")));
		}
		return btnSpanish;
	}
	private JLabel getLblIngredients() {
		if (lblIngredients == null) {
			lblIngredients = new JLabel("");
			lblIngredients.setHorizontalAlignment(SwingConstants.CENTER);
			lblIngredients.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/bienvenida.png")));
		}
		return lblIngredients;
	}
	private JButton getBtnEnglish() {
		if (btnEnglish == null) {
			btnEnglish = new JButton("");
			btnEnglish.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/en.png")));
			btnEnglish.setBackground(Color.WHITE);
		}
		return btnEnglish;
	}
	private JButton getBtnFrench() {
		if (btnFrench == null) {
			btnFrench = new JButton("");
			btnFrench.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/fr.png")));
			btnFrench.setBackground(Color.WHITE);
		}
		return btnFrench;
	}
	private JButton getBtnItalian() {
		if (btnItalian == null) {
			btnItalian = new JButton("");
			btnItalian.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/it.png")));
			btnItalian.setBackground(Color.WHITE);
		}
		return btnItalian;
	}
	private JPanel getPanelSaludo() {
		if (panelSaludo == null) {
			panelSaludo = new JPanel();
			panelSaludo.setBackground(new Color(255, 0, 0));
			panelSaludo.setLayout(new GridLayout(0, 2, 0, 0));
			panelSaludo.add(getLblWelcome_1());
			panelSaludo.add(getBtnSiguiente_Datos());
		}
		return panelSaludo;
	}
	private JLabel getLblWelcome_1() {
		if (lblWelcome == null) {
			lblWelcome = new JLabel("\u00A1Bienvenido a Uniovi's!");
			lblWelcome.setHorizontalAlignment(SwingConstants.CENTER);
			lblWelcome.setForeground(Color.WHITE);
			lblWelcome.setFont(new Font("Dialog", Font.BOLD, 28));
			lblWelcome.setBorder(new LineBorder(new Color(0, 0, 0), 0));
			lblWelcome.setBackground(Color.WHITE);
		}
		return lblWelcome;
	}
	private JButton getBtnSiguiente_Datos() {
		if (btnSiguiente_Datos == null) {
			btnSiguiente_Datos = new JButton("Continuar");
			btnSiguiente_Datos.setAlignmentX(Component.RIGHT_ALIGNMENT);
			btnSiguiente_Datos.setBackground(new Color(50, 205, 50));
			btnSiguiente_Datos.setForeground(new Color(255, 255, 255));
			btnSiguiente_Datos.setFont(new Font("SansSerif", Font.PLAIN, 24));
			btnSiguiente_Datos.setMnemonic('C');
			btnSiguiente_Datos.setBorder(new LineBorder(new Color(0, 0, 0), 4, true));
			btnSiguiente_Datos.setActionCommand("Datos de Registro");
			btnSiguiente_Datos.addActionListener(pf);
		}
		return btnSiguiente_Datos;
	}
	private JLabel getLblIngredients2() {
		if (lblIngredients2 == null) {
			lblIngredients2 = new JLabel("");
			lblIngredients2.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/PI03.png")));
		}
		return lblIngredients2;
	}
	private JLabel getLblIngredients2_1() {
		if (lblIngredients2_1 == null) {
			lblIngredients2_1 = new JLabel("");
			lblIngredients2_1.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/BE02.png")));
		}
		return lblIngredients2_1;
	}
	private JPanel getPanelRegistro() {
		if (panelRegistro == null) {
			panelRegistro = new JPanel();
			panelRegistro.setLayout(new BorderLayout(0, 0));
			panelRegistro.add(getPanelDatos(), BorderLayout.CENTER);
			panelRegistro.add(getPanelBtn(), BorderLayout.SOUTH);
			panelRegistro.add(getPanelSpacing(), BorderLayout.EAST);
		}
		return panelRegistro;
	}
	private JPanel getPanelDatos() {
		if (panelDatos == null) {
			panelDatos = new JPanel();
			panelDatos.setBackground(new Color(0, 0, 128));
			panelDatos.setLayout(new GridLayout(6, 1, 0, 0));
			panelDatos.add(getLblDNI());
			panelDatos.add(getTextFieldDNI());
			panelDatos.add(getLblReserva());
			panelDatos.add(getPasswordFieldReserva());
		}
		return panelDatos;
	}
	private JTextField getTextFieldDNI() {
		if (textFieldDNI == null) {
			textFieldDNI = new JTextField();
			textFieldDNI.setFont(new Font("SansSerif", Font.PLAIN, 28));
			textFieldDNI.setColumns(10);
		}
		return textFieldDNI;
	}
	private JLabel getLblDNI() {
		if (lblDNI == null) {
			lblDNI = new JLabel("DNI / NIE:");
			lblDNI.setLabelFor(getTextFieldDNI());
			lblDNI.setDisplayedMnemonic('D');
			lblDNI.setForeground(new Color(255, 255, 255));
			lblDNI.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return lblDNI;
	}
	private JLabel getLblReserva() {
		if (lblReserva == null) {
			lblReserva = new JLabel("N\u00BA / C\u00F3digo de reserva");
			lblReserva.setLabelFor(getPasswordFieldReserva());
			lblReserva.setDisplayedMnemonic('N');
			lblReserva.setForeground(new Color(255, 255, 255));
			lblReserva.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return lblReserva;
	}
	private JPanel getPanelBtn() {
		if (panelBtn == null) {
			panelBtn = new JPanel();
			panelBtn.setBackground(new Color(0, 0, 128));
			panelBtn.setLayout(new GridLayout(1, 0, 0, 0));
			panelBtn.add(getLblPlaceHolder_1());
			panelBtn.add(getLblPlaceHolder());
			panelBtn.add(getBtnSiguiente_Menu());
		}
		return panelBtn;
	}
	private JLabel getLblPlaceHolder() {
		if (lblPlaceHolder == null) {
			lblPlaceHolder = new JLabel("");
			lblPlaceHolder.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder;
	}
	private JButton getBtnSiguiente_Menu() {
		if (btnSiguiente_Menu == null) {
			btnSiguiente_Menu = new JButton("Continuar");
			btnSiguiente_Menu.setForeground(new Color(255, 255, 255));
			btnSiguiente_Menu.setBackground(new Color(50, 205, 50));
			btnSiguiente_Menu.setFont(new Font("SansSerif", Font.PLAIN, 28));
			btnSiguiente_Menu.setMnemonic('C');
			btnSiguiente_Menu.setActionCommand("Menu");
			btnSiguiente_Menu.addActionListener(pf);
		}
		return btnSiguiente_Menu;
	}
	private JLabel getLblPlaceHolder_1() {
		if (lblPlaceHolder_1 == null) {
			lblPlaceHolder_1 = new JLabel("");
			lblPlaceHolder_1.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder_1;
	}
	private JPanel getPanelSpacing() {
		if (panelSpacing == null) {
			panelSpacing = new JPanel();
			panelSpacing.setBackground(new Color(0, 0, 128));
			panelSpacing.add(getLblPlaceHolder_1_1());
		}
		return panelSpacing;
	}
	private JLabel getLblPlaceHolder_1_1() {
		if (lblPlaceHolder_1_1 == null) {
			lblPlaceHolder_1_1 = new JLabel("                                                                                                            ");
			lblPlaceHolder_1_1.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder_1_1;
	}
	private JPanel getPanelMenu() {
		if (panelMenu == null) {
			panelMenu = new JPanel();
			panelMenu.setLayout(new BorderLayout(0, 0));
			panelMenu.add(getPanelFiltros(), BorderLayout.WEST);
			panelMenu.add(getScrollPaneProductos(), BorderLayout.CENTER);
			panelMenu.add(getPanelFinalizarMenu(), BorderLayout.SOUTH);
			panelMenu.add(getPanelCarrito(), BorderLayout.EAST);
		}
		return panelMenu;
	}
	private JPanel getPanelFiltros() {
		if (panelFiltros == null) {
			panelFiltros = new JPanel();
			panelFiltros.setLayout(new GridLayout(6, 0, 0, 0));
			panelFiltros.add(getBtnTodos());
			panelFiltros.add(getBtnPizzas());
			panelFiltros.add(getBtnEntrantes());
			panelFiltros.add(getBtnEnsaladas());
			panelFiltros.add(getBtnPostres());
			panelFiltros.add(getBtnBebidas());
		}
		return panelFiltros;
	}
	private JButton getBtnTodos() {
		if (btnTodos == null) {
			btnTodos = new JButton("");
			btnTodos.setText("Todos");
			btnTodos.setVerticalTextPosition(SwingConstants.TOP);
			btnTodos.setHorizontalTextPosition(SwingConstants.CENTER);
			btnTodos.setBackground(new Color(255, 255, 255));
			btnTodos.setToolTipText("Filtrar - Todos");
			setImagenAdaptada(btnTodos, "/img/bienvenida.png");
			btnTodos.setActionCommand(String.valueOf(Pizzeria.TODOS));
			btnTodos.addActionListener(pft);
		}
		return btnTodos;
	}
	private JButton getBtnPizzas() {
		if (btnPizzas == null) {
			btnPizzas = new JButton("");
			btnPizzas.setText("Pizzas");
			btnPizzas.setVerticalTextPosition(SwingConstants.TOP);
			btnPizzas.setHorizontalTextPosition(SwingConstants.CENTER);
			btnPizzas.setBackground(new Color(255, 255, 255));
			btnPizzas.setToolTipText("Filtrar - Pizzas");
			setImagenAdaptada(btnPizzas,"/img/PI01.png");
			btnPizzas.addActionListener(pft);
			btnPizzas.setActionCommand(String.valueOf(Pizzeria.PIZZAS));
		}
		return btnPizzas;
	}
	private JButton getBtnEntrantes() {
		if (btnEntrantes == null) {
			btnEntrantes = new JButton("");
			btnEntrantes.setText("Entrantes");
			btnEntrantes.setVerticalTextPosition(SwingConstants.TOP);
			btnEntrantes.setHorizontalTextPosition(SwingConstants.CENTER);
			btnEntrantes.setBackground(new Color(255, 255, 255));
			btnEntrantes.setToolTipText("Filtrar - Entrantes");
			setImagenAdaptada(btnEntrantes, "/img/ET02.png");
			btnEntrantes.addActionListener(pft);
			btnEntrantes.setActionCommand(String.valueOf(Pizzeria.ENTRANTES));
		}
		return btnEntrantes;
	}
	private JButton getBtnEnsaladas() {
		if (btnEnsaladas == null) {
			btnEnsaladas = new JButton("Ensaladas");
			btnEnsaladas.setText("Ensaladas");
			btnEnsaladas.setVerticalTextPosition(SwingConstants.TOP);
			btnEnsaladas.setHorizontalTextPosition(SwingConstants.CENTER);
			btnEnsaladas.setBackground(new Color(255, 255, 255));
			btnEnsaladas.setToolTipText("Filtrar - Ensaladas");
			setImagenAdaptada(btnEnsaladas, "/img/EN02.png");
			btnEnsaladas.addActionListener(pft);
			btnEnsaladas.setActionCommand(String.valueOf(Pizzeria.ENSALADAS));
		}
		return btnEnsaladas;
	}
	private JButton getBtnPostres() {
		if (btnPostres == null) {
			btnPostres = new JButton("");
			btnPostres.setText("Postres");
			btnPostres.setBackground(new Color(255, 255, 255));
			btnPostres.setVerticalTextPosition(SwingConstants.TOP);
			btnPostres.setHorizontalTextPosition(SwingConstants.CENTER);
			btnPostres.setToolTipText("Filtrar - Postres");
			btnPostres.setActionCommand(String.valueOf(Pizzeria.POSTRES));
			setImagenAdaptada(btnPostres, "/img/PO01.png");
			btnPostres.addActionListener(pft);
		}
		return btnPostres;
	}
	private JButton getBtnBebidas() {
		if (btnBebidas == null) {
			btnBebidas = new JButton("");
			btnBebidas.setText("Bebidas");
			btnBebidas.setVerticalTextPosition(SwingConstants.TOP);
			btnBebidas.setHorizontalTextPosition(SwingConstants.CENTER);
			btnBebidas.setBackground(new Color(255, 255, 255));
			btnBebidas.setToolTipText("Filtrar - Bebidas");
			setImagenAdaptada(btnBebidas, "/img/BE03.png");
			btnBebidas.addActionListener(pft);
			btnBebidas.setActionCommand(String.valueOf(Pizzeria.BEBIDAS));
		}
		return btnBebidas;
	}
	private void setImagenAdaptada(JButton boton, String rutaImagen){
		 Image imgOriginal = new ImageIcon(getClass().getResource(rutaImagen)).getImage(); 
		 Image imgEscalada = imgOriginal.getScaledInstance((int) (100), (int) (100),Image.SCALE_SMOOTH);
		 //si se quiere reescalar la ventana, este 100 tendria que cambiarse por el width y el height  respectivamente de la imagen para que as√≠ se reescale cada vez que cambias el tama√±o
		 //adem√°s este m√©todo deber√≠a llamarse en el constructor de la ventana mientras se usa un evento componentResized
		 boton.setIcon(new ImageIcon(imgEscalada));
	}
	private JScrollPane getScrollPaneProductos() {
		if (scrollPaneProductos == null) {
			scrollPaneProductos = new JScrollPane();
			scrollPaneProductos.setViewportView(getPanelProductos());
		}
		return scrollPaneProductos;
	}
	private JPanel getPanelProductos() {
		if (panelProductos == null) {
			panelProductos = new JPanel();
			panelProductos.setBackground(new Color(0, 0, 128));
			panelProductos.setLayout(new GridLayout(0, 4, 40, 40));
			generarBotonesMenu(pz.TODOS);
		}
		return panelProductos;
	}
	private void quitarBotonesMenu() {
		getPanelProductos().removeAll();
		getPanelProductos().repaint();
	}
	protected void generarBotonesMenu(int filter) {
			menuModel = pz.typeOfFilter(filter);
		for(int i=0; i<menuModel.length; i++) {
			JButton j = new JButton("");
			j.setText(menuModel[i].toStringMenu());
			j.setVerticalTextPosition(SwingConstants.BOTTOM); 
			j.setHorizontalTextPosition(SwingConstants.CENTER);
			setImagenAdaptada(j, "/img/" +menuModel[i].getCode() + ".png");
			j.setBackground(Color.black);
			j.setForeground(Color.white);
			if(i==0 && menuModel[i].getType().equals("Pizza")) {
				j.setBorder(new LineBorder(Color.red, 8));
				j.setText("¬°Pizza del d√≠a! - " + j.getText());
			}
			j.setActionCommand(String.valueOf(i));
			j.
			panelProductos.add(j);
			validate();
		}
	}
	private JPanel getPanelFinalizarMenu() {
		if (panelFinalizarMenu == null) {
			panelFinalizarMenu = new JPanel();
			panelFinalizarMenu.setBackground(new Color(128, 0, 0));
			panelFinalizarMenu.setLayout(new GridLayout(0, 5, 0, 0));
			panelFinalizarMenu.add(getLblPlaceHolderMenu());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_3());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_1());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_2());
			panelFinalizarMenu.add(getBtnFinalizar());
		}
		return panelFinalizarMenu;
	}
	private JLabel getLblPlaceHolderMenu() {
		if (lblPlaceHolderMenu == null) {
			lblPlaceHolderMenu = new JLabel("");
		}
		return lblPlaceHolderMenu;
	}
	private JButton getBtnFinalizar() {
		if (btnFinalizar == null) {
			btnFinalizar = new JButton("Finalizar");
			btnFinalizar.setMnemonic('F');
			btnFinalizar.setForeground(new Color(255, 255, 255));
			btnFinalizar.setBackground(new Color(50, 205, 50));
			btnFinalizar.setFont(new Font("SansSerif", Font.PLAIN, 28));
			btnFinalizar.setActionCommand("Revisar y Pagar");
			btnFinalizar.addActionListener(pf);
		}
		return btnFinalizar;
	}
	private JLabel getLblPlaceHolderMenu_2() {
		if (lblPlaceHolderMenu_2 == null) {
			lblPlaceHolderMenu_2 = new JLabel("");
		}
		return lblPlaceHolderMenu_2;
	}
	private JLabel getLblPlaceHolderMenu_1() {
		if (lblPlaceHolderMenu_1 == null) {
			lblPlaceHolderMenu_1 = new JLabel("");
		}
		return lblPlaceHolderMenu_1;
	}
	private JLabel getLblPlaceHolderMenu_3() {
		if (lblPlaceHolderMenu_3 == null) {
			lblPlaceHolderMenu_3 = new JLabel("");
		}
		return lblPlaceHolderMenu_3;
	}
	private JPanel getPanelCarrito() {
		if (panelCarrito == null) {
			panelCarrito = new JPanel();
			panelCarrito.setBackground(new Color(128, 0, 0));
			panelCarrito.setLayout(new BorderLayout(0, 0));
			panelCarrito.add(getBtnCarrito(), BorderLayout.NORTH);
			panelCarrito.add(getScrollPaneCarrito());
		}
		return panelCarrito;
	}
	private JButton getBtnCarrito() {
		if (btnCarrito == null) {
			btnCarrito = new JButton("");
			btnCarrito.setToolTipText("Mostrar/Ocultar Carrito");
			btnCarrito.setBackground(new Color(255, 255, 255));
			setImagenAdaptada(btnCarrito,"/img/carrito.png");
			btnCarrito.addActionListener(pCrt);
		}
		return btnCarrito;
	}
	private JScrollPane getScrollPaneCarrito() {
		if (scrollPaneCarrito == null) {
			scrollPaneCarrito = new JScrollPane();
			scrollPaneCarrito.setEnabled(false);
			scrollPaneCarrito.setViewportView(getTxtAreaCarrito());
		}
		return scrollPaneCarrito;
	}
	private JTextArea getTxtAreaCarrito() {
		if (txtAreaCarrito == null) {
			txtAreaCarrito = new JTextArea();
			txtAreaCarrito.setBackground(new Color(255, 255, 255));
			txtAreaCarrito.setEditable(false);
			txtAreaCarrito.setVisible(false);
			txtAreaCarrito.setText(pz.getOrderToStringShoppingCart());
		}
		return txtAreaCarrito;
	}
	private JPasswordField getPasswordFieldReserva() {
		if (passwordFieldReserva == null) {
			passwordFieldReserva = new JPasswordField();
			passwordFieldReserva.setBackground(new Color(255, 255, 255));
			passwordFieldReserva.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return passwordFieldReserva;
	}
	private JPanel getPanelPago() {
		if (panelPago == null) {
			panelPago = new JPanel();
			panelPago.setLayout(new GridLayout(0, 2, 0, 0));
			panelPago.add(getScrollPaneListaPedidos());
			panelPago.add(getPanelOpcionesFinales());
		}
		return panelPago;
	}
	private JScrollPane getScrollPaneListaPedidos() {
		if (scrollPaneListaPedidos == null) {
			scrollPaneListaPedidos = new JScrollPane();
			scrollPaneListaPedidos.setViewportView(getTextAreaPedidos());
		}
		return scrollPaneListaPedidos;
	}
	private JPanel getPanelOpcionesFinales() {
		if (panelOpcionesFinales == null) {
			panelOpcionesFinales = new JPanel();
			panelOpcionesFinales.setBackground(new Color(0, 0, 128));
			panelOpcionesFinales.setLayout(new BorderLayout(0, 0));
			panelOpcionesFinales.add(getPanelMetodoPago(), BorderLayout.CENTER);
			panelOpcionesFinales.add(getPanelEleccionJugar(), BorderLayout.NORTH);
			panelOpcionesFinales.add(getPanelBtnFinales(), BorderLayout.SOUTH);
		}
		return panelOpcionesFinales;
	}
	private JTextArea getTextAreaPedidos() {
		if (textAreaPedidos == null) {
			textAreaPedidos = new JTextArea();
			textAreaPedidos.setText("ojdowjdowjdowdowjdo\r\ndojdodjwojdowjdm\r\ndmwdjowjdo");
			textAreaPedidos.setFont(new Font("SansSerif", Font.PLAIN, 21));
		}
		return textAreaPedidos;
	}
	private JPanel getPanelMetodoPago() {
		if (panelMetodoPago == null) {
			panelMetodoPago = new JPanel();
			panelMetodoPago.setBackground(new Color(0, 0, 128));
			panelMetodoPago.setLayout(new GridLayout(4, 1, 0, 0));
			panelMetodoPago.add(getLblOpcionesPago());
			panelMetodoPago.add(getRdbtnTarjeta());
			panelMetodoPago.add(getRdbtnEfectivo());
		}
		return panelMetodoPago;
	}
	private JPanel getPanelEleccionJugar() {
		if (panelEleccionJugar == null) {
			panelEleccionJugar = new JPanel();
			panelEleccionJugar.setBackground(new Color(0, 0, 128));
			panelEleccionJugar.setLayout(new GridLayout(3, 1, 0, 0));
			panelEleccionJugar.add(getLblOpcionesJugar());
			panelEleccionJugar.add(getRdbtnJugar());
			panelEleccionJugar.add(getRdbtnNoJugar());
		}
		return panelEleccionJugar;
	}
	private JLabel getLblOpcionesJugar() {
		if (lblOpcionesJugar == null) {
			lblOpcionesJugar = new JLabel("\u00BFQuiere jugar para descuentos?");
			lblOpcionesJugar.setForeground(new Color(255, 255, 255));
			lblOpcionesJugar.setFont(new Font("SansSerif", Font.BOLD, 27));
		}
		return lblOpcionesJugar;
	}
	private JRadioButton getRdbtnJugar() {
		if (rdbtnJugar == null) {
			rdbtnJugar = new JRadioButton("Jugar");
			rdbtnJugar.setBackground(new Color(0, 0, 128));
			rdbtnJugar.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnJugar.setSelected(true);
			rdbtnJugar.setMnemonic('J');
			buttonGroupJugar.add(rdbtnJugar);
			rdbtnJugar.setForeground(new Color(255, 255, 255));
		}
		return rdbtnJugar;
	}
	private JRadioButton getRdbtnNoJugar() {
		if (rdbtnNoJugar == null) {
			rdbtnNoJugar = new JRadioButton("No jugar");
			rdbtnNoJugar.setBackground(new Color(0, 0, 128));
			rdbtnNoJugar.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnNoJugar.setMnemonic('N');
			buttonGroupJugar.add(rdbtnNoJugar);
			rdbtnNoJugar.setForeground(new Color(255, 255, 255));
		}
		return rdbtnNoJugar;
	}
	private JLabel getLblOpcionesPago() {
		if (lblOpcionesPago == null) {
			lblOpcionesPago = new JLabel("\u00BFC\u00F3mo desea pagar?");
			lblOpcionesPago.setHorizontalAlignment(SwingConstants.LEFT);
			lblOpcionesPago.setFont(new Font("SansSerif", Font.BOLD, 27));
			lblOpcionesPago.setForeground(new Color(255, 255, 255));
		}
		return lblOpcionesPago;
	}
	private JRadioButton getRdbtnTarjeta() {
		if (rdbtnTarjeta == null) {
			rdbtnTarjeta = new JRadioButton("Tarjeta");
			rdbtnTarjeta.setBackground(new Color(0, 0, 128));
			rdbtnTarjeta.setMnemonic('T');
			rdbtnTarjeta.setSelected(true);
			buttonGroupPago.add(rdbtnTarjeta);
			rdbtnTarjeta.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnTarjeta.setForeground(new Color(255, 255, 255));
			rdbtnTarjeta.setHorizontalAlignment(SwingConstants.LEFT);
		}
		return rdbtnTarjeta;
	}
	private JRadioButton getRdbtnEfectivo() {
		if (rdbtnEfectivo == null) {
			rdbtnEfectivo = new JRadioButton("Efectivo");
			rdbtnEfectivo.setBackground(new Color(0, 0, 128));
			rdbtnEfectivo.setMnemonic('E');
			buttonGroupPago.add(rdbtnEfectivo);
			rdbtnEfectivo.setForeground(new Color(255, 255, 255));
			rdbtnEfectivo.setFont(new Font("SansSerif", Font.PLAIN, 19));
		}
		return rdbtnEfectivo;
	}
	private JPanel getPanelBtnFinales() {
		if (panelBtnFinales == null) {
			panelBtnFinales = new JPanel();
			panelBtnFinales.setLayout(new GridLayout(0, 2, 0, 0));
			panelBtnFinales.add(getBtnCancelar());
			panelBtnFinales.add(getBtnFinalizaryPagar());
		}
		return panelBtnFinales;
	}
	private JButton getBtnCancelar() {
		if (btnCancelar == null) {
			btnCancelar = new JButton("Cancelar");
			btnCancelar.setForeground(new Color(255, 255, 255));
			btnCancelar.setBackground(new Color(255, 0, 0));
			btnCancelar.setFont(new Font("SansSerif", Font.PLAIN, 27));
			btnCancelar.setMnemonic('C');
			btnCancelar.setActionCommand("Menu");
			btnCancelar.addActionListener(pf);
		}
		return btnCancelar;
	}
	private JButton getBtnFinalizaryPagar() {
		if (btnFinalizaryPagar == null) {
			btnFinalizaryPagar = new JButton("Finalizar y pagar");
			btnFinalizaryPagar.setMnemonic('F');
			btnFinalizaryPagar.setBackground(new Color(50, 205, 50));
			btnFinalizaryPagar.setForeground(new Color(255, 255, 255));
			btnFinalizaryPagar.setFont(new Font("SansSerif", Font.PLAIN, 23));
		}
		return btnFinalizaryPagar;
	}
	private JMenuBar getMenuBar_4() {
		if (menuBar == null) {
			menuBar = new JMenuBar();
			menuBar.add(getMenu_1());
			menuBar.add(getMenu_2());
		}
		return menuBar;
	}
	private JMenu getMenu_1() {
		if (mnOptions == null) {
			mnOptions = new JMenu("Opciones");
			mnOptions.setMnemonic('O');
			mnOptions.add(getMntmNuevaSesion());
			mnOptions.add(getSeparator());
			mnOptions.add(getMntmSalida());
		}
		return mnOptions;
	}
	private JMenuItem getMntmSalida() {
		if (mntmSalida == null) {
			mntmSalida = new JMenuItem("Salida");
			mntmSalida.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_X, InputEvent.CTRL_DOWN_MASK));
			mntmSalida.addActionListener(pE);
		}
		return mntmSalida;
	}
	private JMenuItem getMntmNuevaSesion() {
		if (mntmNuevaSesion == null) {
			mntmNuevaSesion = new JMenuItem("Nueva Sesion");
			mntmNuevaSesion.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, InputEvent.CTRL_DOWN_MASK));
		}
		return mntmNuevaSesion;
	}
	private JSeparator getSeparator() {
		if (separator == null) {
			separator = new JSeparator();
		}
		return separator;
	}
	private JMenu getMenu_2() {
		if (mnAyuda == null) {
			mnAyuda = new JMenu("Ayuda");
			mnAyuda.setMnemonic('A');
			mnAyuda.add(getMntmAyuda());
		}
		return mnAyuda;
	}
	private JMenuItem getMntmAyuda() {
		if (mntmAyuda == null) {
			mntmAyuda = new JMenuItem("Abrir men\u00FA de ayuda");
			mntmAyuda.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F1, InputEvent.CTRL_DOWN_MASK));
		}
		return mntmAyuda;
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2024-12-29 23:02:32.780
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2024-12-29 23:02:32.780
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2024-12-29 23:02:32.797
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package uo.cpm.modulo.ui;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import java.awt.CardLayout;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.BorderLayout;
import javax.swing.JLabel;
import javax.swing.JButton;
import javax.swing.BoxLayout;
import java.awt.GridLayout;
import java.awt.Image;

import javax.swing.ImageIcon;
import java.awt.Color;
import java.awt.Font;
import javax.swing.border.LineBorder;

import uo.cpm.modulo.model.Producto;
import uo.cpm.modulo.service.Pizzeria;

import javax.swing.SwingConstants;
import java.awt.FlowLayout;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.Component;
import java.awt.Dimension;

import javax.swing.JTextField;
import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.InputEvent;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JPasswordField;
import javax.swing.JSplitPane;
import javax.swing.JRadioButton;
import javax.swing.ButtonGroup;
import javax.swing.JSeparator;

public class VentanaPrincipal extends JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private JPanel contentPane;
	private JPanel panelInicio;
	private JPanel panelBienvenida;
	private JPanel panelIdiomas;
	private JButton btnSpanish;
	private JLabel lblIngredients;
	private JButton btnEnglish;
	private JButton btnFrench;
	private JButton btnItalian;
	private JPanel panelSaludo;
	private JLabel lblWelcome;
	private JButton btnSiguiente_Datos;
	private JLabel lblIngredients2;
	private JLabel lblIngredients2_1;
	private ProcessFrame pf = new  ProcessFrame();
	private JPanel panelRegistro;
	private JPanel panelDatos;
	private JTextField textFieldDNI;
	private JLabel lblDNI;
	private JLabel lblReserva;
	private JPanel panelBtn;
	private JLabel lblPlaceHolder;
	private JButton btnSiguiente_Menu;
	private JLabel lblPlaceHolder_1;
	private JPanel panelSpacing;
	private JLabel lblPlaceHolder_1_1;
	private JPanel panelMenu;
	private JPanel panelFiltros;
	private JButton btnTodos;
	private JButton btnPizzas;
	private JButton btnEntrantes;
	private JButton btnEnsaladas;
	private JButton btnPostres;
	private JButton btnBebidas;
	private JScrollPane scrollPaneProductos;
	private JPanel panelProductos;
	private JPanel panelFinalizarMenu;
	private JLabel lblPlaceHolderMenu;
	private JButton btnFinalizar;
	private JLabel lblPlaceHolderMenu_2;
	private JLabel lblPlaceHolderMenu_1;
	private JLabel lblPlaceHolderMenu_3;
	private JPanel panelCarrito;
	private JButton btnCarrito;
	private JScrollPane scrollPaneCarrito;
	private JTextArea txtAreaCarrito;
	private ProcessCart pCrt = new ProcessCart();
	private JPasswordField passwordFieldReserva;
	private JPanel panelPago;
	private JScrollPane scrollPaneListaPedidos;
	private JPanel panelOpcionesFinales;
	private JTextArea textAreaPedidos;
	private JPanel panelMetodoPago;
	private JPanel panelEleccionJugar;
	private JLabel lblOpcionesJugar;
	private JRadioButton rdbtnJugar;
	private JRadioButton rdbtnNoJugar;
	private final ButtonGroup buttonGroupJugar = new ButtonGroup();
	private JLabel lblOpcionesPago;
	private JRadioButton rdbtnTarjeta;
	private JRadioButton rdbtnEfectivo;
	private JPanel panelBtnFinales;
	private JButton btnCancelar;
	private JButton btnFinalizaryPagar;
	private final ButtonGroup buttonGroupPago = new ButtonGroup();
	private JMenuBar menuBar;
	private JMenu mnOptions;
	private JMenuItem mntmSalida;
	private JMenuItem mntmNuevaSesion;
	private JSeparator separator;
	private JMenu mnAyuda;
	private JMenuItem mntmAyuda;
	private ProcessExit pE = new ProcessExit();
	private ProcessWindowHelpFocus pWHF = new  ProcessWindowHelpFocus();
	private Pizzeria pz;
	private Producto[] menuModel;
	private ProcessFilters pft = new ProcessFilters();
	private ProcessBuying pB = new Process
	class ProcessBuying implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			int pos = Integer.parseInt(e.getActionCommand());
			pz.addToOrder(menuModel[pos], 1);
			
		}
		
	}
	class ProcessFilters implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			int filter = Integer.parseInt(e.getActionCommand());
			quitarBotonesMenu();
			generarBotonesMenu(filter);
			
		}
		
	}
	class ProcessWindowHelpFocus extends WindowAdapter{
		@Override
		public void windowOpened(WindowEvent e) {
			getBtnSiguiente_Datos().requestFocus();
		}
	}
	class ProcessExit implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			confirmChoice();
			
		}

		
		
	}
	protected void confirmChoice() {
		if(JOptionPane.showConfirmDialog(null, "¬øEst√°s seguro/a de que quieres salir de la aplicaci√≥n?")==JOptionPane.YES_OPTION) {
			System.exit(0);
		}
	}
	class ProcessFrame implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			changeFrame(e);
			
		}

		
		
	}
	protected void changeFrame(ActionEvent e) {
		String frame = e.getActionCommand();
		((CardLayout)getContentPane().getLayout()).show(getContentPane(), frame);
		setTitle("Uniovi's: " + frame);
	}
	class ProcessCart implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			showShoppingCart();
			
		}

		
		
	}
	protected void showShoppingCart() {
		if(getTxtAreaCarrito().isVisible()) {
			getTxtAreaCarrito().setVisible(false);
		}else {
			getTxtAreaCarrito().setVisible(true);
		}
	}

	/**
	 * Create the frame.
	 */
	public VentanaPrincipal(Pizzeria pz) {
		this.pz = pz;
		addWindowListener(pWHF);
		setMinimumSize(new Dimension(550, 350));
		setTitle("Uniovi's ");
		setIconImage(Toolkit.getDefaultToolkit().getImage(VentanaPrincipal.class.getResource("/img/logo.png")));
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 900, 620);
		setLocationRelativeTo(null);
		setJMenuBar(getMenuBar_4());
		contentPane = new JPanel();
		contentPane.setBackground(new Color(255, 0, 0));
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(new CardLayout(0, 0));
		contentPane.add(getPanelInicio(), "pnInicio");
		contentPane.add(getPanelRegistro(), "Datos de Registro");
		contentPane.add(getPanelMenu(), "Menu");
		contentPane.add(getPanelPago(), "Revisar y Pagar");
	}

	private JPanel getPanelInicio() {
		if (panelInicio == null) {
			panelInicio = new JPanel();
			panelInicio.setBackground(new Color(255, 0, 0));
			panelInicio.setLayout(new BorderLayout(0, 0));
			panelInicio.add(getPanelBienvenida(), BorderLayout.CENTER);
			panelInicio.add(getPanelIdiomas(), BorderLayout.NORTH);
			panelInicio.add(getPanelSaludo(), BorderLayout.SOUTH);
		}
		return panelInicio;
	}
	private JPanel getPanelBienvenida() {
		if (panelBienvenida == null) {
			panelBienvenida = new JPanel();
			panelBienvenida.setBackground(new Color(0, 0, 139));
			panelBienvenida.setLayout(new BorderLayout(0, 0));
			panelBienvenida.add(getLblIngredients(), BorderLayout.CENTER);
			panelBienvenida.add(getLblIngredients2(), BorderLayout.WEST);
			panelBienvenida.add(getLblIngredients2_1(), BorderLayout.EAST);
		}
		return panelBienvenida;
	}
	private JPanel getPanelIdiomas() {
		if (panelIdiomas == null) {
			panelIdiomas = new JPanel();
			panelIdiomas.setBackground(new Color(255, 0, 0));
			panelIdiomas.setLayout(new GridLayout(0, 4, 0, 0));
			panelIdiomas.add(getBtnSpanish());
			panelIdiomas.add(getBtnEnglish());
			panelIdiomas.add(getBtnFrench());
			panelIdiomas.add(getBtnItalian());
		}
		return panelIdiomas;
	}
	private JButton getBtnSpanish() {
		if (btnSpanish == null) {
			btnSpanish = new JButton("");
			btnSpanish.setBackground(new Color(255, 255, 255));
			btnSpanish.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/es.png")));
		}
		return btnSpanish;
	}
	private JLabel getLblIngredients() {
		if (lblIngredients == null) {
			lblIngredients = new JLabel("");
			lblIngredients.setHorizontalAlignment(SwingConstants.CENTER);
			lblIngredients.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/bienvenida.png")));
		}
		return lblIngredients;
	}
	private JButton getBtnEnglish() {
		if (btnEnglish == null) {
			btnEnglish = new JButton("");
			btnEnglish.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/en.png")));
			btnEnglish.setBackground(Color.WHITE);
		}
		return btnEnglish;
	}
	private JButton getBtnFrench() {
		if (btnFrench == null) {
			btnFrench = new JButton("");
			btnFrench.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/fr.png")));
			btnFrench.setBackground(Color.WHITE);
		}
		return btnFrench;
	}
	private JButton getBtnItalian() {
		if (btnItalian == null) {
			btnItalian = new JButton("");
			btnItalian.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/it.png")));
			btnItalian.setBackground(Color.WHITE);
		}
		return btnItalian;
	}
	private JPanel getPanelSaludo() {
		if (panelSaludo == null) {
			panelSaludo = new JPanel();
			panelSaludo.setBackground(new Color(255, 0, 0));
			panelSaludo.setLayout(new GridLayout(0, 2, 0, 0));
			panelSaludo.add(getLblWelcome_1());
			panelSaludo.add(getBtnSiguiente_Datos());
		}
		return panelSaludo;
	}
	private JLabel getLblWelcome_1() {
		if (lblWelcome == null) {
			lblWelcome = new JLabel("\u00A1Bienvenido a Uniovi's!");
			lblWelcome.setHorizontalAlignment(SwingConstants.CENTER);
			lblWelcome.setForeground(Color.WHITE);
			lblWelcome.setFont(new Font("Dialog", Font.BOLD, 28));
			lblWelcome.setBorder(new LineBorder(new Color(0, 0, 0), 0));
			lblWelcome.setBackground(Color.WHITE);
		}
		return lblWelcome;
	}
	private JButton getBtnSiguiente_Datos() {
		if (btnSiguiente_Datos == null) {
			btnSiguiente_Datos = new JButton("Continuar");
			btnSiguiente_Datos.setAlignmentX(Component.RIGHT_ALIGNMENT);
			btnSiguiente_Datos.setBackground(new Color(50, 205, 50));
			btnSiguiente_Datos.setForeground(new Color(255, 255, 255));
			btnSiguiente_Datos.setFont(new Font("SansSerif", Font.PLAIN, 24));
			btnSiguiente_Datos.setMnemonic('C');
			btnSiguiente_Datos.setBorder(new LineBorder(new Color(0, 0, 0), 4, true));
			btnSiguiente_Datos.setActionCommand("Datos de Registro");
			btnSiguiente_Datos.addActionListener(pf);
		}
		return btnSiguiente_Datos;
	}
	private JLabel getLblIngredients2() {
		if (lblIngredients2 == null) {
			lblIngredients2 = new JLabel("");
			lblIngredients2.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/PI03.png")));
		}
		return lblIngredients2;
	}
	private JLabel getLblIngredients2_1() {
		if (lblIngredients2_1 == null) {
			lblIngredients2_1 = new JLabel("");
			lblIngredients2_1.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/BE02.png")));
		}
		return lblIngredients2_1;
	}
	private JPanel getPanelRegistro() {
		if (panelRegistro == null) {
			panelRegistro = new JPanel();
			panelRegistro.setLayout(new BorderLayout(0, 0));
			panelRegistro.add(getPanelDatos(), BorderLayout.CENTER);
			panelRegistro.add(getPanelBtn(), BorderLayout.SOUTH);
			panelRegistro.add(getPanelSpacing(), BorderLayout.EAST);
		}
		return panelRegistro;
	}
	private JPanel getPanelDatos() {
		if (panelDatos == null) {
			panelDatos = new JPanel();
			panelDatos.setBackground(new Color(0, 0, 128));
			panelDatos.setLayout(new GridLayout(6, 1, 0, 0));
			panelDatos.add(getLblDNI());
			panelDatos.add(getTextFieldDNI());
			panelDatos.add(getLblReserva());
			panelDatos.add(getPasswordFieldReserva());
		}
		return panelDatos;
	}
	private JTextField getTextFieldDNI() {
		if (textFieldDNI == null) {
			textFieldDNI = new JTextField();
			textFieldDNI.setFont(new Font("SansSerif", Font.PLAIN, 28));
			textFieldDNI.setColumns(10);
		}
		return textFieldDNI;
	}
	private JLabel getLblDNI() {
		if (lblDNI == null) {
			lblDNI = new JLabel("DNI / NIE:");
			lblDNI.setLabelFor(getTextFieldDNI());
			lblDNI.setDisplayedMnemonic('D');
			lblDNI.setForeground(new Color(255, 255, 255));
			lblDNI.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return lblDNI;
	}
	private JLabel getLblReserva() {
		if (lblReserva == null) {
			lblReserva = new JLabel("N\u00BA / C\u00F3digo de reserva");
			lblReserva.setLabelFor(getPasswordFieldReserva());
			lblReserva.setDisplayedMnemonic('N');
			lblReserva.setForeground(new Color(255, 255, 255));
			lblReserva.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return lblReserva;
	}
	private JPanel getPanelBtn() {
		if (panelBtn == null) {
			panelBtn = new JPanel();
			panelBtn.setBackground(new Color(0, 0, 128));
			panelBtn.setLayout(new GridLayout(1, 0, 0, 0));
			panelBtn.add(getLblPlaceHolder_1());
			panelBtn.add(getLblPlaceHolder());
			panelBtn.add(getBtnSiguiente_Menu());
		}
		return panelBtn;
	}
	private JLabel getLblPlaceHolder() {
		if (lblPlaceHolder == null) {
			lblPlaceHolder = new JLabel("");
			lblPlaceHolder.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder;
	}
	private JButton getBtnSiguiente_Menu() {
		if (btnSiguiente_Menu == null) {
			btnSiguiente_Menu = new JButton("Continuar");
			btnSiguiente_Menu.setForeground(new Color(255, 255, 255));
			btnSiguiente_Menu.setBackground(new Color(50, 205, 50));
			btnSiguiente_Menu.setFont(new Font("SansSerif", Font.PLAIN, 28));
			btnSiguiente_Menu.setMnemonic('C');
			btnSiguiente_Menu.setActionCommand("Menu");
			btnSiguiente_Menu.addActionListener(pf);
		}
		return btnSiguiente_Menu;
	}
	private JLabel getLblPlaceHolder_1() {
		if (lblPlaceHolder_1 == null) {
			lblPlaceHolder_1 = new JLabel("");
			lblPlaceHolder_1.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder_1;
	}
	private JPanel getPanelSpacing() {
		if (panelSpacing == null) {
			panelSpacing = new JPanel();
			panelSpacing.setBackground(new Color(0, 0, 128));
			panelSpacing.add(getLblPlaceHolder_1_1());
		}
		return panelSpacing;
	}
	private JLabel getLblPlaceHolder_1_1() {
		if (lblPlaceHolder_1_1 == null) {
			lblPlaceHolder_1_1 = new JLabel("                                                                                                            ");
			lblPlaceHolder_1_1.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder_1_1;
	}
	private JPanel getPanelMenu() {
		if (panelMenu == null) {
			panelMenu = new JPanel();
			panelMenu.setLayout(new BorderLayout(0, 0));
			panelMenu.add(getPanelFiltros(), BorderLayout.WEST);
			panelMenu.add(getScrollPaneProductos(), BorderLayout.CENTER);
			panelMenu.add(getPanelFinalizarMenu(), BorderLayout.SOUTH);
			panelMenu.add(getPanelCarrito(), BorderLayout.EAST);
		}
		return panelMenu;
	}
	private JPanel getPanelFiltros() {
		if (panelFiltros == null) {
			panelFiltros = new JPanel();
			panelFiltros.setLayout(new GridLayout(6, 0, 0, 0));
			panelFiltros.add(getBtnTodos());
			panelFiltros.add(getBtnPizzas());
			panelFiltros.add(getBtnEntrantes());
			panelFiltros.add(getBtnEnsaladas());
			panelFiltros.add(getBtnPostres());
			panelFiltros.add(getBtnBebidas());
		}
		return panelFiltros;
	}
	private JButton getBtnTodos() {
		if (btnTodos == null) {
			btnTodos = new JButton("");
			btnTodos.setText("Todos");
			btnTodos.setVerticalTextPosition(SwingConstants.TOP);
			btnTodos.setHorizontalTextPosition(SwingConstants.CENTER);
			btnTodos.setBackground(new Color(255, 255, 255));
			btnTodos.setToolTipText("Filtrar - Todos");
			setImagenAdaptada(btnTodos, "/img/bienvenida.png");
			btnTodos.setActionCommand(String.valueOf(Pizzeria.TODOS));
			btnTodos.addActionListener(pft);
		}
		return btnTodos;
	}
	private JButton getBtnPizzas() {
		if (btnPizzas == null) {
			btnPizzas = new JButton("");
			btnPizzas.setText("Pizzas");
			btnPizzas.setVerticalTextPosition(SwingConstants.TOP);
			btnPizzas.setHorizontalTextPosition(SwingConstants.CENTER);
			btnPizzas.setBackground(new Color(255, 255, 255));
			btnPizzas.setToolTipText("Filtrar - Pizzas");
			setImagenAdaptada(btnPizzas,"/img/PI01.png");
			btnPizzas.addActionListener(pft);
			btnPizzas.setActionCommand(String.valueOf(Pizzeria.PIZZAS));
		}
		return btnPizzas;
	}
	private JButton getBtnEntrantes() {
		if (btnEntrantes == null) {
			btnEntrantes = new JButton("");
			btnEntrantes.setText("Entrantes");
			btnEntrantes.setVerticalTextPosition(SwingConstants.TOP);
			btnEntrantes.setHorizontalTextPosition(SwingConstants.CENTER);
			btnEntrantes.setBackground(new Color(255, 255, 255));
			btnEntrantes.setToolTipText("Filtrar - Entrantes");
			setImagenAdaptada(btnEntrantes, "/img/ET02.png");
			btnEntrantes.addActionListener(pft);
			btnEntrantes.setActionCommand(String.valueOf(Pizzeria.ENTRANTES));
		}
		return btnEntrantes;
	}
	private JButton getBtnEnsaladas() {
		if (btnEnsaladas == null) {
			btnEnsaladas = new JButton("Ensaladas");
			btnEnsaladas.setText("Ensaladas");
			btnEnsaladas.setVerticalTextPosition(SwingConstants.TOP);
			btnEnsaladas.setHorizontalTextPosition(SwingConstants.CENTER);
			btnEnsaladas.setBackground(new Color(255, 255, 255));
			btnEnsaladas.setToolTipText("Filtrar - Ensaladas");
			setImagenAdaptada(btnEnsaladas, "/img/EN02.png");
			btnEnsaladas.addActionListener(pft);
			btnEnsaladas.setActionCommand(String.valueOf(Pizzeria.ENSALADAS));
		}
		return btnEnsaladas;
	}
	private JButton getBtnPostres() {
		if (btnPostres == null) {
			btnPostres = new JButton("");
			btnPostres.setText("Postres");
			btnPostres.setBackground(new Color(255, 255, 255));
			btnPostres.setVerticalTextPosition(SwingConstants.TOP);
			btnPostres.setHorizontalTextPosition(SwingConstants.CENTER);
			btnPostres.setToolTipText("Filtrar - Postres");
			btnPostres.setActionCommand(String.valueOf(Pizzeria.POSTRES));
			setImagenAdaptada(btnPostres, "/img/PO01.png");
			btnPostres.addActionListener(pft);
		}
		return btnPostres;
	}
	private JButton getBtnBebidas() {
		if (btnBebidas == null) {
			btnBebidas = new JButton("");
			btnBebidas.setText("Bebidas");
			btnBebidas.setVerticalTextPosition(SwingConstants.TOP);
			btnBebidas.setHorizontalTextPosition(SwingConstants.CENTER);
			btnBebidas.setBackground(new Color(255, 255, 255));
			btnBebidas.setToolTipText("Filtrar - Bebidas");
			setImagenAdaptada(btnBebidas, "/img/BE03.png");
			btnBebidas.addActionListener(pft);
			btnBebidas.setActionCommand(String.valueOf(Pizzeria.BEBIDAS));
		}
		return btnBebidas;
	}
	private void setImagenAdaptada(JButton boton, String rutaImagen){
		 Image imgOriginal = new ImageIcon(getClass().getResource(rutaImagen)).getImage(); 
		 Image imgEscalada = imgOriginal.getScaledInstance((int) (100), (int) (100),Image.SCALE_SMOOTH);
		 //si se quiere reescalar la ventana, este 100 tendria que cambiarse por el width y el height  respectivamente de la imagen para que as√≠ se reescale cada vez que cambias el tama√±o
		 //adem√°s este m√©todo deber√≠a llamarse en el constructor de la ventana mientras se usa un evento componentResized
		 boton.setIcon(new ImageIcon(imgEscalada));
	}
	private JScrollPane getScrollPaneProductos() {
		if (scrollPaneProductos == null) {
			scrollPaneProductos = new JScrollPane();
			scrollPaneProductos.setViewportView(getPanelProductos());
		}
		return scrollPaneProductos;
	}
	private JPanel getPanelProductos() {
		if (panelProductos == null) {
			panelProductos = new JPanel();
			panelProductos.setBackground(new Color(0, 0, 128));
			panelProductos.setLayout(new GridLayout(0, 4, 40, 40));
			generarBotonesMenu(pz.TODOS);
		}
		return panelProductos;
	}
	private void quitarBotonesMenu() {
		getPanelProductos().removeAll();
		getPanelProductos().repaint();
	}
	protected void generarBotonesMenu(int filter) {
			menuModel = pz.typeOfFilter(filter);
		for(int i=0; i<menuModel.length; i++) {
			JButton j = new JButton("");
			j.setText(menuModel[i].toStringMenu());
			j.setVerticalTextPosition(SwingConstants.BOTTOM); 
			j.setHorizontalTextPosition(SwingConstants.CENTER);
			setImagenAdaptada(j, "/img/" +menuModel[i].getCode() + ".png");
			j.setBackground(Color.black);
			j.setForeground(Color.white);
			if(i==0 && menuModel[i].getType().equals("Pizza")) {
				j.setBorder(new LineBorder(Color.red, 8));
				j.setText("¬°Pizza del d√≠a! - " + j.getText());
			}
			j.setActionCommand(String.valueOf(i));
			j.
			panelProductos.add(j);
			validate();
		}
	}
	private JPanel getPanelFinalizarMenu() {
		if (panelFinalizarMenu == null) {
			panelFinalizarMenu = new JPanel();
			panelFinalizarMenu.setBackground(new Color(128, 0, 0));
			panelFinalizarMenu.setLayout(new GridLayout(0, 5, 0, 0));
			panelFinalizarMenu.add(getLblPlaceHolderMenu());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_3());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_1());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_2());
			panelFinalizarMenu.add(getBtnFinalizar());
		}
		return panelFinalizarMenu;
	}
	private JLabel getLblPlaceHolderMenu() {
		if (lblPlaceHolderMenu == null) {
			lblPlaceHolderMenu = new JLabel("");
		}
		return lblPlaceHolderMenu;
	}
	private JButton getBtnFinalizar() {
		if (btnFinalizar == null) {
			btnFinalizar = new JButton("Finalizar");
			btnFinalizar.setMnemonic('F');
			btnFinalizar.setForeground(new Color(255, 255, 255));
			btnFinalizar.setBackground(new Color(50, 205, 50));
			btnFinalizar.setFont(new Font("SansSerif", Font.PLAIN, 28));
			btnFinalizar.setActionCommand("Revisar y Pagar");
			btnFinalizar.addActionListener(pf);
		}
		return btnFinalizar;
	}
	private JLabel getLblPlaceHolderMenu_2() {
		if (lblPlaceHolderMenu_2 == null) {
			lblPlaceHolderMenu_2 = new JLabel("");
		}
		return lblPlaceHolderMenu_2;
	}
	private JLabel getLblPlaceHolderMenu_1() {
		if (lblPlaceHolderMenu_1 == null) {
			lblPlaceHolderMenu_1 = new JLabel("");
		}
		return lblPlaceHolderMenu_1;
	}
	private JLabel getLblPlaceHolderMenu_3() {
		if (lblPlaceHolderMenu_3 == null) {
			lblPlaceHolderMenu_3 = new JLabel("");
		}
		return lblPlaceHolderMenu_3;
	}
	private JPanel getPanelCarrito() {
		if (panelCarrito == null) {
			panelCarrito = new JPanel();
			panelCarrito.setBackground(new Color(128, 0, 0));
			panelCarrito.setLayout(new BorderLayout(0, 0));
			panelCarrito.add(getBtnCarrito(), BorderLayout.NORTH);
			panelCarrito.add(getScrollPaneCarrito());
		}
		return panelCarrito;
	}
	private JButton getBtnCarrito() {
		if (btnCarrito == null) {
			btnCarrito = new JButton("");
			btnCarrito.setToolTipText("Mostrar/Ocultar Carrito");
			btnCarrito.setBackground(new Color(255, 255, 255));
			setImagenAdaptada(btnCarrito,"/img/carrito.png");
			btnCarrito.addActionListener(pCrt);
		}
		return btnCarrito;
	}
	private JScrollPane getScrollPaneCarrito() {
		if (scrollPaneCarrito == null) {
			scrollPaneCarrito = new JScrollPane();
			scrollPaneCarrito.setEnabled(false);
			scrollPaneCarrito.setViewportView(getTxtAreaCarrito());
		}
		return scrollPaneCarrito;
	}
	private JTextArea getTxtAreaCarrito() {
		if (txtAreaCarrito == null) {
			txtAreaCarrito = new JTextArea();
			txtAreaCarrito.setBackground(new Color(255, 255, 255));
			txtAreaCarrito.setEditable(false);
			txtAreaCarrito.setVisible(false);
			txtAreaCarrito.setText(pz.getOrderToStringShoppingCart());
		}
		return txtAreaCarrito;
	}
	private JPasswordField getPasswordFieldReserva() {
		if (passwordFieldReserva == null) {
			passwordFieldReserva = new JPasswordField();
			passwordFieldReserva.setBackground(new Color(255, 255, 255));
			passwordFieldReserva.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return passwordFieldReserva;
	}
	private JPanel getPanelPago() {
		if (panelPago == null) {
			panelPago = new JPanel();
			panelPago.setLayout(new GridLayout(0, 2, 0, 0));
			panelPago.add(getScrollPaneListaPedidos());
			panelPago.add(getPanelOpcionesFinales());
		}
		return panelPago;
	}
	private JScrollPane getScrollPaneListaPedidos() {
		if (scrollPaneListaPedidos == null) {
			scrollPaneListaPedidos = new JScrollPane();
			scrollPaneListaPedidos.setViewportView(getTextAreaPedidos());
		}
		return scrollPaneListaPedidos;
	}
	private JPanel getPanelOpcionesFinales() {
		if (panelOpcionesFinales == null) {
			panelOpcionesFinales = new JPanel();
			panelOpcionesFinales.setBackground(new Color(0, 0, 128));
			panelOpcionesFinales.setLayout(new BorderLayout(0, 0));
			panelOpcionesFinales.add(getPanelMetodoPago(), BorderLayout.CENTER);
			panelOpcionesFinales.add(getPanelEleccionJugar(), BorderLayout.NORTH);
			panelOpcionesFinales.add(getPanelBtnFinales(), BorderLayout.SOUTH);
		}
		return panelOpcionesFinales;
	}
	private JTextArea getTextAreaPedidos() {
		if (textAreaPedidos == null) {
			textAreaPedidos = new JTextArea();
			textAreaPedidos.setText("ojdowjdowjdowdowjdo\r\ndojdodjwojdowjdm\r\ndmwdjowjdo");
			textAreaPedidos.setFont(new Font("SansSerif", Font.PLAIN, 21));
		}
		return textAreaPedidos;
	}
	private JPanel getPanelMetodoPago() {
		if (panelMetodoPago == null) {
			panelMetodoPago = new JPanel();
			panelMetodoPago.setBackground(new Color(0, 0, 128));
			panelMetodoPago.setLayout(new GridLayout(4, 1, 0, 0));
			panelMetodoPago.add(getLblOpcionesPago());
			panelMetodoPago.add(getRdbtnTarjeta());
			panelMetodoPago.add(getRdbtnEfectivo());
		}
		return panelMetodoPago;
	}
	private JPanel getPanelEleccionJugar() {
		if (panelEleccionJugar == null) {
			panelEleccionJugar = new JPanel();
			panelEleccionJugar.setBackground(new Color(0, 0, 128));
			panelEleccionJugar.setLayout(new GridLayout(3, 1, 0, 0));
			panelEleccionJugar.add(getLblOpcionesJugar());
			panelEleccionJugar.add(getRdbtnJugar());
			panelEleccionJugar.add(getRdbtnNoJugar());
		}
		return panelEleccionJugar;
	}
	private JLabel getLblOpcionesJugar() {
		if (lblOpcionesJugar == null) {
			lblOpcionesJugar = new JLabel("\u00BFQuiere jugar para descuentos?");
			lblOpcionesJugar.setForeground(new Color(255, 255, 255));
			lblOpcionesJugar.setFont(new Font("SansSerif", Font.BOLD, 27));
		}
		return lblOpcionesJugar;
	}
	private JRadioButton getRdbtnJugar() {
		if (rdbtnJugar == null) {
			rdbtnJugar = new JRadioButton("Jugar");
			rdbtnJugar.setBackground(new Color(0, 0, 128));
			rdbtnJugar.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnJugar.setSelected(true);
			rdbtnJugar.setMnemonic('J');
			buttonGroupJugar.add(rdbtnJugar);
			rdbtnJugar.setForeground(new Color(255, 255, 255));
		}
		return rdbtnJugar;
	}
	private JRadioButton getRdbtnNoJugar() {
		if (rdbtnNoJugar == null) {
			rdbtnNoJugar = new JRadioButton("No jugar");
			rdbtnNoJugar.setBackground(new Color(0, 0, 128));
			rdbtnNoJugar.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnNoJugar.setMnemonic('N');
			buttonGroupJugar.add(rdbtnNoJugar);
			rdbtnNoJugar.setForeground(new Color(255, 255, 255));
		}
		return rdbtnNoJugar;
	}
	private JLabel getLblOpcionesPago() {
		if (lblOpcionesPago == null) {
			lblOpcionesPago = new JLabel("\u00BFC\u00F3mo desea pagar?");
			lblOpcionesPago.setHorizontalAlignment(SwingConstants.LEFT);
			lblOpcionesPago.setFont(new Font("SansSerif", Font.BOLD, 27));
			lblOpcionesPago.setForeground(new Color(255, 255, 255));
		}
		return lblOpcionesPago;
	}
	private JRadioButton getRdbtnTarjeta() {
		if (rdbtnTarjeta == null) {
			rdbtnTarjeta = new JRadioButton("Tarjeta");
			rdbtnTarjeta.setBackground(new Color(0, 0, 128));
			rdbtnTarjeta.setMnemonic('T');
			rdbtnTarjeta.setSelected(true);
			buttonGroupPago.add(rdbtnTarjeta);
			rdbtnTarjeta.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnTarjeta.setForeground(new Color(255, 255, 255));
			rdbtnTarjeta.setHorizontalAlignment(SwingConstants.LEFT);
		}
		return rdbtnTarjeta;
	}
	private JRadioButton getRdbtnEfectivo() {
		if (rdbtnEfectivo == null) {
			rdbtnEfectivo = new JRadioButton("Efectivo");
			rdbtnEfectivo.setBackground(new Color(0, 0, 128));
			rdbtnEfectivo.setMnemonic('E');
			buttonGroupPago.add(rdbtnEfectivo);
			rdbtnEfectivo.setForeground(new Color(255, 255, 255));
			rdbtnEfectivo.setFont(new Font("SansSerif", Font.PLAIN, 19));
		}
		return rdbtnEfectivo;
	}
	private JPanel getPanelBtnFinales() {
		if (panelBtnFinales == null) {
			panelBtnFinales = new JPanel();
			panelBtnFinales.setLayout(new GridLayout(0, 2, 0, 0));
			panelBtnFinales.add(getBtnCancelar());
			panelBtnFinales.add(getBtnFinalizaryPagar());
		}
		return panelBtnFinales;
	}
	private JButton getBtnCancelar() {
		if (btnCancelar == null) {
			btnCancelar = new JButton("Cancelar");
			btnCancelar.setForeground(new Color(255, 255, 255));
			btnCancelar.setBackground(new Color(255, 0, 0));
			btnCancelar.setFont(new Font("SansSerif", Font.PLAIN, 27));
			btnCancelar.setMnemonic('C');
			btnCancelar.setActionCommand("Menu");
			btnCancelar.addActionListener(pf);
		}
		return btnCancelar;
	}
	private JButton getBtnFinalizaryPagar() {
		if (btnFinalizaryPagar == null) {
			btnFinalizaryPagar = new JButton("Finalizar y pagar");
			btnFinalizaryPagar.setMnemonic('F');
			btnFinalizaryPagar.setBackground(new Color(50, 205, 50));
			btnFinalizaryPagar.setForeground(new Color(255, 255, 255));
			btnFinalizaryPagar.setFont(new Font("SansSerif", Font.PLAIN, 23));
		}
		return btnFinalizaryPagar;
	}
	private JMenuBar getMenuBar_4() {
		if (menuBar == null) {
			menuBar = new JMenuBar();
			menuBar.add(getMenu_1());
			menuBar.add(getMenu_2());
		}
		return menuBar;
	}
	private JMenu getMenu_1() {
		if (mnOptions == null) {
			mnOptions = new JMenu("Opciones");
			mnOptions.setMnemonic('O');
			mnOptions.add(getMntmNuevaSesion());
			mnOptions.add(getSeparator());
			mnOptions.add(getMntmSalida());
		}
		return mnOptions;
	}
	private JMenuItem getMntmSalida() {
		if (mntmSalida == null) {
			mntmSalida = new JMenuItem("Salida");
			mntmSalida.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_X, InputEvent.CTRL_DOWN_MASK));
			mntmSalida.addActionListener(pE);
		}
		return mntmSalida;
	}
	private JMenuItem getMntmNuevaSesion() {
		if (mntmNuevaSesion == null) {
			mntmNuevaSesion = new JMenuItem("Nueva Sesion");
			mntmNuevaSesion.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, InputEvent.CTRL_DOWN_MASK));
		}
		return mntmNuevaSesion;
	}
	private JSeparator getSeparator() {
		if (separator == null) {
			separator = new JSeparator();
		}
		return separator;
	}
	private JMenu getMenu_2() {
		if (mnAyuda == null) {
			mnAyuda = new JMenu("Ayuda");
			mnAyuda.setMnemonic('A');
			mnAyuda.add(getMntmAyuda());
		}
		return mnAyuda;
	}
	private JMenuItem getMntmAyuda() {
		if (mntmAyuda == null) {
			mntmAyuda = new JMenuItem("Abrir men\u00FA de ayuda");
			mntmAyuda.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F1, InputEvent.CTRL_DOWN_MASK));
		}
		return mntmAyuda;
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2024-12-29 23:02:32.798
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2024-12-29 23:02:32.799
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-29 23:58:05.132
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-29 23:59:40.704
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager$6.run(UndoManager.java:338)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 00:23:03.847
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager$6.run(UndoManager.java:338)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 00:25:55.993
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 00:25:55.994
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 00:26:15.895
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 00:31:06.345
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 00:38:20.509
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:409)
	at org.eclipse.wb.internal.core.editor.DesignPage$4.run(DesignPage.java:298)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:107)
	at org.eclipse.wb.internal.core.editor.DesignPage.checkDependenciesOnDesignPageActivation(DesignPage.java:292)
	at org.eclipse.wb.internal.core.editor.DesignPage$1$1.run(DesignPage.java:106)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:107)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils$4.run(ExecutionUtils.java:207)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 00:44:57.309
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 00:47:05.404
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:409)
	at org.eclipse.wb.internal.core.editor.DesignPage$4.run(DesignPage.java:298)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:107)
	at org.eclipse.wb.internal.core.editor.DesignPage.checkDependenciesOnDesignPageActivation(DesignPage.java:292)
	at org.eclipse.wb.internal.core.editor.DesignPage$1$1.run(DesignPage.java:106)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:107)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils$4.run(ExecutionUtils.java:207)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 00:47:05.404
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:409)
	at org.eclipse.wb.internal.core.editor.DesignPage$4.run(DesignPage.java:298)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:107)
	at org.eclipse.wb.internal.core.editor.DesignPage.checkDependenciesOnDesignPageActivation(DesignPage.java:292)
	at org.eclipse.wb.internal.core.editor.DesignPage$1$1.run(DesignPage.java:106)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:107)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils$4.run(ExecutionUtils.java:207)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 01:11:45.118
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager$6.run(UndoManager.java:338)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 01:16:13.108
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Font.<init>(Font.java:146)
	at org.eclipse.wb.core.editor.color.CustomColorPickerComposite.previewComposite(CustomColorPickerComposite.java:101)
	at org.eclipse.wb.core.editor.color.CustomColorPickerComposite.createContent(CustomColorPickerComposite.java:70)
	at org.eclipse.wb.core.editor.color.CustomColorPickerComposite.<init>(CustomColorPickerComposite.java:56)
	at org.eclipse.wb.internal.swing.model.property.editor.color.ColorPropertyEditor$ColorDialog.addPages(ColorPropertyEditor.java:298)
	at org.eclipse.wb.internal.core.utils.ui.dialogs.color.AbstractColorDialog.createDialogArea(AbstractColorDialog.java:119)
	at org.eclipse.jface.dialogs.Dialog.createContents(Dialog.java:767)
	at org.eclipse.jface.window.Window.create(Window.java:431)
	at org.eclipse.jface.dialogs.Dialog.create(Dialog.java:1094)
	at org.eclipse.wb.internal.core.utils.ui.dialogs.ReusableDialog.open(ReusableDialog.java:42)
	at org.eclipse.wb.internal.swing.model.property.editor.color.ColorPropertyEditor.openDialog(ColorPropertyEditor.java:229)
	at org.eclipse.wb.internal.swing.model.property.editor.color.ColorPropertyEditor$1.onClick(ColorPropertyEditor.java:86)
	at org.eclipse.wb.internal.core.model.property.editor.presentation.ButtonPropertyEditorPresentationImpl.lambda$3(ButtonPropertyEditorPresentationImpl.java:110)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 01:16:13.116
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:683)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:275)
	at org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:290)
	at org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:268)
	at org.eclipse.pde.internal.ui.util.SharedLabelProvider.createImage(SharedLabelProvider.java:114)
	at org.eclipse.pde.internal.ui.util.SharedLabelProvider.get(SharedLabelProvider.java:90)
	at org.eclipse.pde.internal.ui.util.SharedLabelProvider.get(SharedLabelProvider.java:79)
	at org.eclipse.pde.internal.ui.correction.java.SearchRepositoriesForIUProposal.getImage(SearchRepositoriesForIUProposal.java:75)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.createCompletionProposalLink(AbstractAnnotationHover.java:492)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.createCompletionProposalsList(AbstractAnnotationHover.java:396)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.createCompletionProposalsControl(AbstractAnnotationHover.java:377)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:306)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 01:16:13.128
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:683)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:275)
	at org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:230)
	at org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:55)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.LazyResourceManager.create(LazyResourceManager.java:103)
	at org.eclipse.jface.resource.LocalResourceManager.allocate(LocalResourceManager.java:72)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.ResourceManager.createImage(ResourceManager.java:175)
	at org.eclipse.e4.ui.workbench.renderers.swt.AbstractContributionItem.getImage(AbstractContributionItem.java:151)
	at org.eclipse.e4.ui.workbench.renderers.swt.AbstractContributionItem.updateIcons(AbstractContributionItem.java:177)
	at org.eclipse.e4.ui.workbench.renderers.swt.AbstractContributionItem.update(AbstractContributionItem.java:127)
	at org.eclipse.e4.ui.workbench.renderers.swt.AbstractContributionItem.fill(AbstractContributionItem.java:264)
	at org.eclipse.jface.action.MenuManager.doItemFill(MenuManager.java:729)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:806)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:673)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.scheduleManagerUpdate(MenuManagerRenderer.java:1227)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.subscribeUIElementTopicVisible(MenuManagerRenderer.java:213)
	at jdk.internal.reflect.GeneratedMethodAccessor37.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setVisible(UIElementImpl.java:361)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.updateVisibility(ContributionRecord.java:105)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:191)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:202)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:202)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.showMenu(MenuManagerShowProcessor.java:256)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.menuAboutToHide(MenuManagerShowProcessor.java:114)
	at org.eclipse.jface.internal.MenuManagerEventHelper.showEventPostHelper(MenuManagerEventHelper.java:95)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:469)
	at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:495)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:259)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1068)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:5143)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4775)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1480)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2286)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5015)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:237)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:4101)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 01:16:13.137
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:683)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:275)
	at org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:230)
	at org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:55)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.LazyResourceManager.create(LazyResourceManager.java:103)
	at org.eclipse.jface.resource.LocalResourceManager.allocate(LocalResourceManager.java:72)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.ResourceManager.createImage(ResourceManager.java:175)
	at org.eclipse.e4.ui.workbench.renderers.swt.AbstractContributionItem.getImage(AbstractContributionItem.java:151)
	at org.eclipse.e4.ui.workbench.renderers.swt.AbstractContributionItem.updateIcons(AbstractContributionItem.java:177)
	at org.eclipse.e4.ui.workbench.renderers.swt.AbstractContributionItem.update(AbstractContributionItem.java:127)
	at org.eclipse.e4.ui.workbench.renderers.swt.AbstractContributionItem.fill(AbstractContributionItem.java:264)
	at org.eclipse.jface.action.MenuManager.doItemFill(MenuManager.java:729)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:806)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:673)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.scheduleManagerUpdate(MenuManagerRenderer.java:1227)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.subscribeUIElementTopicVisible(MenuManagerRenderer.java:213)
	at jdk.internal.reflect.GeneratedMethodAccessor37.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setVisible(UIElementImpl.java:361)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.updateVisibility(ContributionRecord.java:105)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:191)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:202)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:202)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.showMenu(MenuManagerShowProcessor.java:256)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.menuAboutToHide(MenuManagerShowProcessor.java:114)
	at org.eclipse.jface.internal.MenuManagerEventHelper.showEventPostHelper(MenuManagerEventHelper.java:95)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:469)
	at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:495)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:259)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1068)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:5143)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4775)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1480)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2286)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5015)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:237)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:4101)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 01:16:13.138
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:683)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:275)
	at org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:230)
	at org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:55)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.LazyResourceManager.create(LazyResourceManager.java:103)
	at org.eclipse.jface.resource.LocalResourceManager.allocate(LocalResourceManager.java:72)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.ResourceManager.createImage(ResourceManager.java:175)
	at org.eclipse.e4.ui.workbench.renderers.swt.AbstractContributionItem.getImage(AbstractContributionItem.java:151)
	at org.eclipse.e4.ui.workbench.renderers.swt.AbstractContributionItem.updateIcons(AbstractContributionItem.java:177)
	at org.eclipse.e4.ui.workbench.renderers.swt.AbstractContributionItem.update(AbstractContributionItem.java:127)
	at org.eclipse.e4.ui.workbench.renderers.swt.AbstractContributionItem.fill(AbstractContributionItem.java:264)
	at org.eclipse.jface.action.MenuManager.doItemFill(MenuManager.java:729)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:806)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:673)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.scheduleManagerUpdate(MenuManagerRenderer.java:1227)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.subscribeUIElementTopicVisible(MenuManagerRenderer.java:213)
	at jdk.internal.reflect.GeneratedMethodAccessor37.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setVisible(UIElementImpl.java:361)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.updateVisibility(ContributionRecord.java:105)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:191)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:202)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:202)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.showMenu(MenuManagerShowProcessor.java:256)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.menuAboutToHide(MenuManagerShowProcessor.java:114)
	at org.eclipse.jface.internal.MenuManagerEventHelper.showEventPostHelper(MenuManagerEventHelper.java:95)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:469)
	at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:495)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:259)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1068)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:5143)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4775)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1480)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2286)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5015)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:237)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:4101)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 01:16:13.139
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:683)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:275)
	at org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:230)
	at org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:55)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.LazyResourceManager.create(LazyResourceManager.java:103)
	at org.eclipse.jface.resource.LocalResourceManager.allocate(LocalResourceManager.java:72)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.ResourceManager.createImage(ResourceManager.java:175)
	at org.eclipse.e4.ui.workbench.renderers.swt.AbstractContributionItem.getImage(AbstractContributionItem.java:151)
	at org.eclipse.e4.ui.workbench.renderers.swt.AbstractContributionItem.updateIcons(AbstractContributionItem.java:177)
	at org.eclipse.e4.ui.workbench.renderers.swt.AbstractContributionItem.update(AbstractContributionItem.java:127)
	at org.eclipse.e4.ui.workbench.renderers.swt.AbstractContributionItem.fill(AbstractContributionItem.java:264)
	at org.eclipse.jface.action.MenuManager.doItemFill(MenuManager.java:729)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:806)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:673)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.scheduleManagerUpdate(MenuManagerRenderer.java:1227)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.subscribeUIElementTopicVisible(MenuManagerRenderer.java:213)
	at jdk.internal.reflect.GeneratedMethodAccessor37.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setVisible(UIElementImpl.java:361)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.updateVisibility(ContributionRecord.java:105)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:191)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRendererFilter.updateElementVisibility(MenuManagerRendererFilter.java:202)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.showMenu(MenuManagerShowProcessor.java:256)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerShowProcessor.menuAboutToHide(MenuManagerShowProcessor.java:114)
	at org.eclipse.jface.internal.MenuManagerEventHelper.showEventPostHelper(MenuManagerEventHelper.java:95)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:469)
	at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:495)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:259)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1068)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:5143)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4775)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1480)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2286)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5015)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:237)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:4101)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
!SESSION 2024-12-30 13:47:15.994 -----------------------------------------------
eclipse.buildId=4.23.0.I20220308-0310
java.version=17.0.2
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=es_ES
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2024-12-30 13:47:52.089
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2024-12-30 13:47:52.089
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@10301d6f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5cd6719d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2024-12-30 13:47:52.089
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5ef591af,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@61b0af9f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2024-12-30 13:48:01.148
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\El√≠as'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 14:43:49.082
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 14:44:22.619
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager$6.run(UndoManager.java:338)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 14:44:22.973
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:409)
	at org.eclipse.wb.internal.core.editor.DesignPage$4.run(DesignPage.java:298)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:107)
	at org.eclipse.wb.internal.core.editor.DesignPage.checkDependenciesOnDesignPageActivation(DesignPage.java:292)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:278)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 15:04:19.918
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 15:04:47.553
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager$6.run(UndoManager.java:338)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 15:04:47.554
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:409)
	at org.eclipse.wb.internal.core.editor.DesignPage$4.run(DesignPage.java:298)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:107)
	at org.eclipse.wb.internal.core.editor.DesignPage.checkDependenciesOnDesignPageActivation(DesignPage.java:292)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:278)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 15:34:19.280
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 16:49:47.303
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 16:50:51.664
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 16:50:57.387
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager$6.run(UndoManager.java:338)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 16:51:01.939
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager$6.run(UndoManager.java:338)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 16:51:30.700
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager$6.run(UndoManager.java:338)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 16:52:09.991
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager$6.run(UndoManager.java:338)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 16:52:11.903
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager$6.run(UndoManager.java:338)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 16:52:14.015
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager$6.run(UndoManager.java:338)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 16:52:16.176
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager$6.run(UndoManager.java:338)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 16:52:37.372
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager$6.run(UndoManager.java:338)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 16:54:18.559
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager$6.run(UndoManager.java:338)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 16:58:23.575
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager$6.run(UndoManager.java:338)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 16:59:52.563
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 17:01:24.993
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager$6.run(UndoManager.java:338)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 17:05:07.207
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 17:05:58.740
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 17:19:12.643
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core 4 4 2024-12-30 17:32:07.919
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package uo.cpm.modulo.ui;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import java.awt.CardLayout;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.BorderLayout;
import javax.swing.JLabel;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.BoxLayout;
import java.awt.GridLayout;
import java.awt.Image;

import javax.swing.ImageIcon;
import java.awt.Color;
import java.awt.Font;
import javax.swing.border.LineBorder;

import uo.cpm.modulo.model.Producto;
import uo.cpm.modulo.service.Pizzeria;

import javax.swing.SwingConstants;
import java.awt.FlowLayout;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.Component;
import java.awt.Dimension;

import javax.swing.JTextField;
import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.InputEvent;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JPasswordField;
import javax.swing.JSplitPane;
import javax.swing.JRadioButton;
import javax.swing.ButtonGroup;
import javax.swing.JSeparator;

public class VentanaPrincipal extends JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private JPanel contentPane;
	private JPanel panelInicio;
	private JPanel panelBienvenida;
	private JPanel panelIdiomas;
	private JButton btnSpanish;
	private JLabel lblIngredients;
	private JButton btnEnglish;
	private JButton btnFrench;
	private JButton btnItalian;
	private JPanel panelSaludo;
	private JLabel lblWelcome;
	private JButton btnSiguiente_Datos;
	private JLabel lblIngredients2;
	private JLabel lblIngredients2_1;
	private ProcessFrame pf = new  ProcessFrame();
	private JPanel panelRegistro;
	private JPanel panelDatos;
	private JTextField textFieldDNI;
	private JLabel lblDNI;
	private JLabel lblReserva;
	private JPanel panelBtn;
	private JLabel lblPlaceHolder;
	private JButton btnSiguiente_Menu;
	private JLabel lblPlaceHolder_1;
	private JPanel panelSpacing;
	private JLabel lblPlaceHolder_1_1;
	private JPanel panelMenu;
	private JPanel panelFiltros;
	private JButton btnTodos;
	private JButton btnPizzas;
	private JButton btnEntrantes;
	private JButton btnEnsaladas;
	private JButton btnPostres;
	private JButton btnBebidas;
	private JScrollPane scrollPaneProductos;
	private JPanel panelProductos;
	private JPanel panelFinalizarMenu;
	private JLabel lblPlaceHolderMenu;
	private JButton btnFinalizar;
	private JLabel lblPlaceHolderMenu_2;
	private JLabel lblPlaceHolderMenu_1;
	private JLabel lblPlaceHolderMenu_3;
	private JPanel panelCarrito;
	private JButton btnCarrito;
	private JScrollPane scrollPaneCarrito;
	private JTextArea txtAreaCarrito;
	private ProcessCart pCrt = new ProcessCart();
	private JPasswordField passwordFieldReserva;
	private JPanel panelPago;
	private JScrollPane scrollPaneListaPedidos;
	private JPanel panelOpcionesFinales;
	private JTextArea textAreaPedidos;
	private JPanel panelMetodoPago;
	private JPanel panelEleccionJugar;
	private JLabel lblOpcionesJugar;
	private JRadioButton rdbtnJugar;
	private JRadioButton rdbtnNoJugar;
	private final ButtonGroup buttonGroupJugar = new ButtonGroup();
	private JLabel lblOpcionesPago;
	private JRadioButton rdbtnTarjeta;
	private JRadioButton rdbtnEfectivo;
	private JPanel panelBtnFinales;
	private JButton btnCancelar;
	private JButton btnFinalizaryPagar;
	private final ButtonGroup buttonGroupPago = new ButtonGroup();
	private JMenuBar menuBar;
	private JMenu mnOptions;
	private JMenuItem mntmSalida;
	private JMenuItem mntmNuevaSesion;
	private JSeparator separator;
	private JMenu mnAyuda;
	private JMenuItem mntmAyuda;
	private ProcessExit pE = new ProcessExit();
	private ProcessWindowHelpFocus pWHF = new  ProcessWindowHelpFocus();
	private Pizzeria pz;
	private Producto[] menuModel;
	private ProcessFilters pft = new ProcessFilters();
	private ProcessBuying pB = new ProcessBuying();
	private JButton btnPastas;
	private JPanel panelListaDePedidos;
	private JPanel panelPedidoIndividual;
	private JLabel lblProducto;
	private JButton btnPapelera;
	private ProcessTrashBin pP = new 
	class ProcessBuying implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			int pos = Integer.parseInt(e.getActionCommand());
			abrirVentanaProducto(pos);
			
//			pz.addToOrder(menuModel[pos], 1);
//			getTxtAreaCarrito().setText(pz.getOrderToStringShoppingCart());
//			getTextAreaPedidos().setText(pz.getOrderToStringShoppingCart());
			
		}

		
		
	}
	protected void abrirVentanaProducto(int pos) {
		Producto product = menuModel[pos];
		VentanaProducto dialog = new VentanaProducto(this, pz, product);
		dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
		dialog.setVisible(true);
	}
	class ProcessFilters implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			int filter = Integer.parseInt(e.getActionCommand());
			quitarBotonesMenu();
			generarBotonesMenu(filter);
			
		}
		
	}
	class ProcessWindowHelpFocus extends WindowAdapter{
		@Override
		public void windowOpened(WindowEvent e) {
			getBtnSiguiente_Datos().requestFocus();
		}
	}
	class ProcessExit implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			confirmChoice();
			
		}

		
		
	}
	protected void confirmChoice() {
		if(JOptionPane.showConfirmDialog(null, "¬øEst√°s seguro/a de que quieres salir de la aplicaci√≥n?")==JOptionPane.YES_OPTION) {
			System.exit(0);
		}
	}
	class ProcessFrame implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			if(e.getActionCommand().equals("Menu")) {
				cambiarPanelAMenu(e);
			}else if(e.getActionCommand().equals("Revisar y Pagar")){
				cambiarAPanelPago(e);
			}else if(e.getActionCommand().equals("Inicio")){
				cambiarAInicioOJuego(e);
			}else if(e.getActionCommand().equals("Reinicio")){
				reiniciar();
			}else {
				changeFrame(e);
					
			}
			
		}

	
	
		
}
	class ProcessTrashBin implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			int i = Integer.parseInt(e.getActionCommand());
			pz.remove(pz.getOrder().getOrderList().get(i));
			getPanelListaDePedidos().remove(i);
			getPanelListaDePedidos().repaint();
			
		}
		
	}
	protected void cambiarPanelAMenu(ActionEvent e) {
		if(String.valueOf(getPasswordFieldReserva().getPassword()).isBlank() || String.valueOf(getPasswordFieldReserva().getPassword()).isEmpty() || getTextFieldDNI().getText().isBlank() || getTextFieldDNI().getText().isEmpty() || !pz.isUserAClient(getTextFieldDNI().getText(), String.valueOf(getPasswordFieldReserva().getPassword()))) {
			JOptionPane.showMessageDialog(null, "Los datos introducidos no son v√°lidos", "Uniovi's Error", JOptionPane.WARNING_MESSAGE);
			changeFrame(e);
			//pz.saveCustomerData(getTextFieldDNI().getText(), String.valueOf(getPasswordFieldReserva().getPassword()));
		}else {
			changeFrame(e);
			pz.saveCustomerData(getTextFieldDNI().getText(), String.valueOf(getPasswordFieldReserva().getPassword()));
		}
	}
	protected void cambiarAPanelPago(ActionEvent e) {
		if((float)pz.getOrderTotal()==0) {
			JOptionPane.showMessageDialog(null, "No has seleccionado ning√∫n producto", "Error", JOptionPane.WARNING_MESSAGE);
		}else {
			changeFrame(e);
			generarPedido();
		}
	}
	protected void reiniciar() {
		restart();
		pz.initializeOrderDifferentClient();
		inicializarInterfazNuevoUsuario();
	}
	protected void cambiarAInicioOJuego(ActionEvent e) {
		if(getRdbtnJugar().isSelected() && !pz.hasPlayed()) {
			pz.getClient().editPlayState(true);
			pz.getClient().editTimesOrdered(pz.getClient().getTimesOrdered()+1);
			
		}else if(getRdbtnJugar().isSelected() && pz.hasPlayed()){
			JOptionPane.showMessageDialog(null, "Lo sentimos, s√≥lo se puede jugar una vez por reserva", "Error", JOptionPane.WARNING_MESSAGE);
		}else {
			pz.getClient().editTimesOrdered(pz.getClient().getTimesOrdered()+1);
			pz.saveOrder();
			changeFrame(e);
			pz.initializeOrder();
			inicializarInterfaz();
		}
	}

	protected void inicializarInterfaz() {
		getTxtAreaCarrito().setText(pz.getOrderToStringShoppingCart());
		getTextAreaPedidos().setText("");

	}
	protected void inicializarInterfazNuevoUsuario() {
		getTxtAreaCarrito().setText(pz.getOrderToStringShoppingCart());
		getTextAreaPedidos().setText("");
		getTextFieldDNI().setText("");
		getPasswordFieldReserva().setText("");
		getRdbtnJugar().setSelected(true);
		getRdbtnTarjeta().setSelected(true);
	}
	protected void changeFrame(ActionEvent e) {
		String frame = e.getActionCommand();
		((CardLayout)getContentPane().getLayout()).show(getContentPane(), frame);
		setTitle("Uniovi's: " + frame);
	}
	protected void restart() {
		((CardLayout)getContentPane().getLayout()).show(getContentPane(), "Inicio");
		setTitle("Uniovi's: ");
	}
	class ProcessCart implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			showShoppingCart();
			
		}

		
		
	}
	protected void showShoppingCart() {
		if(getTxtAreaCarrito().isVisible()) {
			getTxtAreaCarrito().setVisible(false);
		}else {
			getTxtAreaCarrito().setVisible(true);
		}
	}

	/**
	 * Create the frame.
	 */
	public VentanaPrincipal(Pizzeria pz) {
		this.pz = pz;
		addWindowListener(pWHF);
		setMinimumSize(new Dimension(550, 350));
		setTitle("Uniovi's ");
		setIconImage(Toolkit.getDefaultToolkit().getImage(VentanaPrincipal.class.getResource("/img/logo.png")));
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 900, 620);
		setLocationRelativeTo(null);
		setJMenuBar(getMenuBar_4());
		contentPane = new JPanel();
		contentPane.setBackground(new Color(255, 0, 0));
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(new CardLayout(0, 0));
		contentPane.add(getPanelInicio(), "Inicio");
		contentPane.add(getPanelRegistro(), "Datos de Registro");
		contentPane.add(getPanelMenu(), "Menu");
		contentPane.add(getPanelPago(), "Revisar y Pagar");
	}

	private JPanel getPanelInicio() {
		if (panelInicio == null) {
			panelInicio = new JPanel();
			panelInicio.setBackground(new Color(255, 0, 0));
			panelInicio.setLayout(new BorderLayout(0, 0));
			panelInicio.add(getPanelBienvenida(), BorderLayout.CENTER);
			panelInicio.add(getPanelIdiomas(), BorderLayout.NORTH);
			panelInicio.add(getPanelSaludo(), BorderLayout.SOUTH);
		}
		return panelInicio;
	}
	private JPanel getPanelBienvenida() {
		if (panelBienvenida == null) {
			panelBienvenida = new JPanel();
			panelBienvenida.setBackground(new Color(0, 0, 139));
			panelBienvenida.setLayout(new BorderLayout(0, 0));
			panelBienvenida.add(getLblIngredients(), BorderLayout.CENTER);
			panelBienvenida.add(getLblIngredients2(), BorderLayout.WEST);
			panelBienvenida.add(getLblIngredients2_1(), BorderLayout.EAST);
		}
		return panelBienvenida;
	}
	private JPanel getPanelIdiomas() {
		if (panelIdiomas == null) {
			panelIdiomas = new JPanel();
			panelIdiomas.setBackground(new Color(255, 0, 0));
			panelIdiomas.setLayout(new GridLayout(0, 4, 0, 0));
			panelIdiomas.add(getBtnSpanish());
			panelIdiomas.add(getBtnEnglish());
			panelIdiomas.add(getBtnFrench());
			panelIdiomas.add(getBtnItalian());
		}
		return panelIdiomas;
	}
	private JButton getBtnSpanish() {
		if (btnSpanish == null) {
			btnSpanish = new JButton("");
			btnSpanish.setBackground(new Color(255, 255, 255));
			btnSpanish.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/es.png")));
		}
		return btnSpanish;
	}
	private JLabel getLblIngredients() {
		if (lblIngredients == null) {
			lblIngredients = new JLabel("");
			lblIngredients.setHorizontalAlignment(SwingConstants.CENTER);
			lblIngredients.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/bienvenida.png")));
		}
		return lblIngredients;
	}
	private JButton getBtnEnglish() {
		if (btnEnglish == null) {
			btnEnglish = new JButton("");
			btnEnglish.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/en.png")));
			btnEnglish.setBackground(Color.WHITE);
		}
		return btnEnglish;
	}
	private JButton getBtnFrench() {
		if (btnFrench == null) {
			btnFrench = new JButton("");
			btnFrench.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/fr.png")));
			btnFrench.setBackground(Color.WHITE);
		}
		return btnFrench;
	}
	private JButton getBtnItalian() {
		if (btnItalian == null) {
			btnItalian = new JButton("");
			btnItalian.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/it.png")));
			btnItalian.setBackground(Color.WHITE);
		}
		return btnItalian;
	}
	private JPanel getPanelSaludo() {
		if (panelSaludo == null) {
			panelSaludo = new JPanel();
			panelSaludo.setBackground(new Color(255, 0, 0));
			panelSaludo.setLayout(new GridLayout(0, 2, 0, 0));
			panelSaludo.add(getLblWelcome_1());
			panelSaludo.add(getBtnSiguiente_Datos());
		}
		return panelSaludo;
	}
	private JLabel getLblWelcome_1() {
		if (lblWelcome == null) {
			lblWelcome = new JLabel("\u00A1Bienvenido a Uniovi's!");
			lblWelcome.setHorizontalAlignment(SwingConstants.CENTER);
			lblWelcome.setForeground(Color.WHITE);
			lblWelcome.setFont(new Font("Dialog", Font.BOLD, 28));
			lblWelcome.setBorder(new LineBorder(new Color(0, 0, 0), 0));
			lblWelcome.setBackground(Color.WHITE);
		}
		return lblWelcome;
	}
	private JButton getBtnSiguiente_Datos() {
		if (btnSiguiente_Datos == null) {
			btnSiguiente_Datos = new JButton("Continuar");
			btnSiguiente_Datos.setAlignmentX(Component.RIGHT_ALIGNMENT);
			btnSiguiente_Datos.setBackground(new Color(50, 205, 50));
			btnSiguiente_Datos.setForeground(new Color(255, 255, 255));
			btnSiguiente_Datos.setFont(new Font("SansSerif", Font.PLAIN, 24));
			btnSiguiente_Datos.setMnemonic('C');
			btnSiguiente_Datos.setBorder(new LineBorder(new Color(0, 0, 0), 4, true));
			btnSiguiente_Datos.setActionCommand("Datos de Registro");
			btnSiguiente_Datos.addActionListener(pf);
		}
		return btnSiguiente_Datos;
	}
	private JLabel getLblIngredients2() {
		if (lblIngredients2 == null) {
			lblIngredients2 = new JLabel("");
			lblIngredients2.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/PI03.png")));
		}
		return lblIngredients2;
	}
	private JLabel getLblIngredients2_1() {
		if (lblIngredients2_1 == null) {
			lblIngredients2_1 = new JLabel("");
			lblIngredients2_1.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/BE02.png")));
		}
		return lblIngredients2_1;
	}
	private JPanel getPanelRegistro() {
		if (panelRegistro == null) {
			panelRegistro = new JPanel();
			panelRegistro.setLayout(new BorderLayout(0, 0));
			panelRegistro.add(getPanelDatos(), BorderLayout.CENTER);
			panelRegistro.add(getPanelBtn(), BorderLayout.SOUTH);
			panelRegistro.add(getPanelSpacing(), BorderLayout.EAST);
		}
		return panelRegistro;
	}
	private JPanel getPanelDatos() {
		if (panelDatos == null) {
			panelDatos = new JPanel();
			panelDatos.setBackground(new Color(0, 0, 128));
			panelDatos.setLayout(new GridLayout(6, 1, 0, 0));
			panelDatos.add(getLblDNI());
			panelDatos.add(getTextFieldDNI());
			panelDatos.add(getLblReserva());
			panelDatos.add(getPasswordFieldReserva());
		}
		return panelDatos;
	}
	private JTextField getTextFieldDNI() {
		if (textFieldDNI == null) {
			textFieldDNI = new JTextField();
			textFieldDNI.setFont(new Font("SansSerif", Font.PLAIN, 28));
			textFieldDNI.setColumns(10);
		}
		return textFieldDNI;
	}
	private JLabel getLblDNI() {
		if (lblDNI == null) {
			lblDNI = new JLabel("DNI / NIE:");
			lblDNI.setLabelFor(getTextFieldDNI());
			lblDNI.setDisplayedMnemonic('D');
			lblDNI.setForeground(new Color(255, 255, 255));
			lblDNI.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return lblDNI;
	}
	private JLabel getLblReserva() {
		if (lblReserva == null) {
			lblReserva = new JLabel("N\u00BA / C\u00F3digo de reserva");
			lblReserva.setLabelFor(getPasswordFieldReserva());
			lblReserva.setDisplayedMnemonic('N');
			lblReserva.setForeground(new Color(255, 255, 255));
			lblReserva.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return lblReserva;
	}
	private JPanel getPanelBtn() {
		if (panelBtn == null) {
			panelBtn = new JPanel();
			panelBtn.setBackground(new Color(0, 0, 128));
			panelBtn.setLayout(new GridLayout(1, 0, 0, 0));
			panelBtn.add(getLblPlaceHolder_1());
			panelBtn.add(getLblPlaceHolder());
			panelBtn.add(getBtnSiguiente_Menu());
		}
		return panelBtn;
	}
	private JLabel getLblPlaceHolder() {
		if (lblPlaceHolder == null) {
			lblPlaceHolder = new JLabel("");
			lblPlaceHolder.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder;
	}
	private JButton getBtnSiguiente_Menu() {
		if (btnSiguiente_Menu == null) {
			btnSiguiente_Menu = new JButton("Continuar");
			btnSiguiente_Menu.setForeground(new Color(255, 255, 255));
			btnSiguiente_Menu.setBackground(new Color(50, 205, 50));
			btnSiguiente_Menu.setFont(new Font("SansSerif", Font.PLAIN, 28));
			btnSiguiente_Menu.setMnemonic('C');
			btnSiguiente_Menu.setActionCommand("Menu");
			btnSiguiente_Menu.addActionListener(pf);
		}
		return btnSiguiente_Menu;
	}
	private JLabel getLblPlaceHolder_1() {
		if (lblPlaceHolder_1 == null) {
			lblPlaceHolder_1 = new JLabel("");
			lblPlaceHolder_1.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder_1;
	}
	private JPanel getPanelSpacing() {
		if (panelSpacing == null) {
			panelSpacing = new JPanel();
			panelSpacing.setBackground(new Color(0, 0, 128));
			panelSpacing.add(getLblPlaceHolder_1_1());
		}
		return panelSpacing;
	}
	private JLabel getLblPlaceHolder_1_1() {
		if (lblPlaceHolder_1_1 == null) {
			lblPlaceHolder_1_1 = new JLabel("                                                                                                            ");
			lblPlaceHolder_1_1.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder_1_1;
	}
	private JPanel getPanelMenu() {
		if (panelMenu == null) {
			panelMenu = new JPanel();
			panelMenu.setLayout(new BorderLayout(0, 0));
			panelMenu.add(getPanelFiltros(), BorderLayout.WEST);
			panelMenu.add(getScrollPaneProductos(), BorderLayout.CENTER);
			panelMenu.add(getPanelFinalizarMenu(), BorderLayout.SOUTH);
			panelMenu.add(getPanelCarrito(), BorderLayout.EAST);
		}
		return panelMenu;
	}
	private JPanel getPanelFiltros() {
		if (panelFiltros == null) {
			panelFiltros = new JPanel();
			panelFiltros.setLayout(new GridLayout(7, 0, 0, 0));
			panelFiltros.add(getBtnTodos());
			panelFiltros.add(getBtnPizzas());
			panelFiltros.add(getBtnEntrantes());
			panelFiltros.add(getBtnEnsaladas());
			panelFiltros.add(getBtnPostres());
			panelFiltros.add(getBtnPastas());
			panelFiltros.add(getBtnBebidas());
		}
		return panelFiltros;
	}
	private JButton getBtnTodos() {
		if (btnTodos == null) {
			btnTodos = new JButton("");
			btnTodos.setText("Todos");
			btnTodos.setVerticalTextPosition(SwingConstants.TOP);
			btnTodos.setHorizontalTextPosition(SwingConstants.CENTER);
			btnTodos.setBackground(new Color(255, 255, 255));
			btnTodos.setToolTipText("Filtrar - Todos");
			setImagenAdaptada(btnTodos, "/img/bienvenida.png");
			btnTodos.setActionCommand(String.valueOf(Pizzeria.TODOS));
			btnTodos.addActionListener(pft);
		}
		return btnTodos;
	}
	private JButton getBtnPizzas() {
		if (btnPizzas == null) {
			btnPizzas = new JButton("");
			btnPizzas.setText("Pizzas");
			btnPizzas.setVerticalTextPosition(SwingConstants.TOP);
			btnPizzas.setHorizontalTextPosition(SwingConstants.CENTER);
			btnPizzas.setBackground(new Color(255, 255, 255));
			btnPizzas.setToolTipText("Filtrar - Pizzas");
			setImagenAdaptada(btnPizzas,"/img/PI01.png");
			btnPizzas.addActionListener(pft);
			btnPizzas.setActionCommand(String.valueOf(Pizzeria.PIZZAS));
		}
		return btnPizzas;
	}
	private JButton getBtnEntrantes() {
		if (btnEntrantes == null) {
			btnEntrantes = new JButton("");
			btnEntrantes.setText("Entrantes");
			btnEntrantes.setVerticalTextPosition(SwingConstants.TOP);
			btnEntrantes.setHorizontalTextPosition(SwingConstants.CENTER);
			btnEntrantes.setBackground(new Color(255, 255, 255));
			btnEntrantes.setToolTipText("Filtrar - Entrantes");
			setImagenAdaptada(btnEntrantes, "/img/ET02.png");
			btnEntrantes.addActionListener(pft);
			btnEntrantes.setActionCommand(String.valueOf(Pizzeria.ENTRANTES));
		}
		return btnEntrantes;
	}
	private JButton getBtnEnsaladas() {
		if (btnEnsaladas == null) {
			btnEnsaladas = new JButton("Ensaladas");
			btnEnsaladas.setText("Ensaladas");
			btnEnsaladas.setVerticalTextPosition(SwingConstants.TOP);
			btnEnsaladas.setHorizontalTextPosition(SwingConstants.CENTER);
			btnEnsaladas.setBackground(new Color(255, 255, 255));
			btnEnsaladas.setToolTipText("Filtrar - Ensaladas");
			setImagenAdaptada(btnEnsaladas, "/img/EN02.png");
			btnEnsaladas.addActionListener(pft);
			btnEnsaladas.setActionCommand(String.valueOf(Pizzeria.ENSALADAS));
		}
		return btnEnsaladas;
	}
	private JButton getBtnPostres() {
		if (btnPostres == null) {
			btnPostres = new JButton("");
			btnPostres.setText("Postres");
			btnPostres.setBackground(new Color(255, 255, 255));
			btnPostres.setVerticalTextPosition(SwingConstants.TOP);
			btnPostres.setHorizontalTextPosition(SwingConstants.CENTER);
			btnPostres.setToolTipText("Filtrar - Postres");
			btnPostres.setActionCommand(String.valueOf(Pizzeria.POSTRES));
			setImagenAdaptada(btnPostres, "/img/PO01.png");
			btnPostres.addActionListener(pft);
		}
		return btnPostres;
	}
	private JButton getBtnBebidas() {
		if (btnBebidas == null) {
			btnBebidas = new JButton("");
			btnBebidas.setText("Bebidas");
			btnBebidas.setVerticalTextPosition(SwingConstants.TOP);
			btnBebidas.setHorizontalTextPosition(SwingConstants.CENTER);
			btnBebidas.setBackground(new Color(255, 255, 255));
			btnBebidas.setToolTipText("Filtrar - Bebidas");
			setImagenAdaptada(btnBebidas, "/img/BE03.png");
			btnBebidas.addActionListener(pft);
			btnBebidas.setActionCommand(String.valueOf(Pizzeria.BEBIDAS));
		}
		return btnBebidas;
	}
	private void setImagenAdaptada(JButton boton, String rutaImagen){
		 Image imgOriginal = new ImageIcon(getClass().getResource(rutaImagen)).getImage(); 
		 Image imgEscalada = imgOriginal.getScaledInstance((int) (70), (int) (70),Image.SCALE_SMOOTH);
		 //si se quiere reescalar la ventana, este 100 tendria que cambiarse por el width y el height  respectivamente de la imagen para que as√≠ se reescale cada vez que cambias el tama√±o
		 //adem√°s este m√©todo deber√≠a llamarse en el constructor de la ventana mientras se usa un evento componentResized
		 boton.setIcon(new ImageIcon(imgEscalada));
	}
	private JScrollPane getScrollPaneProductos() {
		if (scrollPaneProductos == null) {
			scrollPaneProductos = new JScrollPane();
			scrollPaneProductos.setViewportView(getPanelProductos());
		}
		return scrollPaneProductos;
	}
	private JPanel getPanelProductos() {
		if (panelProductos == null) {
			panelProductos = new JPanel();
			panelProductos.setBackground(new Color(0, 0, 128));
			panelProductos.setLayout(new GridLayout(0, 4, 40, 40));
			generarBotonesMenu(Pizzeria.TODOS);
		}
		return panelProductos;
	}
	private void quitarBotonesMenu() {
		getPanelProductos().removeAll();
		getPanelProductos().repaint();
	}
	protected void generarBotonesMenu(int filter) {
			menuModel = pz.typeOfFilter(filter);
		for(int i=0; i<menuModel.length; i++) {
			JButton j = new JButton("");
			j.setText(menuModel[i].toStringMenu());
			j.setVerticalTextPosition(SwingConstants.BOTTOM); 
			j.setHorizontalTextPosition(SwingConstants.CENTER);
			setImagenAdaptada(j, "/img/" +menuModel[i].getCode() + ".png");
			j.setBackground(Color.black);
			j.setForeground(Color.white);
			if(i==0 && menuModel[i].getType().equals("Pizza")) {
				j.setBorder(new LineBorder(Color.red, 8));
				j.setText("¬°Pizza del d√≠a! - " + j.getText());
			}
			j.setActionCommand(String.valueOf(i));
			j.addActionListener(pB);
			panelProductos.add(j);
			validate();
		}
	}
	private JPanel getPanelFinalizarMenu() {
		if (panelFinalizarMenu == null) {
			panelFinalizarMenu = new JPanel();
			panelFinalizarMenu.setBackground(new Color(128, 0, 0));
			panelFinalizarMenu.setLayout(new GridLayout(0, 5, 0, 0));
			panelFinalizarMenu.add(getLblPlaceHolderMenu());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_3());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_1());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_2());
			panelFinalizarMenu.add(getBtnFinalizar());
		}
		return panelFinalizarMenu;
	}
	private JLabel getLblPlaceHolderMenu() {
		if (lblPlaceHolderMenu == null) {
			lblPlaceHolderMenu = new JLabel("");
		}
		return lblPlaceHolderMenu;
	}
	private JButton getBtnFinalizar() {
		if (btnFinalizar == null) {
			btnFinalizar = new JButton("Finalizar");
			btnFinalizar.setBorder(new LineBorder(new Color(0, 0, 0), 4));
			btnFinalizar.setMnemonic('F');
			btnFinalizar.setForeground(new Color(255, 255, 255));
			btnFinalizar.setBackground(new Color(50, 205, 50));
			btnFinalizar.setFont(new Font("SansSerif", Font.PLAIN, 28));
			btnFinalizar.setActionCommand("Revisar y Pagar");
			btnFinalizar.addActionListener(pf);
		}
		return btnFinalizar;
	}
	private JLabel getLblPlaceHolderMenu_2() {
		if (lblPlaceHolderMenu_2 == null) {
			lblPlaceHolderMenu_2 = new JLabel("");
		}
		return lblPlaceHolderMenu_2;
	}
	private JLabel getLblPlaceHolderMenu_1() {
		if (lblPlaceHolderMenu_1 == null) {
			lblPlaceHolderMenu_1 = new JLabel("");
		}
		return lblPlaceHolderMenu_1;
	}
	private JLabel getLblPlaceHolderMenu_3() {
		if (lblPlaceHolderMenu_3 == null) {
			lblPlaceHolderMenu_3 = new JLabel("");
		}
		return lblPlaceHolderMenu_3;
	}
	private JPanel getPanelCarrito() {
		if (panelCarrito == null) {
			panelCarrito = new JPanel();
			panelCarrito.setBackground(new Color(128, 0, 0));
			panelCarrito.setLayout(new BorderLayout(0, 0));
			panelCarrito.add(getBtnCarrito(), BorderLayout.NORTH);
			panelCarrito.add(getScrollPaneCarrito());
		}
		return panelCarrito;
	}
	private JButton getBtnCarrito() {
		if (btnCarrito == null) {
			btnCarrito = new JButton("");
			btnCarrito.setToolTipText("Mostrar/Ocultar Carrito");
			btnCarrito.setBackground(new Color(255, 255, 255));
			setImagenAdaptada(btnCarrito,"/img/carrito.png");
			btnCarrito.addActionListener(pCrt);
		}
		return btnCarrito;
	}
	private JScrollPane getScrollPaneCarrito() {
		if (scrollPaneCarrito == null) {
			scrollPaneCarrito = new JScrollPane();
			scrollPaneCarrito.setEnabled(false);
			scrollPaneCarrito.setViewportView(getTxtAreaCarrito());
		}
		return scrollPaneCarrito;
	}
	protected JTextArea getTxtAreaCarrito() {
		if (txtAreaCarrito == null) {
			txtAreaCarrito = new JTextArea();
			txtAreaCarrito.setBackground(new Color(255, 255, 255));
			txtAreaCarrito.setEditable(false);
			txtAreaCarrito.setVisible(false);
			txtAreaCarrito.setText(pz.getOrderToStringShoppingCart());
		}
		return txtAreaCarrito;
	}
	private JPasswordField getPasswordFieldReserva() {
		if (passwordFieldReserva == null) {
			passwordFieldReserva = new JPasswordField();
			passwordFieldReserva.setBackground(new Color(255, 255, 255));
			passwordFieldReserva.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return passwordFieldReserva;
	}
	private JPanel getPanelPago() {
		if (panelPago == null) {
			panelPago = new JPanel();
			panelPago.setLayout(new GridLayout(0, 2, 0, 0));
			panelPago.add(getPanelListaDePedidos());
			panelPago.add(getPanelOpcionesFinales());
		}
		return panelPago;
	}
	private JPanel getPanelListaDePedidos() {
		if(panelListaDePedidos==null) {
			panelListaDePedidos = new JPanel();
			panelListaDePedidos.setLayout(new GridLayout(pz.getOrder().getOrderList().size(), 1, 0, 0));
			//panelListaDePedidos.add(getPanelPedidoIndividual());
			panelPago.setLayout(new GridLayout(1,1,0,2));
			generarPedido();
		}
		return panelListaDePedidos;
	}
	public void generarPedido() {
		for(int i=0; i<pz.getOrder().getOrderList().size(); i++) {
			JPanel panelPedidoIndividual = new JPanel();
			panelPedidoIndividual.setLayout(new GridLayout(0,2,0,0));
			panelPedidoIndividual.add(crearEtiqueta(i));
			panelPedidoIndividual.add(crearBotonPapelera());
			getPanelListaDePedidos().add(panelPedidoIndividual);
		}
		
	}
	private JButton crearBotonPapelera() {
		JButton boton = new JButton("Borrar");
		boton.setBackground(Color.red);
		setImagenAdaptada(boton, "/img/papelera.png");
		boton.setActionCommand(getName());
		boton.addActionListener(pP);
		return boton;
	}
	private JLabel crearEtiqueta(int i) {
		JLabel label = new JLabel();
		label.setText(pz.getOrder().getOrderList().get(i).toStringShoppingCart());
		return label;
	}
	private JScrollPane getScrollPaneListaPedidos() {
		if (scrollPaneListaPedidos == null) {
			scrollPaneListaPedidos = new JScrollPane();
			scrollPaneListaPedidos.setViewportView(getTextAreaPedidos());
		}
		return scrollPaneListaPedidos;
	}
	private JPanel getPanelOpcionesFinales() {
		if (panelOpcionesFinales == null) {
			panelOpcionesFinales = new JPanel();
			panelOpcionesFinales.setBackground(new Color(0, 0, 128));
			panelOpcionesFinales.setLayout(new BorderLayout(0, 0));
			panelOpcionesFinales.add(getPanelMetodoPago(), BorderLayout.CENTER);
			panelOpcionesFinales.add(getPanelEleccionJugar(), BorderLayout.NORTH);
			panelOpcionesFinales.add(getPanelBtnFinales(), BorderLayout.SOUTH);
		}
		return panelOpcionesFinales;
	}
	public JTextArea getTextAreaPedidos() {
		if (textAreaPedidos == null) {
			textAreaPedidos = new JTextArea();
			textAreaPedidos.setText("");
			textAreaPedidos.setFont(new Font("SansSerif", Font.PLAIN, 21));
		}
		return textAreaPedidos;
	}
	private JPanel getPanelMetodoPago() {
		if (panelMetodoPago == null) {
			panelMetodoPago = new JPanel();
			panelMetodoPago.setBackground(new Color(0, 0, 128));
			panelMetodoPago.setLayout(new GridLayout(4, 1, 0, 0));
			panelMetodoPago.add(getLblOpcionesPago());
			panelMetodoPago.add(getRdbtnTarjeta());
			panelMetodoPago.add(getRdbtnEfectivo());
		}
		return panelMetodoPago;
	}
	private JPanel getPanelEleccionJugar() {
		if (panelEleccionJugar == null) {
			panelEleccionJugar = new JPanel();
			panelEleccionJugar.setBackground(new Color(0, 0, 128));
			panelEleccionJugar.setLayout(new GridLayout(3, 1, 0, 0));
			panelEleccionJugar.add(getLblOpcionesJugar());
			panelEleccionJugar.add(getRdbtnJugar());
			panelEleccionJugar.add(getRdbtnNoJugar());
		}
		return panelEleccionJugar;
	}
	private JLabel getLblOpcionesJugar() {
		if (lblOpcionesJugar == null) {
			lblOpcionesJugar = new JLabel("\u00BFQuiere jugar para descuentos?");
			lblOpcionesJugar.setForeground(new Color(255, 255, 255));
			lblOpcionesJugar.setFont(new Font("SansSerif", Font.BOLD, 27));
		}
		return lblOpcionesJugar;
	}
	private JRadioButton getRdbtnJugar() {
		if (rdbtnJugar == null) {
			rdbtnJugar = new JRadioButton("Jugar");
			rdbtnJugar.setBackground(new Color(0, 0, 128));
			rdbtnJugar.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnJugar.setSelected(true);
			rdbtnJugar.setMnemonic('J');
			buttonGroupJugar.add(rdbtnJugar);
			rdbtnJugar.setForeground(new Color(255, 255, 255));
		}
		return rdbtnJugar;
	}
	private JRadioButton getRdbtnNoJugar() {
		if (rdbtnNoJugar == null) {
			rdbtnNoJugar = new JRadioButton("No jugar");
			rdbtnNoJugar.setBackground(new Color(0, 0, 128));
			rdbtnNoJugar.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnNoJugar.setMnemonic('N');
			buttonGroupJugar.add(rdbtnNoJugar);
			rdbtnNoJugar.setForeground(new Color(255, 255, 255));
		}
		return rdbtnNoJugar;
	}
	private JLabel getLblOpcionesPago() {
		if (lblOpcionesPago == null) {
			lblOpcionesPago = new JLabel("\u00BFC\u00F3mo desea pagar?");
			lblOpcionesPago.setHorizontalAlignment(SwingConstants.LEFT);
			lblOpcionesPago.setFont(new Font("SansSerif", Font.BOLD, 27));
			lblOpcionesPago.setForeground(new Color(255, 255, 255));
		}
		return lblOpcionesPago;
	}
	private JRadioButton getRdbtnTarjeta() {
		if (rdbtnTarjeta == null) {
			rdbtnTarjeta = new JRadioButton("Tarjeta");
			rdbtnTarjeta.setBackground(new Color(0, 0, 128));
			rdbtnTarjeta.setMnemonic('T');
			rdbtnTarjeta.setSelected(true);
			buttonGroupPago.add(rdbtnTarjeta);
			rdbtnTarjeta.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnTarjeta.setForeground(new Color(255, 255, 255));
			rdbtnTarjeta.setHorizontalAlignment(SwingConstants.LEFT);
		}
		return rdbtnTarjeta;
	}
	private JRadioButton getRdbtnEfectivo() {
		if (rdbtnEfectivo == null) {
			rdbtnEfectivo = new JRadioButton("Efectivo");
			rdbtnEfectivo.setBackground(new Color(0, 0, 128));
			rdbtnEfectivo.setMnemonic('E');
			buttonGroupPago.add(rdbtnEfectivo);
			rdbtnEfectivo.setForeground(new Color(255, 255, 255));
			rdbtnEfectivo.setFont(new Font("SansSerif", Font.PLAIN, 19));
		}
		return rdbtnEfectivo;
	}
	private JPanel getPanelBtnFinales() {
		if (panelBtnFinales == null) {
			panelBtnFinales = new JPanel();
			panelBtnFinales.setLayout(new GridLayout(0, 2, 0, 0));
			panelBtnFinales.add(getBtnCancelar());
			panelBtnFinales.add(getBtnFinalizaryPagar());
		}
		return panelBtnFinales;
	}
	private JButton getBtnCancelar() {
		if (btnCancelar == null) {
			btnCancelar = new JButton("Cancelar");
			btnCancelar.setBorder(new LineBorder(new Color(0, 0, 0), 4));
			btnCancelar.setForeground(new Color(255, 255, 255));
			btnCancelar.setBackground(new Color(255, 0, 0));
			btnCancelar.setFont(new Font("SansSerif", Font.PLAIN, 27));
			btnCancelar.setMnemonic('C');
			btnCancelar.setActionCommand("Menu");
			btnCancelar.addActionListener(pf);
		}
		return btnCancelar;
	}
	private JButton getBtnFinalizaryPagar() {
		if (btnFinalizaryPagar == null) {
			btnFinalizaryPagar = new JButton("Finalizar y pagar");
			btnFinalizaryPagar.setBorder(new LineBorder(new Color(0, 0, 0), 4));
			btnFinalizaryPagar.setMnemonic('F');
			btnFinalizaryPagar.setBackground(new Color(50, 205, 50));
			btnFinalizaryPagar.setForeground(new Color(255, 255, 255));
			btnFinalizaryPagar.setFont(new Font("SansSerif", Font.PLAIN, 23));
			btnFinalizaryPagar.setActionCommand("Inicio");
			btnFinalizaryPagar.addActionListener(pf);
		}
		return btnFinalizaryPagar;
	}
	private JMenuBar getMenuBar_4() {
		if (menuBar == null) {
			menuBar = new JMenuBar();
			menuBar.add(getMenu_1());
			menuBar.add(getMenu_2());
		}
		return menuBar;
	}
	private JMenu getMenu_1() {
		if (mnOptions == null) {
			mnOptions = new JMenu("Opciones");
			mnOptions.setMnemonic('O');
			mnOptions.add(getMntmNuevaSesion());
			mnOptions.add(getSeparator());
			mnOptions.add(getMntmSalida());
		}
		return mnOptions;
	}
	private JMenuItem getMntmSalida() {
		if (mntmSalida == null) {
			mntmSalida = new JMenuItem("Salida");
			mntmSalida.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_X, InputEvent.CTRL_DOWN_MASK));
			mntmSalida.addActionListener(pE);
		}
		return mntmSalida;
	}
	private JMenuItem getMntmNuevaSesion() {
		if (mntmNuevaSesion == null) {
			mntmNuevaSesion = new JMenuItem("Nueva Sesion");
			mntmNuevaSesion.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, InputEvent.CTRL_DOWN_MASK));
			mntmNuevaSesion.setActionCommand("Reinicio");
			mntmNuevaSesion.addActionListener(pf);
		}
		return mntmNuevaSesion;
	}
	private JSeparator getSeparator() {
		if (separator == null) {
			separator = new JSeparator();
		}
		return separator;
	}
	private JMenu getMenu_2() {
		if (mnAyuda == null) {
			mnAyuda = new JMenu("Ayuda");
			mnAyuda.setMnemonic('A');
			mnAyuda.add(getMntmAyuda());
		}
		return mnAyuda;
	}
	private JMenuItem getMntmAyuda() {
		if (mntmAyuda == null) {
			mntmAyuda = new JMenuItem("Abrir men\u00FA de ayuda");
			mntmAyuda.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F1, InputEvent.CTRL_DOWN_MASK));
		}
		return mntmAyuda;
	}
	private JButton getBtnPastas() {
		if (btnPastas == null) {
			btnPastas = new JButton("Pastas");
			btnPastas.setVerticalTextPosition(SwingConstants.TOP);
			btnPastas.setToolTipText("Filtrar - Pastas");
			btnPastas.setHorizontalTextPosition(SwingConstants.CENTER);
			btnPastas.setBackground(Color.WHITE);
			btnPastas.setActionCommand(String.valueOf(Pizzeria.PASTAS));
			btnPastas.addActionListener(pft);
			setImagenAdaptada(btnPastas, "/img/PA02.png");
		}
		return btnPastas;
	}
	
	private JPanel getPanelPedidoIndividual() {
		if (panelPedidoIndividual == null) {
			panelPedidoIndividual = new JPanel();
			panelPedidoIndividual.setLayout(new GridLayout(0, 2, 0, 0));
			panelPedidoIndividual.add(getLblProducto());
			panelPedidoIndividual.add(getBtnPapelera());
		}
		return panelPedidoIndividual;
	}
	private JLabel getLblProducto() {
		if (lblProducto == null) {
			lblProducto = new JLabel("New label");
		}
		return lblProducto;
	}
	private JButton getBtnPapelera() {
		if (btnPapelera == null) {
			btnPapelera = new JButton("Borrar");
			btnPapelera.setBackground(Color.red);
		}
		return btnPapelera;
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2024-12-30 17:32:07.921
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2024-12-30 17:32:07.921
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2024-12-30 17:32:07.928
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package uo.cpm.modulo.ui;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import java.awt.CardLayout;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.BorderLayout;
import javax.swing.JLabel;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.BoxLayout;
import java.awt.GridLayout;
import java.awt.Image;

import javax.swing.ImageIcon;
import java.awt.Color;
import java.awt.Font;
import javax.swing.border.LineBorder;

import uo.cpm.modulo.model.Producto;
import uo.cpm.modulo.service.Pizzeria;

import javax.swing.SwingConstants;
import java.awt.FlowLayout;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.Component;
import java.awt.Dimension;

import javax.swing.JTextField;
import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.InputEvent;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JPasswordField;
import javax.swing.JSplitPane;
import javax.swing.JRadioButton;
import javax.swing.ButtonGroup;
import javax.swing.JSeparator;

public class VentanaPrincipal extends JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private JPanel contentPane;
	private JPanel panelInicio;
	private JPanel panelBienvenida;
	private JPanel panelIdiomas;
	private JButton btnSpanish;
	private JLabel lblIngredients;
	private JButton btnEnglish;
	private JButton btnFrench;
	private JButton btnItalian;
	private JPanel panelSaludo;
	private JLabel lblWelcome;
	private JButton btnSiguiente_Datos;
	private JLabel lblIngredients2;
	private JLabel lblIngredients2_1;
	private ProcessFrame pf = new  ProcessFrame();
	private JPanel panelRegistro;
	private JPanel panelDatos;
	private JTextField textFieldDNI;
	private JLabel lblDNI;
	private JLabel lblReserva;
	private JPanel panelBtn;
	private JLabel lblPlaceHolder;
	private JButton btnSiguiente_Menu;
	private JLabel lblPlaceHolder_1;
	private JPanel panelSpacing;
	private JLabel lblPlaceHolder_1_1;
	private JPanel panelMenu;
	private JPanel panelFiltros;
	private JButton btnTodos;
	private JButton btnPizzas;
	private JButton btnEntrantes;
	private JButton btnEnsaladas;
	private JButton btnPostres;
	private JButton btnBebidas;
	private JScrollPane scrollPaneProductos;
	private JPanel panelProductos;
	private JPanel panelFinalizarMenu;
	private JLabel lblPlaceHolderMenu;
	private JButton btnFinalizar;
	private JLabel lblPlaceHolderMenu_2;
	private JLabel lblPlaceHolderMenu_1;
	private JLabel lblPlaceHolderMenu_3;
	private JPanel panelCarrito;
	private JButton btnCarrito;
	private JScrollPane scrollPaneCarrito;
	private JTextArea txtAreaCarrito;
	private ProcessCart pCrt = new ProcessCart();
	private JPasswordField passwordFieldReserva;
	private JPanel panelPago;
	private JScrollPane scrollPaneListaPedidos;
	private JPanel panelOpcionesFinales;
	private JTextArea textAreaPedidos;
	private JPanel panelMetodoPago;
	private JPanel panelEleccionJugar;
	private JLabel lblOpcionesJugar;
	private JRadioButton rdbtnJugar;
	private JRadioButton rdbtnNoJugar;
	private final ButtonGroup buttonGroupJugar = new ButtonGroup();
	private JLabel lblOpcionesPago;
	private JRadioButton rdbtnTarjeta;
	private JRadioButton rdbtnEfectivo;
	private JPanel panelBtnFinales;
	private JButton btnCancelar;
	private JButton btnFinalizaryPagar;
	private final ButtonGroup buttonGroupPago = new ButtonGroup();
	private JMenuBar menuBar;
	private JMenu mnOptions;
	private JMenuItem mntmSalida;
	private JMenuItem mntmNuevaSesion;
	private JSeparator separator;
	private JMenu mnAyuda;
	private JMenuItem mntmAyuda;
	private ProcessExit pE = new ProcessExit();
	private ProcessWindowHelpFocus pWHF = new  ProcessWindowHelpFocus();
	private Pizzeria pz;
	private Producto[] menuModel;
	private ProcessFilters pft = new ProcessFilters();
	private ProcessBuying pB = new ProcessBuying();
	private JButton btnPastas;
	private JPanel panelListaDePedidos;
	private JPanel panelPedidoIndividual;
	private JLabel lblProducto;
	private JButton btnPapelera;
	private ProcessTrashBin pP = new 
	class ProcessBuying implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			int pos = Integer.parseInt(e.getActionCommand());
			abrirVentanaProducto(pos);
			
//			pz.addToOrder(menuModel[pos], 1);
//			getTxtAreaCarrito().setText(pz.getOrderToStringShoppingCart());
//			getTextAreaPedidos().setText(pz.getOrderToStringShoppingCart());
			
		}

		
		
	}
	protected void abrirVentanaProducto(int pos) {
		Producto product = menuModel[pos];
		VentanaProducto dialog = new VentanaProducto(this, pz, product);
		dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
		dialog.setVisible(true);
	}
	class ProcessFilters implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			int filter = Integer.parseInt(e.getActionCommand());
			quitarBotonesMenu();
			generarBotonesMenu(filter);
			
		}
		
	}
	class ProcessWindowHelpFocus extends WindowAdapter{
		@Override
		public void windowOpened(WindowEvent e) {
			getBtnSiguiente_Datos().requestFocus();
		}
	}
	class ProcessExit implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			confirmChoice();
			
		}

		
		
	}
	protected void confirmChoice() {
		if(JOptionPane.showConfirmDialog(null, "¬øEst√°s seguro/a de que quieres salir de la aplicaci√≥n?")==JOptionPane.YES_OPTION) {
			System.exit(0);
		}
	}
	class ProcessFrame implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			if(e.getActionCommand().equals("Menu")) {
				cambiarPanelAMenu(e);
			}else if(e.getActionCommand().equals("Revisar y Pagar")){
				cambiarAPanelPago(e);
			}else if(e.getActionCommand().equals("Inicio")){
				cambiarAInicioOJuego(e);
			}else if(e.getActionCommand().equals("Reinicio")){
				reiniciar();
			}else {
				changeFrame(e);
					
			}
			
		}

	
	
		
}
	class ProcessTrashBin implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			int i = Integer.parseInt(e.getActionCommand());
			pz.remove(pz.getOrder().getOrderList().get(i));
			getPanelListaDePedidos().remove(i);
			getPanelListaDePedidos().repaint();
			
		}
		
	}
	protected void cambiarPanelAMenu(ActionEvent e) {
		if(String.valueOf(getPasswordFieldReserva().getPassword()).isBlank() || String.valueOf(getPasswordFieldReserva().getPassword()).isEmpty() || getTextFieldDNI().getText().isBlank() || getTextFieldDNI().getText().isEmpty() || !pz.isUserAClient(getTextFieldDNI().getText(), String.valueOf(getPasswordFieldReserva().getPassword()))) {
			JOptionPane.showMessageDialog(null, "Los datos introducidos no son v√°lidos", "Uniovi's Error", JOptionPane.WARNING_MESSAGE);
			changeFrame(e);
			//pz.saveCustomerData(getTextFieldDNI().getText(), String.valueOf(getPasswordFieldReserva().getPassword()));
		}else {
			changeFrame(e);
			pz.saveCustomerData(getTextFieldDNI().getText(), String.valueOf(getPasswordFieldReserva().getPassword()));
		}
	}
	protected void cambiarAPanelPago(ActionEvent e) {
		if((float)pz.getOrderTotal()==0) {
			JOptionPane.showMessageDialog(null, "No has seleccionado ning√∫n producto", "Error", JOptionPane.WARNING_MESSAGE);
		}else {
			changeFrame(e);
			generarPedido();
		}
	}
	protected void reiniciar() {
		restart();
		pz.initializeOrderDifferentClient();
		inicializarInterfazNuevoUsuario();
	}
	protected void cambiarAInicioOJuego(ActionEvent e) {
		if(getRdbtnJugar().isSelected() && !pz.hasPlayed()) {
			pz.getClient().editPlayState(true);
			pz.getClient().editTimesOrdered(pz.getClient().getTimesOrdered()+1);
			
		}else if(getRdbtnJugar().isSelected() && pz.hasPlayed()){
			JOptionPane.showMessageDialog(null, "Lo sentimos, s√≥lo se puede jugar una vez por reserva", "Error", JOptionPane.WARNING_MESSAGE);
		}else {
			pz.getClient().editTimesOrdered(pz.getClient().getTimesOrdered()+1);
			pz.saveOrder();
			changeFrame(e);
			pz.initializeOrder();
			inicializarInterfaz();
		}
	}

	protected void inicializarInterfaz() {
		getTxtAreaCarrito().setText(pz.getOrderToStringShoppingCart());
		getTextAreaPedidos().setText("");

	}
	protected void inicializarInterfazNuevoUsuario() {
		getTxtAreaCarrito().setText(pz.getOrderToStringShoppingCart());
		getTextAreaPedidos().setText("");
		getTextFieldDNI().setText("");
		getPasswordFieldReserva().setText("");
		getRdbtnJugar().setSelected(true);
		getRdbtnTarjeta().setSelected(true);
	}
	protected void changeFrame(ActionEvent e) {
		String frame = e.getActionCommand();
		((CardLayout)getContentPane().getLayout()).show(getContentPane(), frame);
		setTitle("Uniovi's: " + frame);
	}
	protected void restart() {
		((CardLayout)getContentPane().getLayout()).show(getContentPane(), "Inicio");
		setTitle("Uniovi's: ");
	}
	class ProcessCart implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			showShoppingCart();
			
		}

		
		
	}
	protected void showShoppingCart() {
		if(getTxtAreaCarrito().isVisible()) {
			getTxtAreaCarrito().setVisible(false);
		}else {
			getTxtAreaCarrito().setVisible(true);
		}
	}

	/**
	 * Create the frame.
	 */
	public VentanaPrincipal(Pizzeria pz) {
		this.pz = pz;
		addWindowListener(pWHF);
		setMinimumSize(new Dimension(550, 350));
		setTitle("Uniovi's ");
		setIconImage(Toolkit.getDefaultToolkit().getImage(VentanaPrincipal.class.getResource("/img/logo.png")));
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 900, 620);
		setLocationRelativeTo(null);
		setJMenuBar(getMenuBar_4());
		contentPane = new JPanel();
		contentPane.setBackground(new Color(255, 0, 0));
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(new CardLayout(0, 0));
		contentPane.add(getPanelInicio(), "Inicio");
		contentPane.add(getPanelRegistro(), "Datos de Registro");
		contentPane.add(getPanelMenu(), "Menu");
		contentPane.add(getPanelPago(), "Revisar y Pagar");
	}

	private JPanel getPanelInicio() {
		if (panelInicio == null) {
			panelInicio = new JPanel();
			panelInicio.setBackground(new Color(255, 0, 0));
			panelInicio.setLayout(new BorderLayout(0, 0));
			panelInicio.add(getPanelBienvenida(), BorderLayout.CENTER);
			panelInicio.add(getPanelIdiomas(), BorderLayout.NORTH);
			panelInicio.add(getPanelSaludo(), BorderLayout.SOUTH);
		}
		return panelInicio;
	}
	private JPanel getPanelBienvenida() {
		if (panelBienvenida == null) {
			panelBienvenida = new JPanel();
			panelBienvenida.setBackground(new Color(0, 0, 139));
			panelBienvenida.setLayout(new BorderLayout(0, 0));
			panelBienvenida.add(getLblIngredients(), BorderLayout.CENTER);
			panelBienvenida.add(getLblIngredients2(), BorderLayout.WEST);
			panelBienvenida.add(getLblIngredients2_1(), BorderLayout.EAST);
		}
		return panelBienvenida;
	}
	private JPanel getPanelIdiomas() {
		if (panelIdiomas == null) {
			panelIdiomas = new JPanel();
			panelIdiomas.setBackground(new Color(255, 0, 0));
			panelIdiomas.setLayout(new GridLayout(0, 4, 0, 0));
			panelIdiomas.add(getBtnSpanish());
			panelIdiomas.add(getBtnEnglish());
			panelIdiomas.add(getBtnFrench());
			panelIdiomas.add(getBtnItalian());
		}
		return panelIdiomas;
	}
	private JButton getBtnSpanish() {
		if (btnSpanish == null) {
			btnSpanish = new JButton("");
			btnSpanish.setBackground(new Color(255, 255, 255));
			btnSpanish.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/es.png")));
		}
		return btnSpanish;
	}
	private JLabel getLblIngredients() {
		if (lblIngredients == null) {
			lblIngredients = new JLabel("");
			lblIngredients.setHorizontalAlignment(SwingConstants.CENTER);
			lblIngredients.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/bienvenida.png")));
		}
		return lblIngredients;
	}
	private JButton getBtnEnglish() {
		if (btnEnglish == null) {
			btnEnglish = new JButton("");
			btnEnglish.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/en.png")));
			btnEnglish.setBackground(Color.WHITE);
		}
		return btnEnglish;
	}
	private JButton getBtnFrench() {
		if (btnFrench == null) {
			btnFrench = new JButton("");
			btnFrench.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/fr.png")));
			btnFrench.setBackground(Color.WHITE);
		}
		return btnFrench;
	}
	private JButton getBtnItalian() {
		if (btnItalian == null) {
			btnItalian = new JButton("");
			btnItalian.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/it.png")));
			btnItalian.setBackground(Color.WHITE);
		}
		return btnItalian;
	}
	private JPanel getPanelSaludo() {
		if (panelSaludo == null) {
			panelSaludo = new JPanel();
			panelSaludo.setBackground(new Color(255, 0, 0));
			panelSaludo.setLayout(new GridLayout(0, 2, 0, 0));
			panelSaludo.add(getLblWelcome_1());
			panelSaludo.add(getBtnSiguiente_Datos());
		}
		return panelSaludo;
	}
	private JLabel getLblWelcome_1() {
		if (lblWelcome == null) {
			lblWelcome = new JLabel("\u00A1Bienvenido a Uniovi's!");
			lblWelcome.setHorizontalAlignment(SwingConstants.CENTER);
			lblWelcome.setForeground(Color.WHITE);
			lblWelcome.setFont(new Font("Dialog", Font.BOLD, 28));
			lblWelcome.setBorder(new LineBorder(new Color(0, 0, 0), 0));
			lblWelcome.setBackground(Color.WHITE);
		}
		return lblWelcome;
	}
	private JButton getBtnSiguiente_Datos() {
		if (btnSiguiente_Datos == null) {
			btnSiguiente_Datos = new JButton("Continuar");
			btnSiguiente_Datos.setAlignmentX(Component.RIGHT_ALIGNMENT);
			btnSiguiente_Datos.setBackground(new Color(50, 205, 50));
			btnSiguiente_Datos.setForeground(new Color(255, 255, 255));
			btnSiguiente_Datos.setFont(new Font("SansSerif", Font.PLAIN, 24));
			btnSiguiente_Datos.setMnemonic('C');
			btnSiguiente_Datos.setBorder(new LineBorder(new Color(0, 0, 0), 4, true));
			btnSiguiente_Datos.setActionCommand("Datos de Registro");
			btnSiguiente_Datos.addActionListener(pf);
		}
		return btnSiguiente_Datos;
	}
	private JLabel getLblIngredients2() {
		if (lblIngredients2 == null) {
			lblIngredients2 = new JLabel("");
			lblIngredients2.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/PI03.png")));
		}
		return lblIngredients2;
	}
	private JLabel getLblIngredients2_1() {
		if (lblIngredients2_1 == null) {
			lblIngredients2_1 = new JLabel("");
			lblIngredients2_1.setIcon(new ImageIcon(VentanaPrincipal.class.getResource("/img/BE02.png")));
		}
		return lblIngredients2_1;
	}
	private JPanel getPanelRegistro() {
		if (panelRegistro == null) {
			panelRegistro = new JPanel();
			panelRegistro.setLayout(new BorderLayout(0, 0));
			panelRegistro.add(getPanelDatos(), BorderLayout.CENTER);
			panelRegistro.add(getPanelBtn(), BorderLayout.SOUTH);
			panelRegistro.add(getPanelSpacing(), BorderLayout.EAST);
		}
		return panelRegistro;
	}
	private JPanel getPanelDatos() {
		if (panelDatos == null) {
			panelDatos = new JPanel();
			panelDatos.setBackground(new Color(0, 0, 128));
			panelDatos.setLayout(new GridLayout(6, 1, 0, 0));
			panelDatos.add(getLblDNI());
			panelDatos.add(getTextFieldDNI());
			panelDatos.add(getLblReserva());
			panelDatos.add(getPasswordFieldReserva());
		}
		return panelDatos;
	}
	private JTextField getTextFieldDNI() {
		if (textFieldDNI == null) {
			textFieldDNI = new JTextField();
			textFieldDNI.setFont(new Font("SansSerif", Font.PLAIN, 28));
			textFieldDNI.setColumns(10);
		}
		return textFieldDNI;
	}
	private JLabel getLblDNI() {
		if (lblDNI == null) {
			lblDNI = new JLabel("DNI / NIE:");
			lblDNI.setLabelFor(getTextFieldDNI());
			lblDNI.setDisplayedMnemonic('D');
			lblDNI.setForeground(new Color(255, 255, 255));
			lblDNI.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return lblDNI;
	}
	private JLabel getLblReserva() {
		if (lblReserva == null) {
			lblReserva = new JLabel("N\u00BA / C\u00F3digo de reserva");
			lblReserva.setLabelFor(getPasswordFieldReserva());
			lblReserva.setDisplayedMnemonic('N');
			lblReserva.setForeground(new Color(255, 255, 255));
			lblReserva.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return lblReserva;
	}
	private JPanel getPanelBtn() {
		if (panelBtn == null) {
			panelBtn = new JPanel();
			panelBtn.setBackground(new Color(0, 0, 128));
			panelBtn.setLayout(new GridLayout(1, 0, 0, 0));
			panelBtn.add(getLblPlaceHolder_1());
			panelBtn.add(getLblPlaceHolder());
			panelBtn.add(getBtnSiguiente_Menu());
		}
		return panelBtn;
	}
	private JLabel getLblPlaceHolder() {
		if (lblPlaceHolder == null) {
			lblPlaceHolder = new JLabel("");
			lblPlaceHolder.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder;
	}
	private JButton getBtnSiguiente_Menu() {
		if (btnSiguiente_Menu == null) {
			btnSiguiente_Menu = new JButton("Continuar");
			btnSiguiente_Menu.setForeground(new Color(255, 255, 255));
			btnSiguiente_Menu.setBackground(new Color(50, 205, 50));
			btnSiguiente_Menu.setFont(new Font("SansSerif", Font.PLAIN, 28));
			btnSiguiente_Menu.setMnemonic('C');
			btnSiguiente_Menu.setActionCommand("Menu");
			btnSiguiente_Menu.addActionListener(pf);
		}
		return btnSiguiente_Menu;
	}
	private JLabel getLblPlaceHolder_1() {
		if (lblPlaceHolder_1 == null) {
			lblPlaceHolder_1 = new JLabel("");
			lblPlaceHolder_1.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder_1;
	}
	private JPanel getPanelSpacing() {
		if (panelSpacing == null) {
			panelSpacing = new JPanel();
			panelSpacing.setBackground(new Color(0, 0, 128));
			panelSpacing.add(getLblPlaceHolder_1_1());
		}
		return panelSpacing;
	}
	private JLabel getLblPlaceHolder_1_1() {
		if (lblPlaceHolder_1_1 == null) {
			lblPlaceHolder_1_1 = new JLabel("                                                                                                            ");
			lblPlaceHolder_1_1.setBackground(new Color(0, 0, 128));
		}
		return lblPlaceHolder_1_1;
	}
	private JPanel getPanelMenu() {
		if (panelMenu == null) {
			panelMenu = new JPanel();
			panelMenu.setLayout(new BorderLayout(0, 0));
			panelMenu.add(getPanelFiltros(), BorderLayout.WEST);
			panelMenu.add(getScrollPaneProductos(), BorderLayout.CENTER);
			panelMenu.add(getPanelFinalizarMenu(), BorderLayout.SOUTH);
			panelMenu.add(getPanelCarrito(), BorderLayout.EAST);
		}
		return panelMenu;
	}
	private JPanel getPanelFiltros() {
		if (panelFiltros == null) {
			panelFiltros = new JPanel();
			panelFiltros.setLayout(new GridLayout(7, 0, 0, 0));
			panelFiltros.add(getBtnTodos());
			panelFiltros.add(getBtnPizzas());
			panelFiltros.add(getBtnEntrantes());
			panelFiltros.add(getBtnEnsaladas());
			panelFiltros.add(getBtnPostres());
			panelFiltros.add(getBtnPastas());
			panelFiltros.add(getBtnBebidas());
		}
		return panelFiltros;
	}
	private JButton getBtnTodos() {
		if (btnTodos == null) {
			btnTodos = new JButton("");
			btnTodos.setText("Todos");
			btnTodos.setVerticalTextPosition(SwingConstants.TOP);
			btnTodos.setHorizontalTextPosition(SwingConstants.CENTER);
			btnTodos.setBackground(new Color(255, 255, 255));
			btnTodos.setToolTipText("Filtrar - Todos");
			setImagenAdaptada(btnTodos, "/img/bienvenida.png");
			btnTodos.setActionCommand(String.valueOf(Pizzeria.TODOS));
			btnTodos.addActionListener(pft);
		}
		return btnTodos;
	}
	private JButton getBtnPizzas() {
		if (btnPizzas == null) {
			btnPizzas = new JButton("");
			btnPizzas.setText("Pizzas");
			btnPizzas.setVerticalTextPosition(SwingConstants.TOP);
			btnPizzas.setHorizontalTextPosition(SwingConstants.CENTER);
			btnPizzas.setBackground(new Color(255, 255, 255));
			btnPizzas.setToolTipText("Filtrar - Pizzas");
			setImagenAdaptada(btnPizzas,"/img/PI01.png");
			btnPizzas.addActionListener(pft);
			btnPizzas.setActionCommand(String.valueOf(Pizzeria.PIZZAS));
		}
		return btnPizzas;
	}
	private JButton getBtnEntrantes() {
		if (btnEntrantes == null) {
			btnEntrantes = new JButton("");
			btnEntrantes.setText("Entrantes");
			btnEntrantes.setVerticalTextPosition(SwingConstants.TOP);
			btnEntrantes.setHorizontalTextPosition(SwingConstants.CENTER);
			btnEntrantes.setBackground(new Color(255, 255, 255));
			btnEntrantes.setToolTipText("Filtrar - Entrantes");
			setImagenAdaptada(btnEntrantes, "/img/ET02.png");
			btnEntrantes.addActionListener(pft);
			btnEntrantes.setActionCommand(String.valueOf(Pizzeria.ENTRANTES));
		}
		return btnEntrantes;
	}
	private JButton getBtnEnsaladas() {
		if (btnEnsaladas == null) {
			btnEnsaladas = new JButton("Ensaladas");
			btnEnsaladas.setText("Ensaladas");
			btnEnsaladas.setVerticalTextPosition(SwingConstants.TOP);
			btnEnsaladas.setHorizontalTextPosition(SwingConstants.CENTER);
			btnEnsaladas.setBackground(new Color(255, 255, 255));
			btnEnsaladas.setToolTipText("Filtrar - Ensaladas");
			setImagenAdaptada(btnEnsaladas, "/img/EN02.png");
			btnEnsaladas.addActionListener(pft);
			btnEnsaladas.setActionCommand(String.valueOf(Pizzeria.ENSALADAS));
		}
		return btnEnsaladas;
	}
	private JButton getBtnPostres() {
		if (btnPostres == null) {
			btnPostres = new JButton("");
			btnPostres.setText("Postres");
			btnPostres.setBackground(new Color(255, 255, 255));
			btnPostres.setVerticalTextPosition(SwingConstants.TOP);
			btnPostres.setHorizontalTextPosition(SwingConstants.CENTER);
			btnPostres.setToolTipText("Filtrar - Postres");
			btnPostres.setActionCommand(String.valueOf(Pizzeria.POSTRES));
			setImagenAdaptada(btnPostres, "/img/PO01.png");
			btnPostres.addActionListener(pft);
		}
		return btnPostres;
	}
	private JButton getBtnBebidas() {
		if (btnBebidas == null) {
			btnBebidas = new JButton("");
			btnBebidas.setText("Bebidas");
			btnBebidas.setVerticalTextPosition(SwingConstants.TOP);
			btnBebidas.setHorizontalTextPosition(SwingConstants.CENTER);
			btnBebidas.setBackground(new Color(255, 255, 255));
			btnBebidas.setToolTipText("Filtrar - Bebidas");
			setImagenAdaptada(btnBebidas, "/img/BE03.png");
			btnBebidas.addActionListener(pft);
			btnBebidas.setActionCommand(String.valueOf(Pizzeria.BEBIDAS));
		}
		return btnBebidas;
	}
	private void setImagenAdaptada(JButton boton, String rutaImagen){
		 Image imgOriginal = new ImageIcon(getClass().getResource(rutaImagen)).getImage(); 
		 Image imgEscalada = imgOriginal.getScaledInstance((int) (70), (int) (70),Image.SCALE_SMOOTH);
		 //si se quiere reescalar la ventana, este 100 tendria que cambiarse por el width y el height  respectivamente de la imagen para que as√≠ se reescale cada vez que cambias el tama√±o
		 //adem√°s este m√©todo deber√≠a llamarse en el constructor de la ventana mientras se usa un evento componentResized
		 boton.setIcon(new ImageIcon(imgEscalada));
	}
	private JScrollPane getScrollPaneProductos() {
		if (scrollPaneProductos == null) {
			scrollPaneProductos = new JScrollPane();
			scrollPaneProductos.setViewportView(getPanelProductos());
		}
		return scrollPaneProductos;
	}
	private JPanel getPanelProductos() {
		if (panelProductos == null) {
			panelProductos = new JPanel();
			panelProductos.setBackground(new Color(0, 0, 128));
			panelProductos.setLayout(new GridLayout(0, 4, 40, 40));
			generarBotonesMenu(Pizzeria.TODOS);
		}
		return panelProductos;
	}
	private void quitarBotonesMenu() {
		getPanelProductos().removeAll();
		getPanelProductos().repaint();
	}
	protected void generarBotonesMenu(int filter) {
			menuModel = pz.typeOfFilter(filter);
		for(int i=0; i<menuModel.length; i++) {
			JButton j = new JButton("");
			j.setText(menuModel[i].toStringMenu());
			j.setVerticalTextPosition(SwingConstants.BOTTOM); 
			j.setHorizontalTextPosition(SwingConstants.CENTER);
			setImagenAdaptada(j, "/img/" +menuModel[i].getCode() + ".png");
			j.setBackground(Color.black);
			j.setForeground(Color.white);
			if(i==0 && menuModel[i].getType().equals("Pizza")) {
				j.setBorder(new LineBorder(Color.red, 8));
				j.setText("¬°Pizza del d√≠a! - " + j.getText());
			}
			j.setActionCommand(String.valueOf(i));
			j.addActionListener(pB);
			panelProductos.add(j);
			validate();
		}
	}
	private JPanel getPanelFinalizarMenu() {
		if (panelFinalizarMenu == null) {
			panelFinalizarMenu = new JPanel();
			panelFinalizarMenu.setBackground(new Color(128, 0, 0));
			panelFinalizarMenu.setLayout(new GridLayout(0, 5, 0, 0));
			panelFinalizarMenu.add(getLblPlaceHolderMenu());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_3());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_1());
			panelFinalizarMenu.add(getLblPlaceHolderMenu_2());
			panelFinalizarMenu.add(getBtnFinalizar());
		}
		return panelFinalizarMenu;
	}
	private JLabel getLblPlaceHolderMenu() {
		if (lblPlaceHolderMenu == null) {
			lblPlaceHolderMenu = new JLabel("");
		}
		return lblPlaceHolderMenu;
	}
	private JButton getBtnFinalizar() {
		if (btnFinalizar == null) {
			btnFinalizar = new JButton("Finalizar");
			btnFinalizar.setBorder(new LineBorder(new Color(0, 0, 0), 4));
			btnFinalizar.setMnemonic('F');
			btnFinalizar.setForeground(new Color(255, 255, 255));
			btnFinalizar.setBackground(new Color(50, 205, 50));
			btnFinalizar.setFont(new Font("SansSerif", Font.PLAIN, 28));
			btnFinalizar.setActionCommand("Revisar y Pagar");
			btnFinalizar.addActionListener(pf);
		}
		return btnFinalizar;
	}
	private JLabel getLblPlaceHolderMenu_2() {
		if (lblPlaceHolderMenu_2 == null) {
			lblPlaceHolderMenu_2 = new JLabel("");
		}
		return lblPlaceHolderMenu_2;
	}
	private JLabel getLblPlaceHolderMenu_1() {
		if (lblPlaceHolderMenu_1 == null) {
			lblPlaceHolderMenu_1 = new JLabel("");
		}
		return lblPlaceHolderMenu_1;
	}
	private JLabel getLblPlaceHolderMenu_3() {
		if (lblPlaceHolderMenu_3 == null) {
			lblPlaceHolderMenu_3 = new JLabel("");
		}
		return lblPlaceHolderMenu_3;
	}
	private JPanel getPanelCarrito() {
		if (panelCarrito == null) {
			panelCarrito = new JPanel();
			panelCarrito.setBackground(new Color(128, 0, 0));
			panelCarrito.setLayout(new BorderLayout(0, 0));
			panelCarrito.add(getBtnCarrito(), BorderLayout.NORTH);
			panelCarrito.add(getScrollPaneCarrito());
		}
		return panelCarrito;
	}
	private JButton getBtnCarrito() {
		if (btnCarrito == null) {
			btnCarrito = new JButton("");
			btnCarrito.setToolTipText("Mostrar/Ocultar Carrito");
			btnCarrito.setBackground(new Color(255, 255, 255));
			setImagenAdaptada(btnCarrito,"/img/carrito.png");
			btnCarrito.addActionListener(pCrt);
		}
		return btnCarrito;
	}
	private JScrollPane getScrollPaneCarrito() {
		if (scrollPaneCarrito == null) {
			scrollPaneCarrito = new JScrollPane();
			scrollPaneCarrito.setEnabled(false);
			scrollPaneCarrito.setViewportView(getTxtAreaCarrito());
		}
		return scrollPaneCarrito;
	}
	protected JTextArea getTxtAreaCarrito() {
		if (txtAreaCarrito == null) {
			txtAreaCarrito = new JTextArea();
			txtAreaCarrito.setBackground(new Color(255, 255, 255));
			txtAreaCarrito.setEditable(false);
			txtAreaCarrito.setVisible(false);
			txtAreaCarrito.setText(pz.getOrderToStringShoppingCart());
		}
		return txtAreaCarrito;
	}
	private JPasswordField getPasswordFieldReserva() {
		if (passwordFieldReserva == null) {
			passwordFieldReserva = new JPasswordField();
			passwordFieldReserva.setBackground(new Color(255, 255, 255));
			passwordFieldReserva.setFont(new Font("SansSerif", Font.PLAIN, 28));
		}
		return passwordFieldReserva;
	}
	private JPanel getPanelPago() {
		if (panelPago == null) {
			panelPago = new JPanel();
			panelPago.setLayout(new GridLayout(0, 2, 0, 0));
			panelPago.add(getPanelListaDePedidos());
			panelPago.add(getPanelOpcionesFinales());
		}
		return panelPago;
	}
	private JPanel getPanelListaDePedidos() {
		if(panelListaDePedidos==null) {
			panelListaDePedidos = new JPanel();
			panelListaDePedidos.setLayout(new GridLayout(pz.getOrder().getOrderList().size(), 1, 0, 0));
			//panelListaDePedidos.add(getPanelPedidoIndividual());
			panelPago.setLayout(new GridLayout(1,1,0,2));
			generarPedido();
		}
		return panelListaDePedidos;
	}
	public void generarPedido() {
		for(int i=0; i<pz.getOrder().getOrderList().size(); i++) {
			JPanel panelPedidoIndividual = new JPanel();
			panelPedidoIndividual.setLayout(new GridLayout(0,2,0,0));
			panelPedidoIndividual.add(crearEtiqueta(i));
			panelPedidoIndividual.add(crearBotonPapelera());
			getPanelListaDePedidos().add(panelPedidoIndividual);
		}
		
	}
	private JButton crearBotonPapelera() {
		JButton boton = new JButton("Borrar");
		boton.setBackground(Color.red);
		setImagenAdaptada(boton, "/img/papelera.png");
		boton.setActionCommand(getName());
		boton.addActionListener(pP);
		return boton;
	}
	private JLabel crearEtiqueta(int i) {
		JLabel label = new JLabel();
		label.setText(pz.getOrder().getOrderList().get(i).toStringShoppingCart());
		return label;
	}
	private JScrollPane getScrollPaneListaPedidos() {
		if (scrollPaneListaPedidos == null) {
			scrollPaneListaPedidos = new JScrollPane();
			scrollPaneListaPedidos.setViewportView(getTextAreaPedidos());
		}
		return scrollPaneListaPedidos;
	}
	private JPanel getPanelOpcionesFinales() {
		if (panelOpcionesFinales == null) {
			panelOpcionesFinales = new JPanel();
			panelOpcionesFinales.setBackground(new Color(0, 0, 128));
			panelOpcionesFinales.setLayout(new BorderLayout(0, 0));
			panelOpcionesFinales.add(getPanelMetodoPago(), BorderLayout.CENTER);
			panelOpcionesFinales.add(getPanelEleccionJugar(), BorderLayout.NORTH);
			panelOpcionesFinales.add(getPanelBtnFinales(), BorderLayout.SOUTH);
		}
		return panelOpcionesFinales;
	}
	public JTextArea getTextAreaPedidos() {
		if (textAreaPedidos == null) {
			textAreaPedidos = new JTextArea();
			textAreaPedidos.setText("");
			textAreaPedidos.setFont(new Font("SansSerif", Font.PLAIN, 21));
		}
		return textAreaPedidos;
	}
	private JPanel getPanelMetodoPago() {
		if (panelMetodoPago == null) {
			panelMetodoPago = new JPanel();
			panelMetodoPago.setBackground(new Color(0, 0, 128));
			panelMetodoPago.setLayout(new GridLayout(4, 1, 0, 0));
			panelMetodoPago.add(getLblOpcionesPago());
			panelMetodoPago.add(getRdbtnTarjeta());
			panelMetodoPago.add(getRdbtnEfectivo());
		}
		return panelMetodoPago;
	}
	private JPanel getPanelEleccionJugar() {
		if (panelEleccionJugar == null) {
			panelEleccionJugar = new JPanel();
			panelEleccionJugar.setBackground(new Color(0, 0, 128));
			panelEleccionJugar.setLayout(new GridLayout(3, 1, 0, 0));
			panelEleccionJugar.add(getLblOpcionesJugar());
			panelEleccionJugar.add(getRdbtnJugar());
			panelEleccionJugar.add(getRdbtnNoJugar());
		}
		return panelEleccionJugar;
	}
	private JLabel getLblOpcionesJugar() {
		if (lblOpcionesJugar == null) {
			lblOpcionesJugar = new JLabel("\u00BFQuiere jugar para descuentos?");
			lblOpcionesJugar.setForeground(new Color(255, 255, 255));
			lblOpcionesJugar.setFont(new Font("SansSerif", Font.BOLD, 27));
		}
		return lblOpcionesJugar;
	}
	private JRadioButton getRdbtnJugar() {
		if (rdbtnJugar == null) {
			rdbtnJugar = new JRadioButton("Jugar");
			rdbtnJugar.setBackground(new Color(0, 0, 128));
			rdbtnJugar.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnJugar.setSelected(true);
			rdbtnJugar.setMnemonic('J');
			buttonGroupJugar.add(rdbtnJugar);
			rdbtnJugar.setForeground(new Color(255, 255, 255));
		}
		return rdbtnJugar;
	}
	private JRadioButton getRdbtnNoJugar() {
		if (rdbtnNoJugar == null) {
			rdbtnNoJugar = new JRadioButton("No jugar");
			rdbtnNoJugar.setBackground(new Color(0, 0, 128));
			rdbtnNoJugar.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnNoJugar.setMnemonic('N');
			buttonGroupJugar.add(rdbtnNoJugar);
			rdbtnNoJugar.setForeground(new Color(255, 255, 255));
		}
		return rdbtnNoJugar;
	}
	private JLabel getLblOpcionesPago() {
		if (lblOpcionesPago == null) {
			lblOpcionesPago = new JLabel("\u00BFC\u00F3mo desea pagar?");
			lblOpcionesPago.setHorizontalAlignment(SwingConstants.LEFT);
			lblOpcionesPago.setFont(new Font("SansSerif", Font.BOLD, 27));
			lblOpcionesPago.setForeground(new Color(255, 255, 255));
		}
		return lblOpcionesPago;
	}
	private JRadioButton getRdbtnTarjeta() {
		if (rdbtnTarjeta == null) {
			rdbtnTarjeta = new JRadioButton("Tarjeta");
			rdbtnTarjeta.setBackground(new Color(0, 0, 128));
			rdbtnTarjeta.setMnemonic('T');
			rdbtnTarjeta.setSelected(true);
			buttonGroupPago.add(rdbtnTarjeta);
			rdbtnTarjeta.setFont(new Font("SansSerif", Font.PLAIN, 19));
			rdbtnTarjeta.setForeground(new Color(255, 255, 255));
			rdbtnTarjeta.setHorizontalAlignment(SwingConstants.LEFT);
		}
		return rdbtnTarjeta;
	}
	private JRadioButton getRdbtnEfectivo() {
		if (rdbtnEfectivo == null) {
			rdbtnEfectivo = new JRadioButton("Efectivo");
			rdbtnEfectivo.setBackground(new Color(0, 0, 128));
			rdbtnEfectivo.setMnemonic('E');
			buttonGroupPago.add(rdbtnEfectivo);
			rdbtnEfectivo.setForeground(new Color(255, 255, 255));
			rdbtnEfectivo.setFont(new Font("SansSerif", Font.PLAIN, 19));
		}
		return rdbtnEfectivo;
	}
	private JPanel getPanelBtnFinales() {
		if (panelBtnFinales == null) {
			panelBtnFinales = new JPanel();
			panelBtnFinales.setLayout(new GridLayout(0, 2, 0, 0));
			panelBtnFinales.add(getBtnCancelar());
			panelBtnFinales.add(getBtnFinalizaryPagar());
		}
		return panelBtnFinales;
	}
	private JButton getBtnCancelar() {
		if (btnCancelar == null) {
			btnCancelar = new JButton("Cancelar");
			btnCancelar.setBorder(new LineBorder(new Color(0, 0, 0), 4));
			btnCancelar.setForeground(new Color(255, 255, 255));
			btnCancelar.setBackground(new Color(255, 0, 0));
			btnCancelar.setFont(new Font("SansSerif", Font.PLAIN, 27));
			btnCancelar.setMnemonic('C');
			btnCancelar.setActionCommand("Menu");
			btnCancelar.addActionListener(pf);
		}
		return btnCancelar;
	}
	private JButton getBtnFinalizaryPagar() {
		if (btnFinalizaryPagar == null) {
			btnFinalizaryPagar = new JButton("Finalizar y pagar");
			btnFinalizaryPagar.setBorder(new LineBorder(new Color(0, 0, 0), 4));
			btnFinalizaryPagar.setMnemonic('F');
			btnFinalizaryPagar.setBackground(new Color(50, 205, 50));
			btnFinalizaryPagar.setForeground(new Color(255, 255, 255));
			btnFinalizaryPagar.setFont(new Font("SansSerif", Font.PLAIN, 23));
			btnFinalizaryPagar.setActionCommand("Inicio");
			btnFinalizaryPagar.addActionListener(pf);
		}
		return btnFinalizaryPagar;
	}
	private JMenuBar getMenuBar_4() {
		if (menuBar == null) {
			menuBar = new JMenuBar();
			menuBar.add(getMenu_1());
			menuBar.add(getMenu_2());
		}
		return menuBar;
	}
	private JMenu getMenu_1() {
		if (mnOptions == null) {
			mnOptions = new JMenu("Opciones");
			mnOptions.setMnemonic('O');
			mnOptions.add(getMntmNuevaSesion());
			mnOptions.add(getSeparator());
			mnOptions.add(getMntmSalida());
		}
		return mnOptions;
	}
	private JMenuItem getMntmSalida() {
		if (mntmSalida == null) {
			mntmSalida = new JMenuItem("Salida");
			mntmSalida.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_X, InputEvent.CTRL_DOWN_MASK));
			mntmSalida.addActionListener(pE);
		}
		return mntmSalida;
	}
	private JMenuItem getMntmNuevaSesion() {
		if (mntmNuevaSesion == null) {
			mntmNuevaSesion = new JMenuItem("Nueva Sesion");
			mntmNuevaSesion.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, InputEvent.CTRL_DOWN_MASK));
			mntmNuevaSesion.setActionCommand("Reinicio");
			mntmNuevaSesion.addActionListener(pf);
		}
		return mntmNuevaSesion;
	}
	private JSeparator getSeparator() {
		if (separator == null) {
			separator = new JSeparator();
		}
		return separator;
	}
	private JMenu getMenu_2() {
		if (mnAyuda == null) {
			mnAyuda = new JMenu("Ayuda");
			mnAyuda.setMnemonic('A');
			mnAyuda.add(getMntmAyuda());
		}
		return mnAyuda;
	}
	private JMenuItem getMntmAyuda() {
		if (mntmAyuda == null) {
			mntmAyuda = new JMenuItem("Abrir men\u00FA de ayuda");
			mntmAyuda.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F1, InputEvent.CTRL_DOWN_MASK));
		}
		return mntmAyuda;
	}
	private JButton getBtnPastas() {
		if (btnPastas == null) {
			btnPastas = new JButton("Pastas");
			btnPastas.setVerticalTextPosition(SwingConstants.TOP);
			btnPastas.setToolTipText("Filtrar - Pastas");
			btnPastas.setHorizontalTextPosition(SwingConstants.CENTER);
			btnPastas.setBackground(Color.WHITE);
			btnPastas.setActionCommand(String.valueOf(Pizzeria.PASTAS));
			btnPastas.addActionListener(pft);
			setImagenAdaptada(btnPastas, "/img/PA02.png");
		}
		return btnPastas;
	}
	
	private JPanel getPanelPedidoIndividual() {
		if (panelPedidoIndividual == null) {
			panelPedidoIndividual = new JPanel();
			panelPedidoIndividual.setLayout(new GridLayout(0, 2, 0, 0));
			panelPedidoIndividual.add(getLblProducto());
			panelPedidoIndividual.add(getBtnPapelera());
		}
		return panelPedidoIndividual;
	}
	private JLabel getLblProducto() {
		if (lblProducto == null) {
			lblProducto = new JLabel("New label");
		}
		return lblProducto;
	}
	private JButton getBtnPapelera() {
		if (btnPapelera == null) {
			btnPapelera = new JButton("Borrar");
			btnPapelera.setBackground(Color.red);
		}
		return btnPapelera;
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2024-12-30 17:32:07.929
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2024-12-30 17:32:07.929
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3263)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3719)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 17:50:00.027
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 17:51:44.341
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
!SESSION 2024-12-30 21:40:01.610 -----------------------------------------------
eclipse.buildId=4.23.0.I20220308-0310
java.version=17.0.2
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=es_ES
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.core.resources 2 10035 2024-12-30 21:40:11.570
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.jface 2 0 2024-12-30 21:40:28.710
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2024-12-30 21:40:28.710
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@70819ba8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@446a692f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2024-12-30 21:40:28.710
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@283ecb4b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@a30dbc0,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2024-12-30 21:40:37.268
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\El√≠as'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 21:41:47.376
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 21:46:15.342
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2024-12-30 21:47:26.104
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:267)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:347)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:368)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:284)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:199)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:192)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:462)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:182)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:148)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
